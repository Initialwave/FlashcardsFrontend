[
	{
		"question" : "34) What do you understand by copy constructor in Java?",
		"answer" : "<div> <p>There is no copy constructor in java. However, we can copy the values from one object to another like copy constructor in C++.</p><p>There are many ways to copy the values of one object into another in java. They are:</p><ul class=\"points\">\n<li>By constructor</li>\n<li>By assigning the values of one object into another</li>\n<li>By clone() method of Object class</li>\n</ul><p>In this example, we are going to copy the values of one object into another using java constructor.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">//Java program to initialize the values from one object to another\nclass Student6{\n    int id;\n    String name;\n    //constructor to initialize integer and string\n    Student6(int i,String n){\n    id = i;\n    name = n;\n    }\n    //constructor to initialize another object\n    Student6(Student6 s){\n    id = s.id;\n    name =s.name;\n    }\n    void display(){System.out.println(id+\" \"+name);}\n \n    public static void main(String args[]){\n    Student6 s1 = new Student6(111,\"Karan\");\n    Student6 s2 = new Student6(s1);\n    s1.display();\n    s2.display();\n   }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Output:</p><div class=\"codeblock3\"><pre>111 Karan\n111 Karan\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 1
	},
	{
		"question" : "57) What is the Inheritance?",
		"answer" : "<div> <p>Inheritance is a mechanism by which one object acquires all the properties and behavior of another object of another class. It is used for Code Reusability and Method Overriding. The idea behind inheritance in Java is that you can create new classes that are built upon existing classes. When you inherit from an existing class, you can reuse methods and fields of the parent class. Moreover, you can add new methods and fields in your current class also. Inheritance represents the IS-A relationship which is also known as a parent-child relationship.\n</p><p>There are five types of inheritance in Java.</p><ul class=\"points\">\n<li>Single-level inheritance</li>\n<li>Multi-level inheritance</li>\n<li>Multiple Inheritance</li>\n<li>Hierarchical Inheritance</li>\n<li>Hybrid Inheritance</li>\n</ul><p>Multiple inheritance is not supported in Java through class.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 2
	},
	{
		"question" : "35) What are the differences between the constructors and methods?",
		"answer" : "<div> <p>There are many differences between constructors and methods. They are given below.</p><table class=\"alt\">\n<tbody><tr><th>Java Constructor</th><th>Java Method</th></tr>\n<tr><td>A constructor is used to initialize the state of an object.</td><td>A method is used to expose the behavior of an object.</td></tr>\n<tr><td>A constructor must not have a return type.</td><td>A method must have a return type.</td></tr>\n<tr><td>The constructor is invoked implicitly.</td><td>The method is invoked explicitly.</td></tr>\n<tr><td>The Java compiler provides a default constructor if you don't have any constructor in a class.</td><td>The method is not provided by the compiler in any case.</td></tr>\n<tr><td>The constructor name must be same as the class name.</td><td> The method name may or may not be same as class name.</td></tr>\n</tbody></table><br><img src=\"https://static.javatpoint.com/images/constructor-vs-method-in-java.jpg\" alt=\"Java Constructors vs Methods\"></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 3
	},
	{
		"question" : "58) Why is Inheritance used in Java? ",
		"answer" : "<div> <p>There are various advantages of using inheritance in Java that is given below.</p><ul class=\"points\">\n<li>Inheritance provides code reusability. The derived class does not need to redefine the method of base class unless it needs to provide the specific implementation of the method.</li>\n<li>Runtime polymorphism cannot be achieved without using inheritance.</li>\n<li>We can simulate the inheritance of classes with the real-time objects which makes OOPs more realistic.</li>\n<li>Inheritance provides data hiding. The base class can hide some data from the derived class by making it private.</li>\n<li>Method overriding cannot be achieved without inheritance. By method overriding, we can give a specific implementation of some basic method contained by the base class.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 4
	},
	{
		"question" : "8) What is the platform?",
		"answer" : "<div> <p>A platform is the hardware or software environment in which a piece of software is executed. There are two types of platforms, software-based and hardware-based. Java provides the software-based platform.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 5
	},
	{
		"question" : "59) Which class is the superclass for all the classes? ",
		"answer" : "<div> <p>The object class is the superclass of all other classes in Java.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 6
	},
	{
		"question" : "9) What are the main differences between the Java platform and other platforms?",
		"answer" : "<div> <p>There are the following differences between the Java platform and other platforms.</p><ul class=\"points\">\n<li>Java is the software-based platform whereas other platforms may be the hardware platforms or software-based platforms.</li>\n<li>Java is executed on the top of other hardware platforms whereas other platforms can only have the hardware components.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 7
	},
	{
		"question" : "1) What is Java?",
		"answer" : "<div> <p><a>Java</a> is the high-level, <a>object-oriented</a>, robust, secure programming language, platform-independent, high performance, Multithreaded, and portable programming language. It was developed by <strong><a>James Gosling</a></strong> in June 1991. It can also be known as the platform as it provides its own JRE and API. </p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 8
	},
	{
		"question" : "36) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Test \n{\n    Test(int a, int b)\n    {\n        System.out.println(\"a = \"+a+\" b = \"+b);\n    }\n    Test(int a, float b)\n    {\n        System.out.println(\"a = \"+a+\" b = \"+b);\n    }\n    public static void main (String args[])\n    {\n        byte a = 10; \n        byte b = 15;\n        Test test = new Test(a,b);\n    }\n}\n</textarea></div><p>The output of the following program is:</p><div class=\"codeblock3\"><pre>a = 10 b = 15\n</pre></div><p>Here, the data type of the variables a and b, i.e., byte gets promoted to int, and the first parameterized constructor with the two integer parameters is called.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 9
	},
	{
		"question" : "2) What are the differences between C++ and Java?",
		"answer" : "<div> <p>The differences between <a>C++</a> and Java are given in the following table.</p><table class=\"alt\">\n<tbody><tr><th>Comparison Index</th> <th>C++</th><th>Java</th></tr>\n<tr><td><strong>Platform-independent</strong></td><td>C++ is platform-dependent.</td><td>Java is platform-independent.</td></tr>\n<tr><td><strong>Mainly used for</strong></td><td>C++ is mainly used for system programming.</td><td>Java is mainly used for application programming. It is widely used in window, web-based, enterprise and mobile applications.</td></tr>\n<tr><td><strong>Design Goal</strong></td><td>C++ was designed for systems and applications programming. It was an extension of <a>C programming language</a>.</td><td>Java was designed and created as an interpreter for printing systems but later extended as a support network computing. It was designed with a goal of being easy to use and accessible to a broader audience.\n</td></tr>\n<tr><td><strong>Goto</strong></td><td>C++ supports the <a>goto</a> statement.</td><td>Java doesn't support the goto statement.</td></tr>\n<tr><td><strong>Multiple inheritance</strong></td><td>C++ supports multiple inheritance.</td><td>Java doesn't support multiple inheritance through class. It can be achieved by <a>interfaces in java</a>.</td></tr>\n<tr><td><strong>Operator Overloading</strong></td><td>C++ supports <a>operator overloading</a>.</td><td>Java doesn't support operator overloading.</td></tr>\n<tr><td><strong>Pointers</strong></td><td>C++ supports <a>pointers</a>. You can write pointer program in C++.</td><td>Java supports pointer internally. However, you can't write the pointer program in java. It means java has restricted pointer support in Java.</td></tr>\n<tr><td><strong>Compiler and Interpreter</strong></td><td>C++ uses compiler only. C++ is compiled and run using the compiler which converts source code into machine code so, C++ is platform dependent.\n</td><td>Java uses compiler and interpreter both. Java source code is converted into bytecode at compilation time. The interpreter executes this bytecode at runtime and produces output. Java is interpreted that is why it is platform independent. </td></tr>\n<tr><td><strong>Call by Value and Call by reference</strong></td><td>C++ supports both call by value and call by reference.</td><td>Java supports call by value only. There is no call by reference in java.</td></tr>\n<tr><td><strong>Structure and Union</strong></td><td>C++ supports structures and unions.</td><td>Java doesn't support structures and unions.</td></tr>\n<tr><td><strong>Thread Support</strong></td><td>C++ doesn't have built-in support for threads. It relies on third-party libraries for thread support.</td><td>Java has built-in <a>thread</a> support.</td></tr>\n<tr><td><strong>Documentation comment</strong></td><td>C++ doesn't support documentation comment.</td><td>Java supports documentation comment (/** ... */) to create documentation for java source code.</td></tr>\n<tr><td><strong>Virtual Keyword</strong></td><td>C++ supports virtual keyword so that we can decide whether or not override a function.</td><td>Java has no virtual keyword. We can override all non-static methods by default. In other words, non-static methods are virtual by default.</td></tr>\n<tr><td><strong>unsigned right shift &gt;&gt;&gt;</strong></td><td>C++ doesn't support &gt;&gt;&gt; operator.</td><td>Java supports unsigned right shift &gt;&gt;&gt; operator that fills zero at the top for the negative numbers. For positive numbers, it works same like &gt;&gt; operator.</td></tr>\n<tr><td><strong>Inheritance Tree</strong></td><td>C++ creates a new inheritance tree always.</td><td>Java uses a single inheritance tree always because all classes are the child of Object class in java. The object class is the root of the <a>inheritance</a> tree in java.</td></tr>\n<tr><td><strong>Hardware</strong></td><td>C++ is nearer to hardware.</td><td>Java is not so interactive with hardware.</td></tr>\n<tr><td><strong>Object-oriented</strong></td><td>C++ is an object-oriented language. However, in C language, single root hierarchy is not possible.</td><td>Java is also an <a>object-oriented</a> language. However, everything (except fundamental types) is an object in Java. It is a single root hierarchy as everything gets derived from java.lang.Object.\n</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 10
	},
	{
		"question" : "37) What is the output of the following Java program? ",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Test \n{\n\tint i; \n}\npublic class Main \n{\n\tpublic static void main (String args[]) \n\t{\n\t\tTest test = new Test(); \n\t\tSystem.out.println(test.i);\n\t}\n}\n</textarea></div><p>The output of the program is 0 because the variable i is initialized to 0 internally. As we know that a default constructor is invoked implicitly if there is no constructor in the class, the variable i is initialized to 0 since there is no constructor in the class.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 11
	},
	{
		"question" : "38) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Test \n{\n\tint test_a, test_b;\n\tTest(int a, int b) \n\t{\n\ttest_a = a; \n\ttest_b = b; \n\t}\n\tpublic static void main (String args[]) \n\t{\n\t\tTest test = new Test(); \n\t\tSystem.out.println(test.test_a+\" \"+test.test_b);\n\t}\n}\n</textarea></div><p>There is a <strong>compiler error</strong> in the program because there is a call to the default constructor in the main method which is not present in the class. However, there is only one parameterized constructor in the class Test. Therefore, no default constructor is invoked by the constructor implicitly.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 12
	},
	{
		"question" : "60) Why is multiple inheritance not supported in java?",
		"answer" : "<div> <p>To reduce the complexity and simplify the language, multiple inheritance is not supported in java. Consider a scenario where A, B, and C are three classes. The C class inherits A and B classes. If A and B classes have the same method and you call it from child class object, there will be ambiguity to call the method of A or B class.</p><p>Since the compile-time errors are better than runtime errors, Java renders compile-time error if you inherit 2 classes. So whether you have the same method or different, there will be a compile time error.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class A{\nvoid msg(){System.out.println(\"Hello\");}\n}\nclass B{\nvoid msg(){System.out.println(\"Welcome\");}\n}\nclass C extends A,B{//suppose if it were\n \n Public Static void main(String args[]){\n   C obj=new C();\n   obj.msg();//Now which msg() method would be invoked?\n}\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><div class=\"codeblock3\"><pre> Compile Time Error\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 13
	},
	{
		"question" : "61) What is aggregation? ",
		"answer" : "<div> <p>Aggregation can be defined as the relationship between two classes where the aggregate class contains a reference to the class it owns. Aggregation is best described as a <strong>has-a</strong> relationship. For example, The aggregate class Employee having various fields such as age, name, and salary also contains an object of Address class having various fields such as Address-Line 1, City, State, and pin-code. In other words, we can say that Employee (class) has an object of Address class. Consider the following example.</p><p><strong>Address.java</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Address {\nString city,state,country;\n\npublic Address(String city, String state, String country) {\n\tthis.city = city;\n\tthis.state = state;\n\tthis.country = country;\n}\n\n}\n</textarea></div><p><strong>Employee.java</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">\npublic class Emp {\nint id;\nString name;\nAddress address;\n\npublic Emp(int id, String name,Address address) {\n\tthis.id = id;\n\tthis.name = name;\n\tthis.address=address;\n}\n\nvoid display(){\nSystem.out.println(id+\" \"+name);\nSystem.out.println(address.city+\" \"+address.state+\" \"+address.country);\n}\n\npublic static void main(String[] args) {\nAddress address1=new Address(\"gzb\",\"UP\",\"india\");\nAddress address2=new Address(\"gno\",\"UP\",\"india\");\n\nEmp e=new Emp(111,\"varun\",address1);\nEmp e2=new Emp(112,\"arun\",address2);\n\t\ne.display();\ne2.display();\n\t\n}\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>111 varun\ngzb UP india\n112 arun\ngno UP india \n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 14
	},
	{
		"question" : "10) What gives Java its 'write once and run anywhere' nature? ",
		"answer" : "<div> <p>The bytecode. Java compiler converts the Java programs into the class file (Byte Code) which is the intermediate language between source code and machine code. This bytecode is not platform specific and can be executed on any computer.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 15
	},
	{
		"question" : "11) What is classloader?",
		"answer" : "<div> <p>Classloader is a subsystem of JVM which is used to load class files. Whenever we run the java program, it is loaded first by the classloader. There are three built-in classloaders in Java.</p><ol class=\"points\">\n<li><strong>Bootstrap ClassLoader</strong>: This is the first classloader which is the superclass of Extension classloader. It loads the <em>rt.jar</em> file which contains all class files of Java Standard Edition like java.lang package classes, java.net package classes, java.util package classes, java.io package classes, java.sql package classes, etc.</li>\n<li><strong>Extension ClassLoader</strong>: This is the child classloader of Bootstrap and parent classloader of System classloader. It loads the jar files located inside <em>$JAVA_HOME/jre/lib/ext</em> directory.</li>\n<li><strong>System/Application ClassLoader</strong>: This is the child classloader of Extension classloader. It loads the class files from the classpath. By default, the classpath is set to the current directory. You can change the classpath using \"-cp\" or \"-classpath\" switch. It is also known as Application classloader.</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 16
	},
	{
		"question" : "39) What is the static variable?",
		"answer" : "<div> <p>\nThe static variable is used to refer to the common property of all objects (that is not unique for each object), e.g., The company name of employees, college name of students, etc. Static variable gets memory only once in the class area at the time of class loading. Using a static variable makes your program more memory efficient (it saves memory). Static variable belongs to the class rather than the object.\n</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">//Program of static variable\n\nclass Student8{\n   int rollno;\n   String name;\n   static String college =\"ITS\";\n   \n   Student8(int r,String n){\n   rollno = r;\n   name = n;\n   }\n void display (){System.out.println(rollno+\" \"+name+\" \"+college);}\n\n public static void main(String args[]){\n Student8 s1 = new Student8(111,\"Karan\");\n Student8 s2 = new Student8(222,\"Aryan\");\n \n s1.display();\n s2.display();\n }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><div class=\"codeblock3\"><pre>Output:111 Karan ITS\n       222 Aryan ITS\n</pre></div><img alt=\"Static Variable\" src=\"https://static.javatpoint.com/images/staticvariable.JPG\"><br></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 17
	},
	{
		"question" : "62) What is composition? ",
		"answer" : "<div> <p> Holding the reference of a class within some other class is known as composition. When an object contains the other object, if the contained object cannot exist without the existence of container object, then it is called composition. In other words, we can say that composition is the particular case of aggregation which represents a stronger relationship between two objects.\nExample: A class contains students. A student cannot exist without a class. There exists composition between class and students. </p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 18
	},
	{
		"question" : "63) What is the difference between aggregation and composition? ",
		"answer" : "<div> <p>Aggregation represents the weak relationship whereas composition represents the strong relationship. For example, the bike has an indicator (aggregation), but the bike has an engine (composition).</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 19
	},
	{
		"question" : "12) Is Empty .java file name a valid source file name?",
		"answer" : "<div> <p>Yes, Java allows to save our java file by <strong>.java</strong> only, we need to compile it by <strong>javac .java</strong> and run by <strong>java classname</strong> Let's take a simple example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">//save by .java only\nclass A{\npublic static void main(String args[]){\nSystem.out.println(\"Hello java\");\n}\n}\n//compile by javac .java\n//run by     java A\n</textarea></div><p>compile it by <strong>javac .java</strong> </p><p>run it by <strong>java A</strong></p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 20
	},
	{
		"question" : "13) Is delete, next, main, exit or null keyword in java?",
		"answer" : "<div> <p>No.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 21
	},
	{
		"question" : "14) If I don't provide any arguments on the command line, then what will the value stored in the String array passed into the main() method, empty or NULL?",
		"answer" : "<div> <p>It is empty, but not null.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 22
	},
	{
		"question" : "15) What if I write static public void instead of public static void?",
		"answer" : "<div> <p>The program compiles and runs correctly because the order of specifiers doesn't matter in Java.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 23
	},
	{
		"question" : "16) What is the default value of the local variables? ",
		"answer" : "<div> <p>The local variables are not initialized to any default value, neither primitives nor object references. </p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 24
	},
	{
		"question" : "17) What are the various access specifiers in Java?",
		"answer" : "<div> <p>In Java, access specifiers are the keywords which are used to define the access scope of the method, class, or a variable. In Java, there are four access specifiers given below.</p><ul class=\"points\">\n<li><strong>Public</strong> The classes, methods, or variables which are defined as public, can be accessed by any class or method.</li>\n<li><strong>Protected</strong> Protected can be accessed by the class of the same package, or by the sub-class of this class, or within the same class.</li>\n<li><strong>Default</strong> Default are accessible within the package only. By default, all the classes, methods, and variables are of default scope.</li>\n<li><strong>Private</strong> The private class, methods, or variables defined as private can be accessed within the class only.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 25
	},
	{
		"question" : "18) What is the purpose of static methods and variables?",
		"answer" : "<div> <p>The methods or variables defined as static are shared among all the objects of the class. The static is the part of the class and not of the object. The static variables are stored in the class area, and we do not need to create the object to access such variables. Therefore, static is used in the case, where we need to define variables or methods which are common to all the objects of the class.</p><p>For example, In the class simulating the collection of the students in a college, the name of the college is the common attribute to all the students. Therefore, the college name will be defined as <strong>static</strong>.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 26
	},
	{
		"question" : "19) What are the advantages of Packages in Java?",
		"answer" : "<div> <p>There are various advantages of defining packages in Java.</p><ul class=\"points\">\n<li>Packages avoid the name clashes.</li>\n<li>The Package provides easier access control.</li>\n<li>We can also have the hidden classes that are not visible outside and used by the package.</li>\n<li>It is easier to locate the related classes.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 27
	},
	{
		"question" : "20) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Test \n{\n\tpublic static void main (String args[]) \n\t{\n\t\tSystem.out.println(10 + 20 + \"Javatpoint\"); \n\t\tSystem.out.println(\"Javatpoint\" + 10 + 20);\n\t}\n}\n</textarea></div><p>The output of the above code will be</p><div class=\"codeblock\"><pre>30Javatpoint\nJavatpoint1020\n</pre></div><p><strong>Explanation</strong></p><p>In the first case, 10 and 20 are treated as numbers and added to be 30. Now, their sum 30 is treated as the string and concatenated with the string <strong>Javatpoint</strong>. Therefore, the output will be <strong>30Javatpoint</strong>.</p><p>In the second case, the string Javatpoint is concatenated with 10 to be the string <strong>Javatpoint10</strong> which will then be concatenated with 20 to be <strong>Javatpoint1020</strong>.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 28
	},
	{
		"question" : "21) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Test \n{\n\tpublic static void main (String args[]) \n\t{\n\t\tSystem.out.println(10 * 20 + \"Javatpoint\"); \n\t\tSystem.out.println(\"Javatpoint\" + 10 * 20);\n\t}\n}\n</textarea></div><p>The output of the above code will be</p><div class=\"codeblock\"><pre>200Javatpoint\nJavatpoint200\n</pre></div><p><strong>Explanation</strong></p><p>In the first case, The numbers 10 and 20 will be multiplied first and then the result 200 is treated as the string and concatenated with the string <strong>Javatpoint</strong> to produce the output <strong>200Javatpoint</strong>.</p><p>In the second case, The numbers 10 and 20 will be multiplied first to be 200 because the precedence of the multiplication is higher than addition. The result 200 will be treated as the string and concatenated with the string <strong>Javatpoint</strong>to produce the output as <strong>Javatpoint200</strong>.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 29
	},
	{
		"question" : "22) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Test \n{\n\tpublic static void main (String args[]) \n\t{\n\t\tfor(int i=0; 0; i++) \n\t\t{\n\t\t\tSystem.out.println(\"Hello Javatpoint\");\n\t\t}\n\t}\n}\n</textarea></div><p>The above code will give the compile-time error because the for loop demands a boolean value in the second part and we are providing an integer value, i.e., 0.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 30
	},
	{
		"question" : "23) What is object-oriented paradigm?",
		"answer" : "<div> <p>It is a programming paradigm based on objects having data and methods defined in the class to which it belongs. Object-oriented paradigm aims to incorporate the advantages of modularity and reusability. Objects are the instances of classes which interacts with one another to design applications and programs. There are the following features of the object-oriented paradigm.</p><ul class=\"points\">\n<li>Follows the bottom-up approach in program design.</li>\n<li>Focus on data with methods to operate upon the object's data</li>\n<li>Includes the concept like Encapsulation and abstraction which hides the complexities from the user and show only functionality.</li>\n<li>Implements the real-time approach like inheritance, abstraction, etc.</li>\n<li>The examples of the object-oriented paradigm are C++, Simula, Smalltalk, Python, C#, etc.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 31
	},
	{
		"question" : "24) What is an object?",
		"answer" : "<div> <p>The Object is the real-time entity having some state and behavior. In Java, Object is an instance of the class having the instance variables as the state of the object and the methods as the behavior of the object. The object of a class can be created by using the <strong>new</strong> keyword.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 32
	},
	{
		"question" : "25) What is the difference between an object-oriented programming language and object-based programming language?",
		"answer" : "<div> <p>There are the following basic differences between the object-oriented language and object-based language.</p><ul class=\"points\">\n<li>Object-oriented languages follow all the concepts of OOPs whereas, the object-based language doesn't follow all the concepts of OOPs like inheritance and polymorphism.</li>\n<li>Object-oriented languages do not have the inbuilt objects whereas Object-based languages have the inbuilt objects, for example, JavaScript has window object.</li>\n<li>Examples of object-oriented programming are Java, C#, Smalltalk, etc. whereas the examples of object-based languages are JavaScript, VBScript, etc. </li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 33
	},
	{
		"question" : "26) What will be the initial value of an object reference which is defined as an instance variable? ",
		"answer" : "<div> <p>All object references are initialized to null in Java.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 34
	},
	{
		"question" : "27) What is the constructor?",
		"answer" : "<div> <p>The constructor can be defined as the special type of method that is used to initialize the state of an object. It is invoked when the class is instantiated, and the memory is allocated for the object. Every time, an object is created using the <strong>new</strong> keyword, the default constructor of the class is called. The name of the constructor must be similar to the class name. The constructor must not have an explicit return type.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 35
	},
	{
		"question" : "64) Why does Java not support pointers? ",
		"answer" : "<div> <p>The pointer is a variable that refers to the memory address. They are not used in Java because they are unsafe(unsecured) and complex to understand.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 36
	},
	{
		"question" : "40) What is the static method?",
		"answer" : "<div> <ul>\n<li>A static method belongs to the class rather than the object.</li>\n<li>There is no need to create the object to call the static methods.</li>\n<li>A static method can access and change the value of the static variable.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 37
	},
	{
		"question" : "28) How many types of constructors are used in Java?",
		"answer" : "<div> <p>Based on the parameters passed in the constructors, there are two types of constructors in Java.</p><ul class=\"points\">\n<li><strong>Default Constructor:</strong> default constructor is the one which does not accept any value. The default constructor is mainly used to initialize the instance variable with the default values. It can also be used for performing some useful task on object creation. A default constructor is invoked implicitly by the compiler if there is no constructor defined in the class.</li>\n<li><strong>Parameterized Constructor:</strong> The parameterized constructor is the one which can initialize the instance variables with the given values. In other words, we can say that the constructors which can accept the arguments are called parameterized constructors.</li>\n</ul><img src=\"https://static.javatpoint.com/images/core/java-constructor.png\" alt=\"Java Constructors\"></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 38
	},
	{
		"question" : "65) What is super in java?",
		"answer" : "<div> <p>The <strong>super</strong> keyword in Java is a reference variable that is used to refer to the immediate parent class object. Whenever you create the instance of the subclass, an instance of the parent class is created implicitly which is referred by super reference variable. The super() is called in the class constructor implicitly by the compiler if there is no super or this.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Animal{\nAnimal(){System.out.println(\"animal is created\");}\n}\nclass Dog extends Animal{\nDog(){\nSystem.out.println(\"dog is created\");\n}\n}\nclass TestSuper4{\npublic static void main(String args[]){\nDog d=new Dog();\n}\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Output:</p><div class=\"codeblock3\"><pre>animal is created\ndog is created\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 39
	},
	{
		"question" : "41) What are the restrictions that are applied to the Java static methods?",
		"answer" : "<div> <p>Two main restrictions are applied to the static methods.</p><ul class=\"points\">\n<li>The static method can not use non-static data member or call the non-static method directly.</li>\n<li>this and super cannot be used in static context as they are non-static.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 40
	},
	{
		"question" : "29) What is the purpose of a default constructor?",
		"answer" : "<div> <p>The purpose of the default constructor is to assign the default value to the objects. The java compiler creates a default constructor implicitly if there is no constructor in the class. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">\nclass Student3{\nint id;\nString name;\n\nvoid display(){System.out.println(id+\" \"+name);}\n\npublic static void main(String args[]){\nStudent3 s1=new Student3();\nStudent3 s2=new Student3();\ns1.display();\ns2.display();\n}\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Output:</p><div class=\"codeblock\"><pre>0 null\n0 null\n</pre></div><p><b>Explanation:</b> In the above class, you are not creating any constructor, so compiler provides you a default constructor. Here 0 and null values are provided by default constructor.</p><img src=\"https://static.javatpoint.com/images/default-constructor1.png\" alt=\"Java default constructor\"><br></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 41
	},
	{
		"question" : "66) How can constructor chaining be done by using the super keyword?",
		"answer" : "<div> <p></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Person\n{\n    String name,address; \n    int age;\n    public Person(int age, String name, String address)\n    {\n        this.age = age;\n        this.name = name;\n        this.address = address;\n    }\n}\nclass Employee extends Person \n{\n    float salary;\n    public Employee(int age, String name, String address, float salary)\n    {\n        super(age,name,address);\n        this.salary = salary;\n    }\n}\npublic class Test \n{\n    public static void main (String args[])\n    {\n        Employee e = new Employee(22, \"Mukesh\", \"Delhi\", 90000);\n        System.out.println(\"Name: \"+e.name+\" Salary: \"+e.salary+\" Age: \"+e.age+\" Address: \"+e.address);\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>Name: Mukesh Salary: 90000.0 Age: 22 Address: Delhi\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 42
	},
	{
		"question" : "30) Does constructor return any value?",
		"answer" : "<div> <p><b>Ans:</b> yes, The constructor implicitly returns the current instance of the class (You can't use an explicit return type with the constructor).<a> More Details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 43
	},
	{
		"question" : "42) Why is the main method static?",
		"answer" : "<div> <p>Because the object is not required to call the static method. If we make the main method non-static, JVM will have to create its object first and then call main() method which will lead to the extra memory allocation.<a> More Details.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 44
	},
	{
		"question" : "31)Is constructor inherited?",
		"answer" : "<div> <p>No, The constructor is not inherited.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 45
	},
	{
		"question" : "67) What are the main uses of the super keyword?",
		"answer" : "<div> <p>There are the following uses of super keyword.</p><ul class=\"points\">\n<li>super can be used to refer to the immediate parent class instance variable.</li>\n<li>super can be used to invoke the immediate parent class method.</li>\n<li>super() can be used to invoke immediate parent class constructor.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 46
	},
	{
		"question" : "32) Can you make a constructor final?",
		"answer" : "<div> <p>No, the constructor can't be final.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 47
	},
	{
		"question" : "44) What is the static block?",
		"answer" : "<div> <p>No, we can't override static methods.\n</p><p> Static block is used to initialize the static data member. It is executed before the main method, at the time of classloading.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class A2{\n  static{System.out.println(\"static block is invoked\");}\n  public static void main(String args[]){\n   System.out.println(\"Hello main\");\n  }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><div class=\"codeblock3\"><pre>Output: static block is invoked\n       Hello main\n</pre></div><br></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 48
	},
	{
		"question" : "68) What are the differences between this and super keyword?",
		"answer" : "<div> <p>There are the following differences between this and super keyword.</p><ul class=\"points\">\n<li>The super keyword always points to the parent class contexts whereas this keyword always points to the current class context.</li>\n<li>The super keyword is primarily used for initializing the base class variables within the derived class constructor whereas this keyword primarily used to differentiate between local and instance variables when passed in the class constructor.</li>\n<li>The super and this must be the first statement inside constructor otherwise the compiler will throw an error.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 49
	},
	{
		"question" : "33) Can we overload the constructors?",
		"answer" : "<div> <p>Yes, the constructors can be overloaded by changing the number of arguments accepted by the constructor or by changing the data type of the parameters. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Test \n{\n\tint i; \n\tpublic Test(int k)\n\t{\n\t    i=k;\n\t}\n\tpublic Test(int k, int m)\n\t{\n\t    System.out.println(\"Hi I am assigning the value max(k, m) to i\");\n\t    if(k&gt;m)\n\t    {\n\t        i=k; \n\t    }\n\t    else \n\t    {\n\t        i=m;\n\t    }\n\t}\n}\npublic class Main \n{\n\tpublic static void main (String args[]) \n\t{\n\t\tTest test1 = new Test(10);\n\t\tTest test2 = new Test(12, 15);\n\t\tSystem.out.println(test1.i);\n\t\tSystem.out.println(test2.i);\n\t}\n}\n\t</textarea></div><p>In the above program, The constructor Test is overloaded with another constructor. In the first call to the constructor, The constructor with one argument is called, and i will be initialized with the value 10. However, In the second call to the constructor, The constructor with the 2 arguments is called, and i will be initialized with the value 15.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 50
	},
	{
		"question" : "45) Can we execute a program without main() method?",
		"answer" : "<div> <p>Ans) No, It was possible before JDK 1.7 using the static block. Since JDK 1.7, it is not possible. <a> More Details.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 51
	},
	{
		"question" : "3) List the features of Java Programming language.",
		"answer" : "<div> <p>There are the following features in Java Programming Language.</p><ul class=\"points\">\n<li><strong>Simple:</strong> Java is easy to learn. The syntax of Java is based on C++ which makes easier to write the program in it. </li><br>\n<li><strong>Object-Oriented:</strong> Java follows the object-oriented paradigm which allows us to maintain our code as the combination of different type of objects that incorporates both data and behavior.</li><br>\n<li><strong>Portable:</strong> Java supports read-once-write-anywhere approach. We can execute the Java program on every machine. Java program (.java) is converted to bytecode (.class) which can be easily run on every machine.</li><br>\n<li><strong>Platform Independent:</strong> Java is a platform independent programming language. It is different from other programming languages like C and C++ which needs a platform to be executed. Java comes with its platform on which its code is executed. Java doesn't depend upon the operating system to be executed. </li><br>\n<li><strong>Secured:</strong> Java is secured because it doesn't use explicit pointers. Java also provides the concept of ByteCode and Exception handling which makes it more secured.</li><br>\n<li><strong>Robust:</strong> Java is a strong programming language as it uses strong memory management. The concepts like Automatic garbage collection, Exception handling, etc. make it more robust. </li><br>\n<li><strong>Architecture Neutral:</strong> Java is architectural neutral as it is not dependent on the architecture. In C, the size of data types may vary according to the architecture (32 bit or 64 bit) which doesn't exist in Java.</li><br>\n<li><strong>Interpreted:</strong> Java uses the Just-in-time (JIT) interpreter along with the compiler for the program execution.</li><br>\n<li><strong>High Performance:</strong> Java is faster than other traditional interpreted programming languages because Java bytecode is \"close\" to native code. It is still a little bit slower than a compiled language (e.g., C++).</li><br>\n<li><strong>Multithreaded:</strong> We can write Java programs that deal with many tasks at once by defining multiple threads. The main advantage of multi-threading is that it doesn't occupy memory for each thread. It shares a common memory area. Threads are important for multi-media, Web applications, etc.</li><br>\n<li><strong>Distributed:</strong> Java is distributed because it facilitates users to create distributed applications in Java. RMI and EJB are used for creating distributed applications. This feature of Java makes us able to access files by calling the methods from any machine on the internet.</li><br>\n<li><strong>Dynamic:</strong> Java is a dynamic language. It supports dynamic loading of classes. It means classes are loaded on demand. It also supports functions from its native languages, i.e., C and C++.</li><br>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 52
	},
	{
		"question" : "69) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Person \n{\n    public Person() \n    {\n        System.out.println(\"Person class constructor called\");\n    }\n}\npublic class Employee extends Person \n{\n    public Employee() \n    {\n        System.out.println(\"Employee class constructor called\");\n    }\n    public static void main (String args[])\n    {\n        Employee e = new Employee();\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>Person class constructor called\nEmployee class constructor called\n</pre></div><p><strong>Explanation</strong></p><p>The super() is implicitly invoked by the compiler if no super() or this() is included explicitly within the derived class constructor. Therefore, in this case, The Person class constructor is called first and then the Employee class constructor is called.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 53
	},
	{
		"question" : "46) What if the static modifier is removed from the signature of the main method?",
		"answer" : "<div> <p>Program compiles. However, at runtime, It throws an error \"NoSuchMethodError.\"</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 54
	},
	{
		"question" : "4) What do you understand by Java virtual machine?",
		"answer" : "<div> <p><a>Java Virtual Machine</a> is a virtual machine that enables the computer to run the Java program. JVM acts like a run-time engine which calls the main method present in the Java code. JVM is the specification which must be implemented in the computer system. The Java code is compiled by JVM to be a Bytecode which is machine independent and close to the native code.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 55
	},
	{
		"question" : "5) What is the difference between JDK, JRE, and JVM?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><h3 class=\"h4\">JVM</h3><p>JVM is an acronym for Java Virtual Machine; it is an abstract machine which provides the runtime environment in which Java bytecode can be executed. It is a specification which specifies the working of Java Virtual Machine. Its implementation has been provided by Oracle and other companies. Its implementation is known as JRE.\n</p><p>JVMs are available for many hardware and software platforms (so JVM is platform dependent). It is a runtime instance which is created when we run the Java class. There are three notions of the JVM: specification, implementation, and instance. </p><h3 class=\"h4\">JRE</h3><p>JRE stands for Java Runtime Environment. It is the implementation of JVM. The Java Runtime Environment is a set of software tools which are used for developing Java applications. It is used to provide the runtime environment. It is the implementation of JVM. It physically exists. It contains a set of libraries + other files that JVM uses at runtime.\n</p><h3 class=\"h4\">JDK</h3><p>JDK is an acronym for Java Development Kit. It is a software development environment which is used to develop Java applications and applets. It physically exists. It contains JRE + development tools. JDK is an implementation of any one of the below given Java Platforms released by Oracle Corporation:</p><ul class=\"points\">\n<li>Standard Edition Java Platform</li>\n<li>Enterprise Edition Java Platform</li>\n<li>Micro Edition Java Platform</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 56
	},
	{
		"question" : "47) What is the difference between static (class) method and instance method?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>static or class method</th><th>instance method</th></tr>\n<tr><td>1)A method that is declared as static is known as the static method.</td><td> A method that is not declared as static is known as the instance method.</td></tr>\n<tr><td>2)We don't need to create the objects to call the static methods.</td><td>The object is required to call the instance methods.</td></tr>\n<tr><td>3)Non-static (instance) members cannot be accessed in the static context (static method, static block, and static nested class) directly.</td><td>Static and non-static variables both can be accessed in instance methods.</td></tr>\n<tr><td>4)For example: public static int cube(int n){ return n*n*n;}</td><td>For example: public void msg(){...}.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 57
	},
	{
		"question" : "70) Can you use this() and super() both in a constructor?",
		"answer" : "<div> <p>No, because this() and super() must be the first statement in the class constructor.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Test{\n\tTest()\n     {\n         super(); \n         this();\n         System.out.println(\"Test class object is created\");\n     }\n     public static void main(String []args){\n     Test t = new Test();\n     }\n}\n</textarea></div><p>Output:</p><div class=\"codeblock3\"><pre>Test.java:5: error: call to this must be first statement in constructor\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 58
	},
	{
		"question" : "6) How many types of memory areas are allocated by JVM?",
		"answer" : "<div> <p>Many types:</p><ol>\n<li><strong>Class(Method) Area:</strong> Class Area stores per-class structures such as the runtime constant pool, field, method data, and the code for methods.</li>\n<li><strong>Heap:</strong> It is the runtime data area in which the memory is allocated to the objects</li>\n<li><strong>Stack:</strong> Java Stack stores frames. It holds local variables and partial results, and plays a part in method invocation and return. Each thread has a private JVM stack, created at the same time as the thread. A new frame is created each time a method is invoked. A frame is destroyed when its method invocation completes.</li>\n<li><strong>Program Counter Register:</strong> PC (program counter) register contains the address of the Java virtual machine instruction currently being executed.</li>\n<li><strong>Native Method Stack:</strong> It contains all the native methods used in the application.</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 59
	},
	{
		"question" : "71)What is object cloning?",
		"answer" : "<div> <p>The object cloning is used to create the exact copy of an object. The clone() method of the Object class is used to clone an object. The <strong>java.lang.Cloneable</strong> interface must be implemented by the class whose object clone we want to create. If we don't implement Cloneable interface, clone() method generates CloneNotSupportedException.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">protected Object clone() throws CloneNotSupportedException  \n\t</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 60
	},
	{
		"question" : "7) What is JIT compiler?",
		"answer" : "<div> <p><b>Just-In-Time(JIT) compiler:</b> It is used to improve the performance. JIT compiles parts of the bytecode that have similar functionality at the same time, and hence reduces the amount of time needed for compilation. Here the term “compiler” refers to a translator from the instruction set of a Java virtual machine (JVM) to the instruction set of a specific CPU.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 61
	},
	{
		"question" : "72) What is method overloading?",
		"answer" : "<div> <p>Method overloading is the polymorphism technique which allows us to create multiple methods with the same name but different signature. We can achieve method overloading in two ways.</p><ul class=\"points\">\n<li>By Changing the number of arguments</li>\n<li>By Changing the data type of arguments</li>\n</ul><p>Method overloading increases the readability of the program. Method overloading is performed to figure out the program quickly.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 62
	},
	{
		"question" : "48) Can we make constructors static?",
		"answer" : "<div> <p>As we know that the static context (method, block, or variable) belongs to the class, not the object. Since Constructors are invoked only when the object is created, there is no sense to make the constructors static. However, if you try to do so, the compiler will show the compiler error.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 63
	},
	{
		"question" : "49) Can we make the abstract methods static in Java?",
		"answer" : "<div> <p>In Java, if we make the abstract methods static, It will become the part of the class, and we can directly call it which is unnecessary. Calling an undefined method is completely useless therefore it is not allowed.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 64
	},
	{
		"question" : "50) Can we declare the static variables and methods in an abstract class?",
		"answer" : "<div> <p>Yes, we can declare static variables and methods in an abstract method. As we know that there is no requirement to make the object to access the static context, therefore, we can access the static context declared inside the abstract class by using the name of the abstract class. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">abstract class Test\n{\n    static int i = 102;\n    static void TestMethod()\n    {\n        System.out.println(\"hi !! I am good !!\");\n    }\n}\npublic class TestClass extends Test \n{\n    public static void main (String args[])\n    {\n        Test.TestMethod();\n        System.out.println(\"i = \"+Test.i);\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>hi !! I am good !!\ni = 102\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 65
	},
	{
		"question" : "73) Why is method overloading not possible by changing the return type in java?",
		"answer" : "<div> <p>In Java, method overloading is not possible by changing the return type of the program due to avoid the ambiguity.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Adder{\nstatic int add(int a,int b){return a+b;}\nstatic double add(int a,int b){return a+b;}\n}\nclass TestOverloading3{\npublic static void main(String[] args){\nSystem.out.println(Adder.add(11,11));//ambiguity\n}}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Output:</p><div class=\"codeblock3\"><pre>Compile Time Error: method add(int, int) is already defined in class Adder\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 66
	},
	{
		"question" : "77) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class OverloadingCalculation3{  \n  void sum(int a,long b){System.out.println(\"a method invoked\");}  \n  void sum(long a,int b){System.out.println(\"b method invoked\");}  \n  \n  public static void main(String args[]){  \n  OverloadingCalculation3 obj=new OverloadingCalculation3();  \n  obj.sum(20,20);//now ambiguity  \n  }  \n}  \n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>OverloadingCalculation3.java:7: error: reference to sum is ambiguous\nobj.sum(20,20);//now ambiguity  \n     ^ \n      both method sum(int,long) in OverloadingCalculation3 \n      and method sum(long,int) in OverloadingCalculation3 match\n1 error\n</pre></div><p><strong>Explanation</strong></p><p>There are two methods defined with the same name, i.e., sum. The first method accepts the integer and long type whereas the second method accepts long and the integer type. The parameter passed that are a = 20, b = 20. We can not tell that which method will be called as there is no clear differentiation mentioned between integer literal and long literal. This is the case of ambiguity. Therefore, the compiler will throw an error.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 67
	},
	{
		"question" : "74) Can we overload the methods by making them static?",
		"answer" : "<div> <p>No, We cannot overload the methods by just applying the static keyword to them(number of parameters and types are the same). Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Animal\n{\n    void consume(int a)\n    {\n        System.out.println(a+\" consumed!!\");\n    }\n    static void consume(int a)\n    {\n        System.out.println(\"consumed static \"+a);\n    }\n    public static void main (String args[])\n    {\n        Animal a = new Animal();\n        a.consume(10);\n        Animal.consume(20);\n    }\n}  \n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>Animal.java:7: error: method consume(int) is already defined in class Animal\n    static void consume(int a)\n                ^\nAnimal.java:15: error: non-static method consume(int) cannot be referenced from a static context\n        Animal.consume(20);\n              ^\n2 errors\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 68
	},
	{
		"question" : "78) What is method overriding:",
		"answer" : "<div> <p>If a subclass provides a specific implementation of a method that is already provided by its parent class, it is known as Method Overriding. It is used for runtime polymorphism and to implement the interface methods.</p><p><strong>Rules for Method overriding</strong></p><ul class=\"points\">\n<li>The method must have the same name as in the parent class.</li>\n<li>The method must have the same signature as in the parent class.</li>\n<li>Two classes must have an IS-A relationship between them.</li>\n</ul><p></p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 69
	},
	{
		"question" : "75) Can we overload the main() method?",
		"answer" : "<div> <p>Yes, we can have any number of main methods in a Java program by using method overloading. </p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 70
	},
	{
		"question" : "51) What is ",
		"answer" : "<div> <p>The <strong>this</strong> keyword is a reference variable that refers to the current object. There are the various uses of this keyword in Java. It can be used to refer to current class properties such as instance methods, variable, constructors, etc. It can also be passed as an argument into the methods or constructors. It can also be returned from the method as the current class instance.</p><img src=\"https://static.javatpoint.com/images/thisr.jpg\" alt=\"java this keyword\"><br></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 71
	},
	{
		"question" : "79) Can we override the static method?",
		"answer" : "<div> <p>No, you can't override the static method because they are the part of the class, not the object.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 72
	},
	{
		"question" : "76) What is method overloading with type promotion?",
		"answer" : "<div> <p>By Type promotion is method overloading, we mean that one data type can be promoted to another implicitly if no exact matching is found.</p><img src=\"https://static.javatpoint.com/images/java-type-promotion.png\" alt=\"Java Method Overloading with Type Promotion\"><p>As displayed in the above diagram, the byte can be promoted to short, int, long, float or double. The short datatype can be promoted to int, long, float or double. The char datatype can be promoted to int, long, float or double and so on. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class OverloadingCalculation1{\n  void sum(int a,long b){System.out.println(a+b);}\n  void sum(int a,int b,int c){System.out.println(a+b+c);}\n\n  public static void main(String args[]){\n  OverloadingCalculation1 obj=new OverloadingCalculation1();\n  obj.sum(20,20);//now second int literal will be promoted to long\n  obj.sum(20,20,20);\n  }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>40\n60\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 73
	},
	{
		"question" : "52) What are the main uses of this keyword?",
		"answer" : "<div> <p>There are the following uses of <strong>this</strong> keyword.</p><ul class=\"points\">\n<li><strong>this</strong> can be used to refer to the current class instance variable.</li>\n<li><strong>this</strong> can be used to invoke current class method (implicitly)</li>\n<li><strong>this()</strong> can be used to invoke the current class constructor.</li>\n<li><strong>this</strong> can be passed as an argument in the method call.</li>\n<li><strong>this</strong> can be passed as an argument in the constructor call.</li>\n<li><strong>this</strong> can be used to return the current class instance from the method.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 74
	},
	{
		"question" : "53) Can we assign the reference to ",
		"answer" : "<div> <p>No, this cannot be assigned to any value because it always points to the current class object and this is the final reference in Java. However, if we try to do so, the compiler error will be shown. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Test\n{\n    public Test()\n    {\n        this = null; \n        System.out.println(\"Test class constructor called\");\n    }\n    public static void main (String args[])\n    {\n        Test t = new Test();\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>Test.java:5: error: cannot assign a value to final variable this\n        this = null; \n        ^\n1 error\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 75
	},
	{
		"question" : "80) Why can we not override static method?",
		"answer" : "<div> <p>It is because the static method is the part of the class, and it is bound with class whereas instance method is bound with the object, and static gets memory in class area, and instance gets memory in a heap.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 76
	},
	{
		"question" : "54) Can ",
		"answer" : "<div> <p>Yes, It is possible to use this keyword to refer static members because this is just a reference variable which refers to the current class object. However, as we know that, it is unnecessary to access static variables through objects, therefore, it is not the best practice to use this to refer static members. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Test \n{\n    static int i = 10; \n    public Test ()\n    {\n        System.out.println(this.i);    \n    }\n    public static void main (String args[])\n    {\n        Test t = new Test();\n    }\n}\n</textarea></div><p><strong>Output</strong>\n</p><div class=\"codeblock3\"><pre>10\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 77
	},
	{
		"question" : "81) Can we override the overloaded method?",
		"answer" : "<div> <p>Yes.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 78
	},
	{
		"question" : "82) Difference between method Overloading and Overriding.",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>Method Overloading</th><th>Method Overriding</th></tr>\n<tr><td>1) Method overloading increases the readability of the program.</td><td>Method overriding provides the specific implementation of the method that is already provided by its superclass.</td></tr>\n<tr><td>2) Method overloading occurs within the class.</td><td>Method overriding occurs in two classes that have IS-A relationship between them.</td></tr>\n<tr><td>3) In this case, the parameters must be different.</td><td>In this case, the parameters must be the same.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 79
	},
	{
		"question" : "83) Can we override the private methods?",
		"answer" : "<div> <p>No, we cannot override the private methods because the scope of private methods is limited to the class and we cannot access them outside of the class.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 80
	},
	{
		"question" : "84) Can we change the scope of the overridden method in the subclass?",
		"answer" : "<div> <p>Yes, we can change the scope of the overridden method in the subclass. However, we must notice that we cannot decrease the accessibility of the method. The following point must be taken care of while changing the accessibility of the method.</p><ul class=\"points\">\n<li>The private can be changed to protected, public, or default.</li>\n<li>The protected can be changed to public or default.</li>\n<li>The default can be changed to public.</li>\n<li>The public will always remain public.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 81
	},
	{
		"question" : "55) How can constructor chaining be done using this keyword?",
		"answer" : "<div> <p>Constructor chaining enables us to call one constructor from another constructor of the class with respect to the current class object. We can use this keyword to perform constructor chaining within the same class. Consider the following example which illustrates how can we use this keyword to achieve constructor chaining.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Employee\n{\n    int id,age; \n    String name, address;\n    public Employee (int age)\n    {\n        this.age = age;\n    }\n    public Employee(int id, int age)\n    {\n        this(age);\n        this.id = id;\n    }\n    public Employee(int id, int age, String name, String address)\n    {\n        this(id, age);\n        this.name = name; \n        this.address = address; \n    }\n    public static void main (String args[])\n    {\n        Employee emp = new Employee(105, 22, \"Vikas\", \"Delhi\");\n        System.out.println(\"ID: \"+emp.id+\" Name:\"+emp.name+\" age:\"+emp.age+\" address: \"+emp.address);\n    }\n    \n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>ID: 105 Name:Vikas age:22 address: Delhi\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 82
	},
	{
		"question" : "6) What is difference between Get and Post method?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><table class=\"alt\">\n<tbody><tr><th>Get</th><th>Post</th></tr>\n<tr><td>1) Limited amount of data can be sent because data is sent in header.</td><td>Large amount of data can be sent because data is sent in body.</td></tr>\n<tr><td>2) Not Secured because data is exposed in URL bar.</td><td>Secured because data is not exposed in URL bar.</td></tr>\n<tr><td>3) Can be bookmarked</td><td>Cannot be bookmarked</td></tr>\n<tr><td>4) Idempotent</td><td>Non-Idempotent</td></tr>\n<tr><td>5) It is more efficient and used than Post</td><td>It is less efficient and used</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 83
	},
	{
		"question" : "85) Can we modify the throws clause of the superclass method while overriding it in the subclass?",
		"answer" : "<div> <p>Yes, we can modify the throws clause of the superclass method while overriding it in the subclass. However, there are some rules which are to be followed while overriding in case of exception handling.</p><ul class=\"points\">\n<li>If the superclass method does not declare an exception, subclass overridden method cannot declare the checked exception, but it can declare the unchecked exception.</li>\n<li>If the superclass method declares an exception, subclass overridden method can declare same, subclass exception or no exception but cannot declare parent exception.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 84
	},
	{
		"question" : "87) Can you have virtual functions in Java? ",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Base\n{\n    void method(int a)\n    {\n        System.out.println(\"Base class method called with integer a = \"+a);\n    }\n     \n    void method(double d)\n    {\n        System.out.println(\"Base class method called with double d =\"+d);\n    }\n}\n \nclass Derived extends Base\n{\n    @Override\n    void method(double d)\n    {\n        System.out.println(\"Derived class method called with double d =\"+d);\n    }\n}\n \npublic class Main\n{    \n    public static void main(String[] args)\n    {\n        new Derived().method(10);\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>Base class method called with integer a = 10\n</pre></div><p><strong>Explanation</strong></p><p>The method() is overloaded in class Base whereas it is derived in class Derived with the double type as the parameter. In the method call, the integer is passed.\n</p><p>Yes, all functions in Java are virtual by default. </p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 85
	},
	{
		"question" : "56) What are the advantages of passing this into a method instead of the current class object itself?",
		"answer" : "<div> <p>As we know, that this refers to the current class object, therefore, it must be similar to the current class object. However, there can be two main advantages of passing this into a method instead of the current class object.</p><ul class=\"points\">\n<li>this is a final variable. Therefore, this cannot be assigned to any new value whereas the current class object might not be final and can be changed.</li>\n<li>this can be used in the synchronized block.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 86
	},
	{
		"question" : "88) What is covariant return type? ",
		"answer" : "<div> <p>Now, since java5, it is possible to override any method by changing the return type if the return type of the subclass overriding method is subclass type. It is known as covariant return type. The covariant return type specifies that the return type may vary in the same direction as the subclass.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class A{\nA get(){return this;}\n}\n\nclass B1 extends A{\nB1 get(){return this;}\nvoid message(){System.out.println(\"welcome to covariant return type\");}\n\npublic static void main(String args[]){\nnew B1().get().message();\n}\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><div class=\"codeblock3\"><pre>Output: welcome to covariant return type\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 87
	},
	{
		"question" : "7) What is difference between PrintWriter and ServletOutputStream?",
		"answer" : "<div> <p>PrintWriter is a character-stream class where as ServletOutputStream is a byte-stream class. The PrintWriter class can be used to write only character-based information whereas ServletOutputStream class can be used to write primitive values as well as character-based information.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 88
	},
	{
		"question" : "109) What is the abstract class?",
		"answer" : "<div> <p>A class that is declared as abstract is known as an abstract class. It needs to be extended and its method implemented. It cannot be instantiated. It can have abstract methods, non-abstract methods, constructors, and static methods. It can also have the final methods which will force the subclass not to change the body of the method. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\"> abstract class Bike{\n   abstract void run();\n }\n class Honda4 extends Bike{\n void run(){System.out.println(\"running safely\");}\n public static void main(String args[]){\n  Bike obj = new Honda4();\n  obj.run();\n }\n }\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>running safely\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 89
	},
	{
		"question" : "8) What is difference between GenericServlet and HttpServlet?",
		"answer" : "<div> <p>\nThe GenericServlet is protocol independent whereas HttpServlet is HTTP protocol specific. HttpServlet provides additional functionalities such as state management etc.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 90
	},
	{
		"question" : "89) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Base \n{\n    public void baseMethod()\n    {\n        System.out.println(\"BaseMethod called ...\");\n    }\n}\nclass Derived extends Base \n{\n    public void baseMethod()\n    {\n        System.out.println(\"Derived method called ...\");\n    }\n}\npublic class Test \n{\n    public static void main (String args[])\n    {\n        Base b = new Derived();\n        b.baseMethod();\n    }\n}\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 91
	},
	{
		"question" : "110) Can there be an abstract method without an abstract class?",
		"answer" : "<div> <p>No, if there is an abstract method in a class, that class must be abstract.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 92
	},
	{
		"question" : "9) What is servlet collaboration?",
		"answer" : "<div> <p>When one servlet communicates to another servlet, it is known as servlet collaboration. There are many ways of servlet collaboration:</p><ul>\n<li>RequestDispacher interface</li>\n<li>sendRedirect() method etc.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 93
	},
	{
		"question" : "90) What is the final variable?",
		"answer" : "<div> <p>In Java, the final variable is used to restrict the user from updating it. If we initialize the final variable, we can't change its value. In other words, we can say that the final variable once assigned to a value, can never be changed after that. The final variable which is not assigned to any value can only be assigned through the class constructor.</p><img src=\"https://static.javatpoint.com/images/core/final.jpg\" alt=\"final keyword in java\"><div class=\"codeblock\"><textarea name=\"code\" class=\"java\"> class Bike9{\n  final int speedlimit=90;//final variable\n  void run(){\n   speedlimit=400;\n  }\n  public static void main(String args[]){\n  Bike9 obj=new  Bike9();\n  obj.run();\n  }\n }//end of class\n\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><div class=\"codeblock3\"><pre>Output:Compile Time Error\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 94
	},
	{
		"question" : "10) What is the purpose of RequestDispatcher Interface?",
		"answer" : "<div> <p>The RequestDispacher interface provides the facility of dispatching the request to another resource it may be html, servlet or jsp. This interceptor can also be used to include the content of antoher resource.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 95
	},
	{
		"question" : "111) Is the following program written correctly? If yes then what will be the output of the program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">abstract class Calculate\n{\n    abstract int multiply(int a, int b);\n}\n \npublic class Main\n{\n    public static void main(String[] args)\n    {\n        int result = new Calculate()\n        {    \n            @Override\n            int multiply(int a, int b)\n            {\n                return a*b;\n            }\n        }.multiply(12,32);\n        System.out.println(\"result = \"+result);\n    }\n}\n</textarea></div><p>Yes, the program is written correctly. The Main class provides the definition of abstract method multiply declared in abstract class Calculation. The output of the program will be:</p><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>384\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 96
	},
	{
		"question" : "91) What is the final method?",
		"answer" : "<div> <p>If we change any method to a final method, we can't override it. <a> More Details.</a></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Bike{\n  final void run(){System.out.println(\"running\");}\n}\n   \nclass Honda extends Bike{\n   void run(){System.out.println(\"running safely with 100kmph\");}\n   \n   public static void main(String args[]){\n   Honda honda= new Honda();\n   honda.run();\n   }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><div class=\"codeblock3\"><pre>Output:Compile Time Error\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 97
	},
	{
		"question" : "112) Can you use abstract and final both with a method?",
		"answer" : "<div> <p>No, because we need to override the abstract method to provide its implementation, whereas we can't override the final method.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 98
	},
	{
		"question" : "92) What is the final class?",
		"answer" : "<div> <p>If we make any class final, we can't inherit it into any of the subclasses.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\"> final class Bike{}\n \n class Honda1 extends Bike{\n   void run(){System.out.println(\"running safely with 100kmph\");}\n   \n   public static void main(String args[]){\n   Honda1 honda= new Honda1();\n   honda.run();\n   }\n }\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><div class=\"codeblock3\"><pre>Output:Compile Time Error\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 99
	},
	{
		"question" : "113) Is it possible to instantiate the abstract class?",
		"answer" : "<div> <p>No, the abstract class can never be instantiated even if it contains a constructor and all of its methods are implemented.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 100
	},
	{
		"question" : "136) Is it necessary that each try block must be followed by a catch block?",
		"answer" : "<div> <p>It is not necessary that each try block must be followed by a catch block. It should be followed by either a catch block OR a finally block. So whatever exceptions are likely to be thrown should be declared in the throws clause of the method. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Main{\n     public static void main(String []args){\n        try{\n            int a = 1; \n            System.out.println(a/0);\n        }\n        finally\n        {\n            System.out.println(\"rest of the code...\");\n        }\n     }\n}\n\t</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Exception in thread main java.lang.ArithmeticException:/ by zero\nrest of the code...\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 101
	},
	{
		"question" : "93) What is the final blank variable?",
		"answer" : "<div> <p>A final variable, not initialized at the time of declaration, is known as the final blank variable. We can't initialize the final blank variable directly. Instead, we have to initialize it by using the class constructor. It is useful in the case when the user has some data which must not be changed by others, for example, PAN Number. Consider the following example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Student{\nint id;\nString name;\nfinal String PAN_CARD_NUMBER;\n...\n}\n\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 102
	},
	{
		"question" : "137) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class ExceptionHandlingExample {\npublic static void main(String args[])\n{\n\ttry\n\t{\n\t\tint a = 1/0;\n\t\tSystem.out.println(\"a = \"+a);\n\t}\n\tcatch(Exception e){System.out.println(e);}\n\tcatch(ArithmeticException ex){System.out.println(ex);}\t\n}\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>ExceptionHandlingExample.java:10: error: exception ArithmeticException has already been caught\n\tcatch(ArithmeticException ex){System.out.println(ex);}\t\n\t^\n1 error\n</pre></div><p><strong>Explanation</strong></p><p>ArithmaticException is the subclass of Exception. Therefore, it can not be used after Exception. Since Exception is the base class for all the exceptions, therefore, it must be used at last to handle the exception. No class can be used after this.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 103
	},
	{
		"question" : "11) Can you call a jsp from the servlet?",
		"answer" : "<div> <p>Yes, one of the way is RequestDispatcher interface for example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">RequestDispatcher rd=request.getRequestDispatcher(\"/login.jsp\");\nrd.forward(request,response);\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 104
	},
	{
		"question" : "114) What is the interface?",
		"answer" : "<div> <p>The interface is a blueprint for a class that has static constants and abstract methods. It can be used to achieve full abstraction and multiple inheritance. It is a mechanism to achieve abstraction. There can be only abstract methods in the Java interface, not method body. It is used to achieve abstraction and multiple inheritance in Java.\nIn other words, you can say that interfaces can have abstract methods and variables. Java Interface also represents the IS-A relationship. It cannot be instantiated just like the abstract class. However, we need to implement it to define its methods. Since Java 8, we can have the default, static, and private methods in an interface.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 105
	},
	{
		"question" : "138) What is finally block?",
		"answer" : "<div> <p>The \"finally\" block is used to execute the important code of the program. It is executed whether an exception is handled or not. In other words, we can say that finally block is the block which is always executed. Finally block follows try or catch block. If you don't handle the exception, before terminating the program, JVM runs finally block, (if any). The finally block is mainly used to place the cleanup code such as closing a file or closing a connection. Here, we must know that for each try block there can be zero or more catch blocks, but only one finally block. The finally block will not be executed if program exits(either by calling System.exit() or by causing a fatal error that causes the process to abort).</p><img src=\"https://static.javatpoint.com/images/finally.JPG\" alt=\"java finally\"><br></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 106
	},
	{
		"question" : "115) Can you declare an interface method static?",
		"answer" : "<div> <p>No, because methods of an interface are abstract by default, and we can not use static and abstract together.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 107
	},
	{
		"question" : "94) Can we initialize the final blank variable?",
		"answer" : "<div> <p>Yes, if it is not static, we can initialize it in the constructor. If it is static blank final variable, it can be initialized only in the static block.<a> More Details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 108
	},
	{
		"question" : "139) Can finally block be used without a catch?",
		"answer" : "<div> <p>Yes, According to the definition of finally block, it must be followed by a try or catch block, therefore, we can use try block instead of catch.<a> More details.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 109
	},
	{
		"question" : "116) Can the Interface be final?",
		"answer" : "<div> <p>No, because an interface needs to be implemented by the other class and if it is final, it can't be implemented by any class.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 110
	},
	{
		"question" : "140) Is there any case when finally will not be executed?",
		"answer" : "<div> <p>Finally block will not be executed if program exits(either by calling System.exit() or by causing a fatal error that causes the process to abort).<a>More details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 111
	},
	{
		"question" : "95) Can you declare the main method as final? ",
		"answer" : "<div> <p>Yes, We can declare the main method as public static final void main(String[] args){}.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 112
	},
	{
		"question" : "117) What is a marker interface?",
		"answer" : "<div> <p>A Marker interface can be defined as the interface which has no data member and member functions. For example, Serializable, Cloneable are marker interfaces. The marker interface can be declared as follows.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public interface Serializable{  \n}  \n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 113
	},
	{
		"question" : "12) Difference between forward() method and sendRedirect() method ?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>forward() method</th><th>sendRedirect() method</th></tr>\n<tr><td>1) forward() sends the same request to another resource.</td><td>1) sendRedirect() method sends new request always because it uses the URL bar of the browser.</td></tr>\n<tr><td>2) forward() method works at server side.</td><td>2) sendRedirect() method works at client side.</td></tr>\n<tr><td>3) forward() method works within the server only.</td><td>3) sendRedirect() method works within and outside the server.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 114
	},
	{
		"question" : "96) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Main {\n public static void main(String args[]){\n   final int i;\n   i = 20;\n   System.out.println(i);\n }\n}\n</textarea></div><p><strong>Output</strong>\n</p><div class=\"codeblock3\"><pre>20\n</pre></div><p><strong>Explanation</strong></p><p>Since i is the blank final variable. It can be initialized only once. We have initialized it to 20. Therefore, 20 will be printed.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 115
	},
	{
		"question" : "118) What are the differences between abstract class and interface?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>Abstract class</th><th>Interface</th></tr>\n<tr><td>An abstract class can have a method body (non-abstract methods).</td><td> The interface has only abstract methods.</td></tr>\n<tr><td>An abstract class can have instance variables.</td><td>An interface cannot have instance variables.</td></tr>\n<tr><td>An abstract class can have the constructor.</td><td>The interface cannot have the constructor.</td></tr>\n<tr><td>An abstract class can have static methods.</td><td>The interface cannot have static methods.</td></tr>\n<tr><td>You can extend one abstract class.</td><td>You can implement multiple interfaces.</td></tr>\n<tr><td>The abstract class <strong>can provide the implementation of the interface</strong>.</td><td>The Interface <strong>can't provide the implementation of the abstract class</strong>.</td></tr>\n<tr><td>The <strong>abstract keyword</strong> is used to declare an abstract class.</td><td>The <strong>interface keyword</strong> is used to declare an interface.</td></tr>\n<tr><td>An <strong>abstract class</strong> can extend another Java class and implement multiple Java interfaces.</td><td>An <strong>interface</strong> can extend another Java interface only.</td></tr>\n<tr><td>An <strong>abstract class</strong> can be extended using keyword <strong>extends</strong></td><td> An <strong>interface class</strong> can be implemented using keyword <strong>implements</strong></td></tr>\n<tr><td>A Java<strong> abstract class</strong> can have class members like private, protected, etc.</td><td>Members of a Java interface are public by default. </td></tr>\n<tr><td><strong>Example:</strong><br> public abstract class Shape{<br>public abstract void draw();<br>}</td><td><strong>Example:</strong><br> public interface Drawable{<br>void draw();<br>}</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 116
	},
	{
		"question" : "97) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Base \n{\n    protected final void getInfo()\n    {\n        System.out.println(\"method of Base class\");\n    }\n}\n \npublic class Derived extends Base\n{\n    protected final void getInfo()\n    {\n        System.out.println(\"method of Derived class\");\n    }\n    public static void main(String[] args)\n    {\n        Base obj = new Base();\n        obj.getInfo();\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>\tDerived.java:11: error: getInfo() in Derived cannot override getInfo() in Base\n    protected final void getInfo()\n                         ^\n  overridden method is final\n1 error\n</pre></div><p><strong>Explanation</strong>\n</p><p>The getDetails() method is final; therefore it can not be overridden in the subclass.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 117
	},
	{
		"question" : "13) What is difference between ServletConfig and ServletContext?",
		"answer" : "<div> <p>The container creates object of ServletConfig for each servlet whereas object of ServletContext is created for each web application.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 118
	},
	{
		"question" : "119) Can we define private and protected modifiers for the members in interfaces?",
		"answer" : "<div> <p>No, they are implicitly public.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 119
	},
	{
		"question" : "120) When can an object reference be cast to an interface reference? ",
		"answer" : "<div> <p>An object reference can be cast to an interface reference when the object implements the referenced interface.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 120
	},
	{
		"question" : "14) What is Session Tracking?",
		"answer" : "<div> <p><b>Session</b> simply means a particular interval of time.</p><p>Session Tracking is a way to maintain state of an user.Http protocol is a stateless protocol.Each time user requests to the server, server treats the request as the new request.So we need to maintain the state of an user to recognize to particular user.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 121
	},
	{
		"question" : "141) What is the difference between throw and throws?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>throw keyword</th><th>throws keyword</th></tr>\n<tr><td>1) The <strong>throw</strong> keyword is used to throw an exception explicitly.</td><td>The <strong>throws</strong> keyword is used to declare an exception.</td></tr>\n<tr><td>2) The checked exceptions cannot be propagated with throw only.</td><td>The checked exception can be propagated with throws</td></tr>\n<tr><td>3) The <strong>throw</strong> keyword is followed by an instance.</td><td>The <strong>throws</strong> keyword is followed by class.</td></tr>\n<tr><td>4) The <strong>throw</strong> keyword is used within the method.</td><td>The <strong>throws</strong> keyword is used with the method signature.</td></tr>\n<tr><td>5) You cannot throw multiple exceptions.</td><td>You can declare multiple exceptions, e.g., public void method()throws IOException, SQLException.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 122
	},
	{
		"question" : "121) How to make a read-only class in Java? ",
		"answer" : "<div> <p>A class can be made read-only by making all of the fields private. The read-only class will have only getter methods which return the private property of the class to the main method. We cannot modify this property because there is no setter method available in the class. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">  //A Java class which has only getter methods.  \npublic class Student{  \n//private data member  \nprivate String college=\"AKG\";  \n//getter method for college  \npublic String getCollege(){  \nreturn college;  \n}  \n}  \n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 123
	},
	{
		"question" : "15) What are Cookies?",
		"answer" : "<div> <p>A cookie is a small piece of information that is persisted between the multiple client requests. A cookie has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 124
	},
	{
		"question" : "142) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">  public class Main{\n     public static void main(String []args){\n        try\n        {\n            throw 90; \n        }\n        catch(int e){\n            System.out.println(\"Caught the exception \"+e);\n        }\n            \n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>Main.java:6: error: incompatible types: int cannot be converted to Throwable\n            throw 90; \n            ^\nMain.java:8: error: unexpected type\n        catch(int e){\n              ^\n  required: class\n  found:    int\n2 errors\n</pre></div><p><strong>Explanation</strong></p><p>In Java, the throwable objects can only be thrown. If we try to throw an integer object, The compiler will show an error since we can not throw basic data type from a block of code.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 125
	},
	{
		"question" : "122) How to make a write-only class in Java? ",
		"answer" : "<div> <p>A class can be made write-only by making all of the fields private. The write-only class will have only setter methods which set the value passed from the main method to the private fields. We cannot read the properties of the class because there is no getter method in this class. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">  //A Java class which has only setter methods.  \npublic class Student{  \n//private data member  \nprivate String college;  \n//getter method for college  \npublic void setCollege(String college){  \nthis.college=college;  \n}  \n}  \n</textarea> </div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 126
	},
	{
		"question" : "143) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Calculation extends Exception\n{\n    public Calculation() \n    {\n        System.out.println(\"Calculation class is instantiated\");\n    }\n    public void add(int a, int b)\n    {\n        System.out.println(\"The sum is \"+(a+b));\n    }\n}\npublic class Main{\n     public static void main(String []args){\n        try\n        {\n            throw new Calculation(); \n        }\n        catch(Calculation c){\n            c.add(10,20);\n        }\n    }\n} \n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>Calculation class is instantiated\nThe sum is 30\n</pre></div><p><strong>Explanation</strong></p><p>\nThe object of Calculation is thrown from the try block which is caught in the catch block. The add() of Calculation class is called with the integer values 10 and 20 by using the object of this class. Therefore there sum 30 is printed. The object of the Main class can only be thrown in the case when the type of the object is throwable. To do so, we need to extend the throwable class.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 127
	},
	{
		"question" : "16) What is difference between Cookies and HttpSession?",
		"answer" : "<div> <p>Cookie works at client side whereas HttpSession works at server side.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 128
	},
	{
		"question" : "123) What are the advantages of Encapsulation in Java?",
		"answer" : "<div> <p>There are the following advantages of Encapsulation in Java?</p><ul class=\"points\">\n<li>By providing only the setter or getter method, you can make the class read-only or write-only. In other words, you can skip the getter or setter methods.</li>\n<li>It provides you the control over the data. Suppose you want to set the value of id which should be greater than 100 only, you can write the logic inside the setter method. You can write the logic not to store the negative numbers in the setter methods.</li>\n<li>It is a way to achieve data hiding in Java because other class will not be able to access the data through the private data members.</li>\n<li>The encapsulate class is easy to test. So, it is better for unit testing.</li>\n<li>The standard IDE's are providing the facility to generate the getters and setters. So, it is easy and fast to create an encapsulated class in Java.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 129
	},
	{
		"question" : "144) Can an exception be rethrown?",
		"answer" : "<div> <p>Yes.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 130
	},
	{
		"question" : "98) Can we declare a constructor as final?",
		"answer" : "<div> <p>The constructor can never be declared as final because it is never inherited. Constructors are not ordinary methods; therefore, there is no sense to declare constructors as final. However, if you try to do so, The compiler will throw an error.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 131
	},
	{
		"question" : "17) What is filter?",
		"answer" : "<div> <p>A filter is an object that is invoked either at the preprocessing or postprocessing of a request. It is pluggable.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 132
	},
	{
		"question" : "99) Can we declare an interface as final?",
		"answer" : "<div> <p>No, we cannot declare an interface as final because the interface must be implemented by some class to provide its definition. Therefore, there is no sense to make an interface final. However, if you try to do so, the compiler will show an error.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 133
	},
	{
		"question" : "18) How can we perform any action at the time of deploying the project?",
		"answer" : "<div> <p>By the help of ServletContextListener interface.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 134
	},
	{
		"question" : "100) What is the difference between the final method and abstract method?",
		"answer" : "<div> <p>The main difference between the final method and abstract method is that the abstract method cannot be final as we need to override them in the subclass to give its definition.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java",
		"id" : 135
	},
	{
		"question" : "145) Can subclass overriding method declare an exception if parent class method doesn't throw an exception?",
		"answer" : "<div> <p>Yes but only unchecked exception not checked.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 136
	},
	{
		"question" : "124) What is the package?",
		"answer" : "<div> <p>A package is a group of similar type of classes, interfaces, and sub-packages. It provides access protection and removes naming collision. The packages in Java can be categorized into two forms, inbuilt package, and user-defined package. There are many built-in packages such as Java, lang, awt, javax, swing, net, io, util, sql, etc. Consider the following example to create a package in Java.\n</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">//save as Simple.java\npackage mypack;\npublic class Simple{\n public static void main(String args[]){\n    System.out.println(\"Welcome to package\");\n   }\n}\n</textarea></div><br><img src=\"https://static.javatpoint.com/images/package.JPG\" alt=\"package in java\" title=\"package\"><br><br></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 137
	},
	{
		"question" : "1) How many objects of a servlet is created?",
		"answer" : "<div> <p>Only one object at the time of first request by servlet or web container.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 138
	},
	{
		"question" : "146) What is exception propagation?",
		"answer" : "<div> <p>An exception is first thrown from the top of the stack and if it is not caught, it drops down the call stack to the previous method, If not caught there, the exception again drops down to the previous method, and so on until they are caught or until they reach the very bottom of the call stack. This procedure is called exception propagation. By default, checked exceptions are not propagated.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class TestExceptionPropagation1{\n  void m(){\n    int data=50/0;\n  }\n  void n(){\n    m();\n  }\n  void p(){\n   try{\n    n();\n   }catch(Exception e){System.out.println(\"exception handled\");}\n  }\n  public static void main(String args[]){\n   TestExceptionPropagation1 obj=new TestExceptionPropagation1();\n   obj.p();\n   System.out.println(\"normal flow...\");\n  }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>exception handled\nnormal flow...\n</pre></div><img src=\"https://static.javatpoint.com/images/propagation.JPG\" alt=\"exception propagation\"><br></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 139
	},
	{
		"question" : "147) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Main \n{\n    void a()\n    {\n        try{\n        System.out.println(\"a(): Main called\");\n        b();\n        }catch(Exception e)\n        {\n            System.out.println(\"Exception is caught\");\n        }\n    }\n    void b() throws Exception\n    {\n     try{\n         System.out.println(\"b(): Main called\");\n         c();\n     }catch(Exception e){\n         throw new Exception();\n     }\n     finally \n     {\n         System.out.println(\"finally block is called\");\n     }\n    }\n    void c() throws Exception \n    {\n        throw new Exception();\n    }\n\n    public static void main (String args[])\n    {\n        Main m = new Main();\n        m.a();\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>a(): Main called\nb(): Main called\nfinally block is called\nException is caught\n</pre></div><p><strong>Explanation</strong></p><p>In the main method, a() of Main is called which prints a message and call b(). The method b() prints some message and then call c(). The method c() throws an exception which is handled by the catch block of method b. However, It propagates this exception by using <strong>throw Exception()</strong> to be handled by the method a(). As we know, finally block is always executed therefore the finally block in the method b() is executed first and prints a message. At last, the exception is handled by the catch block of the method a().</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 140
	},
	{
		"question" : "125) What are the advantages of defining packages in Java?",
		"answer" : "<div> <p>By defining packages, we can avoid the name conflicts between the same class names defined in different packages. Packages also enable the developer to organize the similar classes more effectively. For example, one can clearly understand that the classes present in java.io package are used to perform io related operations.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 141
	},
	{
		"question" : "2) What is the life-cycle of a servlet?",
		"answer" : "<div> <ol>\n<li>Servlet is loaded</li>\n<li>servlet is instantiated</li>\n<li>servlet is initialized</li>\n<li>service the request</li>\n<li>servlet is destroyed</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 142
	},
	{
		"question" : "19) What is the disadvantage of cookies?",
		"answer" : "<div> <p>It will not work if cookie is disabled from the browser.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 143
	},
	{
		"question" : "126) How to create packages in Java?",
		"answer" : "<div> <p>If you are using the programming IDEs like Eclipse, NetBeans, MyEclipse, etc. click on <strong>file-&gt;new-&gt;project</strong> and eclipse will ask you to enter the name of the package. It will create the project package containing various directories such as src, etc.\nIf you are using an editor like notepad for java programming, use the following steps to create the package.\n</p><ul class=\"points\">\n<li>Define a package <strong>package_name</strong>. Create the class with the name <strong>class_name</strong> and save this file with <strong>your_class_name.java</strong>.</li><br>\n<li>Now compile the file by running the following command on the terminal.</li>\n<div class=\"codeblock\"><textarea name=\"code\" class=\"java\">javac -d . your_class_name.java\n</textarea></div>\n<p>The above command creates the package with the name <strong>package_name</strong> in the present working directory.</p>\n<li>Now, run the class file by using the absolute class file name, like following.</li>\n<div class=\"codeblock\"><textarea name=\"code\" class=\"java\">java package_name.class_name\n</textarea></div>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 144
	},
	{
		"question" : "3) What are the life-cycle methods for a servlet?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>Method</th><th>Description</th></tr>\n<tr><td>public void init(ServletConfig config)</td><td>It is invoked only once when first request comes for the servlet. It is used to initialize the servlet.</td></tr>\n<tr><td>public void service(ServletRequest request,ServletResponse)throws ServletException,IOException</td><td> It is invoked at each request.The service() method is used to service the request. </td></tr>\n<tr><td>public void destroy()</td><td>It is invoked only once when servlet is unloaded.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 145
	},
	{
		"question" : "148) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Calculation \n{\n    int a; \n    public Calculation(int a)\n    {\n        this.a = a;\n    }\n    public int add()\n    {\n        a = a+10; \n        try \n        {\n            a = a+10; \n            try \n            {\n                a = a*10; \n                throw new Exception(); \n            }catch(Exception e){\n                a = a - 10;\n            }\n        }catch(Exception e)\n        {\n            a = a - 10; \n        }\n        return a;\n    }\n    \n    public static void main (String args[])\n    {\n        Calculation c = new Calculation(10);\n        int result = c.add();\n        System.out.println(\"result = \"+result);\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>result = 290\n</pre></div><p><strong>Explanation</strong></p><p> The instance variable a of class Calculation is initialized to 10 using the class constructor which is called while instantiating the class. The add method is called which returns an integer value result. In add() method, a is incremented by 10 to be 20. Then, in the first try block, 10 is again incremented by 10 to be 30. In the second try block, a is multiplied by 10 to be 300. The second try block throws the exception which is caught by the catch block associated with this try block. The catch block again alters the value of a by decrementing it by 10 to make it 290. Thus the add() method returns 290 which is assigned to result. However, the catch block associated with the outermost try block will never be executed since there is no exception which can be handled by this catch block.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 146
	},
	{
		"question" : "149) What is String Pool?",
		"answer" : "<div> <p>String pool is the space reserved in the heap memory that can be used to store the strings. The main advantage of using the String pool is whenever we create a string literal; the JVM checks the \"string constant pool\" first. If the string already exists in the pool, a reference to the pooled instance is returned. If the string doesn't exist in the pool, a new string instance is created and placed in the pool. Therefore, it saves the memory by avoiding the duplicacy.</p><img src=\"https://static.javatpoint.com/images/string.JPG\" alt=\"Java string literal\" style=\"height:400px\"></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 147
	},
	{
		"question" : "150) What is the meaning of immutable regarding String?",
		"answer" : "<div> <p>\nThe simple meaning of immutable is unmodifiable or unchangeable. In Java, String is immutable, i.e., once string object has been created, its value can't be changed. Consider the following example for better understanding.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Testimmutablestring{\n public static void main(String args[]){\n   String s=\"Sachin\";\n   s.concat(\" Tendulkar\");//concat() method appends the string at the end\n   System.out.println(s);//will print Sachin because strings are immutable objects\n }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Sachin\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 148
	},
	{
		"question" : "151) Why are the objects immutable in java?",
		"answer" : "<div> <p>\nBecause Java uses the concept of the string literal. Suppose there are five reference variables, all refer to one object \"sachin\". If one reference variable changes the value of the object, it will be affected by all the reference variables. That is why string objects are immutable in java.</p><img alt=\"Heap diagram\" src=\"https://static.javatpoint.com/images/string2.JPG\"><br></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 149
	},
	{
		"question" : "127) How can we access some class in another class in Java?",
		"answer" : "<div> <p>There are two ways to access a class in another class.</p><ul class=\"points\">\n<li><strong>By using the fully qualified name:</strong> To access a class in a different package, either we must use the fully qualified name of that class, or we must import the package containing that class.</li>\n<li><strong>By using the relative path</strong>, We can use the path of the class that is related to the package that contains our class. It can be the same or subpackage.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 150
	},
	{
		"question" : "20) How can we upload the file to the server using servlet?",
		"answer" : "<div> <p>One of the way is by MultipartRequest class provided by third party.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 151
	},
	{
		"question" : "4) Who is responsible to create the object of servlet?",
		"answer" : "<div> <p>The web container or servlet container.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 152
	},
	{
		"question" : "128) Do I need to import java.lang package any time? Why?",
		"answer" : "<div> <p>No. It is by default loaded internally by the JVM.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 153
	},
	{
		"question" : "21) What is load-on-startup in servlet?",
		"answer" : "<div> <p>The load-on-startup element of servlet in web.xml is used to load the servlet at the time of deploying the project or server start. So it saves time for the response of first request.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 154
	},
	{
		"question" : "5) When servlet object is created?",
		"answer" : "<div> <p>At the time of first request.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 155
	},
	{
		"question" : "22) What if we pass negative value in load-on-startup?",
		"answer" : "<div> <p>It will not affect the container, now servlet will be loaded at first request.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 156
	},
	{
		"question" : "152) How many ways can we create the string object?",
		"answer" : "<div> <h3 class=\"h4\">1) String Literal</h3><p>Java String literal is created by using double quotes. For Example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">String s=\"welcome\";\n</textarea></div><p>\nEach time you create a string literal, the JVM checks the \"string constant pool\" first. If the string already exists in the pool, a reference to the pooled instance is returned. If the string doesn't exist in the pool, a new string instance is created and placed in the pool. String objects are stored in a special memory area known as the <strong>string constant pool</strong> For example:\n</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">String s1=\"Welcome\";\nString s2=\"Welcome\";//It doesn't create a new instance\n</textarea></div><h3 class=\"h4\">2) By new keyword</h3><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">String s=new String(\"Welcome\");//creates two objects and one reference variable\n</textarea></div><p>\nIn such case, JVM will create a new string object in normal (non-pool) heap memory, and the literal \"Welcome\" will be placed in the constant string pool. The variable s will refer to the object in a heap (non-pool).\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 157
	},
	{
		"question" : "23) What is war file?",
		"answer" : "<div> <p>A war (web archive) file specifies the web elements. A servlet or jsp project can be converted into a war file. Moving one servlet project from one place to another will be fast as it is combined into a single file.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 158
	},
	{
		"question" : "153) How many objects will be created in the following code?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">String s1=\"Welcome\";\nString s2=\"Welcome\";\nString s3=\"Welcome\";\n</textarea></div><p>Only one object will be created using the above code because strings in Java are immutable.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 159
	},
	{
		"question" : "154) Why java uses the concept of the string literal?",
		"answer" : "<div> <p>\nTo make Java more memory efficient (because no new objects are created if it exists already in the string constant pool).\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 160
	},
	{
		"question" : "24) How to create war file?",
		"answer" : "<div> <p>The war file can be created using jar tool found in jdk/bin directory. If you are using Eclipse or Netbeans IDE, you can export your project as a war file.</p><p>To create war file from console, you can write following code.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">jar -cvf abc.war *\n</textarea></div><p>Now all the files of current directory will be converted into abc.war file.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 161
	},
	{
		"question" : "129) Can I import same package/class twice? Will the JVM load the package twice at runtime?",
		"answer" : "<div> <p>One can import the same package or the same class multiple times. Neither compiler nor JVM complains about it. However, the JVM will internally load the class only once no matter how many times you import the same class.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 162
	},
	{
		"question" : "25) What are the annotations used in Servlet 3?",
		"answer" : "<div> <p>There are mainly 3 annotations used for the servlet.</p><ol>\n<li>@WebServlet : for servlet class.</li>\n<li>@WebListener : for listener class.</li>\n<li>@WebFilter : for filter class.</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 163
	},
	{
		"question" : "130) What is the static import?",
		"answer" : "<div> <p>By static import, we can access the static members of a class directly, and there is no to qualify it with the class name.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 164
	},
	{
		"question" : "155) How many objects will be created in the following code?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">String s = new String(\"Welcome\");\n</textarea></div><p>\nTwo objects, one in string constant pool and other in non-pool(heap).\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 165
	},
	{
		"question" : "156) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">  public class Test \n{\n    public static void main (String args[])\n    {\n        String a = new String(\"Sharma is a good player\");\n        String b = \"Sharma is a good player\";\n        if(a == b)\n        {\n            System.out.println(\"a == b\");\n        }\n        if(a.equals(b))\n        {\n            System.out.println(\"a equals b\");\n        }\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>  a equals b\n</pre></div><p><strong>Explanation</strong></p><p>The operator <strong>==</strong> also check whether the references of the two string objects are equal or not. Although both of the strings contain the same content, their references are not equal because both are created by different ways(Constructor and String literal) therefore, <strong>a == b</strong> is unequal. On the other hand, the equal() method always check for the content. Since their content is equal hence, <strong>a equals b</strong> is printed.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 166
	},
	{
		"question" : "131) How many types of exception can occur in a Java program?",
		"answer" : "<div> <p>There are mainly two types of exceptions: checked and unchecked. Here, an error is considered as the unchecked exception. According to Oracle, there are three types of exceptions:</p><ul class=\"points\">\n<li><strong>Checked Exception:</strong> Checked exceptions are the one which are checked at compile-time. For example, SQLException, ClassNotFoundException, etc.</li><br>\n<li><strong>Unchecked Exception:</strong> Unchecked exceptions are the one which are handled at runtime because they can not be checked at compile-time. For example, ArithmaticException, NullPointerException, ArrayIndexOutOfBoundsException, etc.</li><br>\n<li><strong>Error:</strong> Error cause the program to exit since they are not recoverable. For Example, OutOfMemoryError, AssertionError, etc.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 167
	},
	{
		"question" : "176) What is the nested interface? ",
		"answer" : "<div> <p>An Interface that is declared inside the interface or class is known as the nested interface. It is static by default. The nested interfaces are used to group related interfaces so that they can be easy to maintain. The external interface or class must refer to the nested interface. It can't be accessed directly. The nested interface must be public if it is declared inside the interface but it can have any access modifier if declared within the class. The syntax of the nested interface is given as follows.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">interface interface_name{  \n ...  \n interface nested_interface_name{  \n  ...  \n }  \n}   \n\t</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 168
	},
	{
		"question" : "132) What is Exception Handling?",
		"answer" : "<div> <p>Exception Handling is a mechanism that is used to handle runtime errors. It is used primarily to handle checked exceptions. Exception handling maintains the normal flow of the program. There are mainly two types of exceptions: checked and unchecked. Here, the error is considered as the unchecked exception.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 169
	},
	{
		"question" : "26) Which event is fired at the time of project deployment and undeployment?",
		"answer" : "<div> <p>ServletContextEvent.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 170
	},
	{
		"question" : "177) Can a class have an interface? ",
		"answer" : "<div> <p>Yes, an interface can be defined within the class. It is called a nested interface.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 171
	},
	{
		"question" : "27) Which event is fired at the time of session creation and destroy?",
		"answer" : "<div> <p>HttpSessionEvent.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 172
	},
	{
		"question" : "178) Can an Interface have a class? ",
		"answer" : "<div> <p>Yes, they are static implicitly. </p><div class=\"q\">\n<h2 class=\"h2\">Garbage Collection Interview Questions</h2>\n</div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 173
	},
	{
		"question" : "179) What is Garbage Collection?",
		"answer" : "<div> <p>\nGarbage collection is a process of reclaiming the unused runtime objects. It is performed for memory management. In other words, we can say that It is the process of removing unused objects from the memory to free up space and make this space available for Java Virtual Machine. Due to garbage collection java gives 0 as output to a variable whose value is not set, i.e., the variable has been defined but not initialized. For this purpose, we were using free() function in the C language and delete() in C++. In Java, it is performed automatically. So, java provides better memory management.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 174
	},
	{
		"question" : "133) Explain the hierarchy of Java Exception classes? ",
		"answer" : "<div> <p>The java.lang.Throwable class is the root class of Java Exception hierarchy which is inherited by two subclasses: Exception and Error. A hierarchy of Java Exception classes are given below:</p><img src=\"https://static.javatpoint.com/images/throwable.png\" alt=\"hierarchy of exception handling\"></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 175
	},
	{
		"question" : "180) What is gc()?",
		"answer" : "<div> <p>The gc() method is used to invoke the garbage collector for cleanup processing. This method is found in System and Runtime classes. This function explicitly makes the Java Virtual Machine free up the space occupied by the unused objects so that it can be utilized or reused. Consider the following example for the better understanding of how the gc() method invoke the garbage collector.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class TestGarbage1{\n public void finalize(){System.out.println(\"object is garbage collected\");}\n public static void main(String args[]){\n  TestGarbage1 s1=new TestGarbage1();\n  TestGarbage1 s2=new TestGarbage1();\n  s1=null;\n  s2=null;\n  System.gc();\n }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><div class=\"codeblock3\"><pre>       object is garbage collected\n       object is garbage collected\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 176
	},
	{
		"question" : "28) Which event is fired at the time of setting, getting or removing attribute from application scope?",
		"answer" : "<div> <p>ServletContextAttributeEvent.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 177
	},
	{
		"question" : "2) Unchecked Exception",
		"answer" : "<div> <p>\nThe classes that extend Throwable class except RuntimeException and Error are known as checked exceptions, e.g., IOException, SQLException, etc. Checked exceptions are checked at compile-time.\n</p><p>\nThe classes that extend RuntimeException are known as unchecked exceptions, e.g., ArithmeticException, NullPointerException, etc. Unchecked exceptions are not checked at compile-time.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 178
	},
	{
		"question" : "29) What is the use of welcome-file-list?",
		"answer" : "<div> <p>It is used to specify the welcome file for the project.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 179
	},
	{
		"question" : "181) How is garbage collection controlled?",
		"answer" : "<div> <p>Garbage collection is managed by JVM. It is performed when there is not enough space in the memory and memory is running low. We can externally call the System.gc() for the garbage collection. However, it depends upon the JVM whether to perform it or not.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 180
	},
	{
		"question" : "135) What is the base class for Error and Exception? ",
		"answer" : "<div> <p>The Throwable class is the base class for Error and Exception.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 181
	},
	{
		"question" : "30) What is the use of attribute in servlets?",
		"answer" : "<div> <p>Attribute is a map object that can be used to set, get or remove in request, session or application scope. It is mainly used to share information between one servlet to another.</p></div>",
		"category" : "Java",
		"sub_category" : "Servlet",
		"id" : 182
	},
	{
		"question" : "3) By anonymous object:",
		"answer" : "<div> <p>There are many ways: </p><ul class=\"points\">\n<li>By nulling the reference</li>\n<li>By assigning a reference to another</li>\n<li>By anonymous object etc.</li>\n</ul><img src=\"https://static.javatpoint.com/images/java-garbage-collection-scenario.jpg\" alt=\"Java Garbage Collection Scenario\"><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">Employee e=new Employee();\ne=null;\n</textarea></div><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">Employee e1=new Employee();\nEmployee e2=new Employee();\ne1=e2;//now the first object referred by e1 is available for garbage collection\n</textarea></div><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">new Employee();\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 183
	},
	{
		"question" : "101) What is the difference between compile-time polymorphism and runtime polymorphism?",
		"answer" : "<div> <p>There are the following differences between compile-time polymorphism and runtime polymorphism.</p><table class=\"alt\">\n<tbody><tr><th>SN</th><th>compile-time polymorphism</th><th>Runtime polymorphism</th></tr>\n<tr><td>1</td><td>In compile-time polymorphism, call to a method is resolved at compile-time.</td><td>In runtime polymorphism, call to an overridden method is resolved at runtime.</td></tr>\n<tr><td>2</td><td>It is also known as static binding, early binding, or overloading.</td><td>It is also known as dynamic binding, late binding, overriding, or dynamic method dispatch.</td></tr>\n<tr><td>3</td><td>Overloading is a way to achieve compile-time polymorphism in which, we can define multiple methods or constructors with different signatures.</td><td>Overriding is a way to achieve runtime polymorphism in which, we can redefine some particular method or variable in the derived class. By using overriding, we can give some specific implementation to the base class properties in the derived class.</td></tr>\n<tr><td>4</td><td>It provides fast execution because the type of an object is determined at compile-time.</td><td>It provides slower execution as compare to compile-time because the type of an object is determined at run-time.</td></tr>\n<tr><td>5</td><td>Compile-time polymorphism provides less flexibility because all the things are resolved at compile-time.</td><td>Run-time polymorphism provides more flexibility because all the things are resolved at runtime.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 184
	},
	{
		"question" : "102) What is Runtime Polymorphism?",
		"answer" : "<div> <p>Runtime polymorphism or dynamic method dispatch is a process in which a call to an overridden method is resolved at runtime rather than at compile-time. In this process, an overridden method is called through the reference variable of a superclass. The determination of the method to be called is based on the object being referred to by the reference variable.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\"> class Bike{\n   void run(){System.out.println(\"running\");}\n }\n class Splendor extends Bike{\n   void run(){System.out.println(\"running safely with 60km\");}\n   public static void main(String args[]){\n     Bike b = new Splendor();//upcasting\n     b.run();\n   }\n }\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Output:</p><div class=\"codeblock3\"><pre>running safely with 60km.\n</pre></div><p>In this process, an overridden method is called through the reference variable of a superclass. The determination of the method to be called is based on the object being referred to by the reference variable.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 185
	},
	{
		"question" : "183) What is the purpose of the finalize() method?",
		"answer" : "<div> <p>The finalize() method is invoked just before the object is garbage collected. It is used to perform cleanup processing. The Garbage collector of JVM collects only those objects that are created by new keyword. So if you have created an object without new, you can use the finalize method to perform cleanup processing (destroying remaining objects). The cleanup processing is the process to free up all the resources, network which was previously used and no longer needed. It is essential to remember that it is not a reserved keyword, finalize method is present in the object class hence it is available in every class as object class is the superclass of every class in java. Here, we must note that neither finalization nor garbage collection is guaranteed. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class FinalizeTest {\n\tint j=12;\n\tvoid add()\n\t{\n\t\tj=j+12;\n\t\tSystem.out.println(\"J=\"+j);\n\t}\n\tpublic void finalize()\n\t{\n\t\tSystem.out.println(\"Object is garbage collected\");\n\t}\n\tpublic static void main(String[] args) {\n\t\tnew FinalizeTest().add();\n\t\tSystem.gc();\n\t\tnew FinalizeTest().add();\n\t}\n}\n\t</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 186
	},
	{
		"question" : "157) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Test \n{\n    public static void main (String args[])\n    {\n        String s1 = \"Sharma is a good player\";\n        String s2 = new String(\"Sharma is a good player\");\n        s2 = s2.intern();\n        System.out.println(s1 ==s2);\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>true\n</pre></div><p><strong>Explanation</strong></p><p>The intern method returns the String object reference from the string pool. In this case, s1 is created by using string literal whereas, s2 is created by using the String pool. However, s2 is changed to the reference of s1, and the operator <strong>==</strong> returns true.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 187
	},
	{
		"question" : "158) What are the differences between String and StringBuffer?",
		"answer" : "<div> <p> The differences between the String and StringBuffer is given in the table below.</p><table class=\"alt\">\n<tbody><tr><th>No.</th><th>String</th><th>StringBuffer</th></tr>\n<tr><td>1)</td><td>The String class is immutable.</td><td>The StringBuffer class is mutable.</td></tr>\n<tr><td>2)</td><td>The String is slow and consumes more memory when you concat too many strings because every time it creates a new instance.</td><td>The StringBuffer is fast and consumes less memory when you cancat strings.</td></tr>\n<tr><td>3)</td><td>The String class overrides the equals() method of Object class. So you can compare the contents of two strings by equals() method.</td><td>The StringBuffer class doesn't override the equals() method of Object class.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 188
	},
	{
		"question" : "198) In Java, How many ways you can take input from the console?",
		"answer" : "<div> <p>In Java, there are three ways by using which, we can take input from the console.</p><ul class=\"points\">\n<li><strong>Using BufferedReader class:</strong> we can take input from the console by wrapping System.in into an InputStreamReader and passing it into the BufferedReader. It provides an efficient reading as the input gets buffered. Consider the following example.</li>\n<div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \npublic class Person \n{ \n    public static void main(String[] args) throws IOException  \n    { \n      System.out.println(\"Enter the name of the person\");\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); \n        String name = reader.readLine(); \n        System.out.println(name);         \n    } \n} \n</textarea></div>\n<li><strong>Using Scanner class:</strong> The Java Scanner class breaks the input into tokens using a delimiter that is whitespace by default. It provides many methods to read and parse various primitive values. Java Scanner class is widely used to parse text for string and primitive types using a regular expression. Java Scanner class extends Object class and implements Iterator and Closeable interfaces. Consider the following example.</li>\n<div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.util.*;  \npublic class ScannerClassExample2 {    \n      public static void main(String args[]){                       \n          String str = \"Hello/This is JavaTpoint/My name is Abhishek.\";  \n          //Create scanner with the specified String Object  \n          Scanner scanner = new Scanner(str);  \n          System.out.println(\"Boolean Result: \"+scanner.hasNextBoolean());            \n          //Change the delimiter of this scanner  \n          scanner.useDelimiter(\"/\");  \n          //Printing the tokenized Strings  \n          System.out.println(\"---Tokenizes String---\");   \n        while(scanner.hasNext()){  \n            System.out.println(scanner.next());  \n        }  \n          //Display the new delimiter  \n          System.out.println(\"Delimiter used: \" +scanner.delimiter());            \n          scanner.close();  \n          }    \n}  \n  </textarea></div>\n<li><strong>Using Console class:</strong> The Java Console class is used to get input from the console. It provides methods to read texts and passwords. If you read the password using the Console class, it will not be displayed to the user. The java.io.Console class is attached to the system console internally. The Console class is introduced since 1.5. Consider the following example.</li>\n<div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.Console;  \nclass ReadStringTest{    \npublic static void main(String args[]){    \nConsole c=System.console();    \nSystem.out.println(\"Enter your name: \");    \nString n=c.readLine();    \nSystem.out.println(\"Welcome \"+n);    \n}    \n}  \n</textarea></div>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 189
	},
	{
		"question" : "103) Can you achieve Runtime Polymorphism by data members?",
		"answer" : "<div> <p>No, because method overriding is used to achieve runtime polymorphism and data members cannot be overridden. We can override the member functions but not the data members. Consider the example given below.\n</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\"> class Bike{\n  int speedlimit=90;\n }\n class Honda3 extends Bike{\n  int speedlimit=150;\n  public static void main(String args[]){\n   Bike obj=new Honda3();\n   System.out.println(obj.speedlimit);//90\n    }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Output:</p><div class=\"codeblock3\"><pre>90\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 190
	},
	{
		"question" : "159) What are the differences between StringBuffer and StringBuilder?",
		"answer" : "<div> <p>The differences between the StringBuffer and StringBuilder is given below.</p><table class=\"alt\">\n<tbody><tr><th>No.</th><th>StringBuffer</th><th>StringBuilder</th></tr>\n<tr><td>1)</td><td>StringBuffer is <em>synchronized</em>, i.e., thread safe. It means two threads can't call the methods of StringBuffer simultaneously.</td><td>StringBuilder is <em>non-synchronized</em>,i.e., not thread safe. It means two threads can call the methods of StringBuilder simultaneously.</td></tr>\n<tr><td>2)</td><td>StringBuffer is <em>less efficient</em> than StringBuilder.</td><td>StringBuilder is <em>more efficient</em> than StringBuffer.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 191
	},
	{
		"question" : "184) Can an unreferenced object be referenced again?",
		"answer" : "<div> <p>Yes, </p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 192
	},
	{
		"question" : "104) What is the difference between static binding and dynamic binding?",
		"answer" : "<div> <p>In case of the static binding, the type of the object is determined at compile-time whereas, in the dynamic binding, the type of the object is determined at runtime.</p><p><strong>Static Binding</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Dog{\n private void eat(){System.out.println(\"dog is eating...\");}\n\n public static void main(String args[]){\n  Dog d1=new Dog();\n  d1.eat();\n }\n}\n</textarea></div><p><strong>Dynamic Binding</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Animal{\n void eat(){System.out.println(\"animal is eating...\");}\n}\n\nclass Dog extends Animal{\n void eat(){System.out.println(\"dog is eating...\");}\n\n public static void main(String args[]){\n  Animal a=new Dog();\n  a.eat();\n }\n}\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 193
	},
	{
		"question" : "185) What kind of thread is the Garbage collector thread? ",
		"answer" : "<div> <p>Daemon thread.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 194
	},
	{
		"question" : "105) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class BaseTest \n{\n  void print()\n  {\n    System.out.println(\"BaseTest:print() called\");\n  }\n}\npublic class Test extends BaseTest \n{\n  void print() \n  {\n    System.out.println(\"Test:print() called\");\n  }\n  public static void main (String args[])\n  {\n    BaseTest b = new Test();\n    b.print();\n  }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>  Test:print() called\n</pre></div><p><strong>Explanation</strong></p><p>It is an example of Dynamic method dispatch. The type of reference variable b is determined at runtime. At compile-time, it is checked whether that method is present in the Base class. In this case, it is overridden in the child class, therefore, at runtime the derived class method is called.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 195
	},
	{
		"question" : "160) How can we create an immutable class in Java?",
		"answer" : "<div> <p>We can create an immutable class by defining a final class having all of its members as final. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public final class Employee{\nfinal String pancardNumber;\n\npublic Employee(String pancardNumber){\nthis.pancardNumber=pancardNumber;\n}\n\npublic String getPancardNumber(){\nreturn pancardNumber;\n}\n\n}\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 196
	},
	{
		"question" : "186) What is the difference between final, finally and finalize?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>No.</th><th>final</th><th>finally</th><th>finalize</th></tr>\n<tr><td>1)</td><td>Final is used to apply restrictions on class, method, and variable. The final class can't be inherited, final method can't be overridden, and final variable value can't be changed.</td><td>Finally is used to place important code, it will be executed whether an exception is handled or not.</td><td>Finalize is used to perform clean up processing just before an object is garbage collected. </td></tr>\n<tr><td>2)</td><td>Final is a keyword.</td><td>Finally is a block.</td><td>Finalize is a method.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 197
	},
	{
		"question" : "199) What is serialization?",
		"answer" : "<div> <p>Serialization in Java is a mechanism of writing the state of an object into a byte stream. It is used primarily in Hibernate, RMI, JPA, EJB and JMS technologies. It is mainly used to travel object's state on the network (which is known as marshaling). Serializable interface is used to perform serialization. It is helpful when you require to save the state of a program to storage such as the file. At a later point of time, the content of this file can be restored using deserialization. It is also required to implement RMI(Remote Method Invocation). With the help of RMI, it is possible to invoke the method of a Java object on one machine to another machine.</p><img src=\"https://static.javatpoint.com/images/core/java-serialization.png\" alt=\"java serialization\"></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 198
	},
	{
		"question" : "161) What is the purpose of toString() method in Java?",
		"answer" : "<div> <p>The toString() method returns the string representation of an object. If you print any object, java compiler internally invokes the toString() method on the object. So overriding the toString() method, returns the desired output, it can be the state of an object, etc. depending upon your implementation. By overriding the toString() method of the Object class, we can return the values of the object, so we don't need to write much code. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">\nclass Student{\n int rollno;\n String name;\n String city;\n\n Student(int rollno, String name, String city){\n this.rollno=rollno;\n this.name=name;\n this.city=city;\n }\n \n public String toString(){//overriding the toString() method\n  return rollno+\" \"+name+\" \"+city;\n }\n public static void main(String args[]){\n   Student s1=new Student(101,\"Raj\",\"lucknow\");\n   Student s2=new Student(102,\"Vijay\",\"ghaziabad\");\n   \n   System.out.println(s1);//compiler writes here s1.toString()\n   System.out.println(s2);//compiler writes here s2.toString()\n }\n}\n\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>101 Raj lucknow\n102 Vijay ghaziabad\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 199
	},
	{
		"question" : "187) What is the purpose of the Runtime class? ",
		"answer" : "<div> <p>Java Runtime class is used to interact with a java runtime environment. Java Runtime class provides methods to execute a process, invoke GC, get total and free memory, etc. There is only one instance of java.lang.Runtime class is available for one java application. The Runtime.getRuntime() method returns the singleton instance of Runtime class. </p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 200
	},
	{
		"question" : "162) Why CharArray() is preferred over String to store the password?",
		"answer" : "<div> <p>String stays in the string pool until the garbage is collected. If we store the password into a string, it stays in the memory for a longer period, and anyone having the memory-dump can extract the password as clear text. On the other hand, Using CharArray allows us to set it to blank whenever we are done with the password. It avoids the security threat with the string by enabling us to control the memory.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 201
	},
	{
		"question" : "200) How can you make a class serializable in Java?",
		"answer" : "<div> <p>A class can become serializable by implementing the Serializable interface.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 202
	},
	{
		"question" : "163) Write a Java program to count the number of words present in a string?",
		"answer" : "<div> <p><strong>Program:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">  public class Test \n{\n    public static void main (String args[])\n    {\n        String s = \"Sharma is a good player and he is so punctual\";\n        String words[] = s.split(\" \");\n        System.out.println(\"The Number of words present in the string are : \"+words.length);\n    }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>The Number of words present in the string are : 10\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 203
	},
	{
		"question" : "188) How will you invoke any external process in Java? ",
		"answer" : "<div> <p>By Runtime.getRuntime().exec(?) method. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Runtime1{\n public static void main(String args[])throws Exception{\n  Runtime.getRuntime().exec(\"notepad\");//will open a new notepad\n }\n}\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 204
	},
	{
		"question" : "201) How can you avoid serialization in child class if the base class is implementing the Serializable interface?",
		"answer" : "<div> <p> It is very tricky to prevent serialization of child class if the base class is intended to implement the Serializable interface. However, we cannot do it directly, but the serialization can be avoided by implementing the writeObject() or readObject() methods in the subclass and throw NotSerializableException from these methods. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.FileInputStream; \nimport java.io.FileOutputStream; \nimport java.io.IOException; \nimport java.io.NotSerializableException; \nimport java.io.ObjectInputStream; \nimport java.io.ObjectOutputStream; \nimport java.io.Serializable; \nclass Person implements Serializable \n{ \n    String name = \" \";\n    public Person(String name)  \n    { \n        this.name = name; \n    }       \n} \nclass Employee extends Person\n{ \n    float salary;\n    public Employee(String name, float salary)  \n    { \n        super(name); \n        this.salary = salary; \n    } \n    private void writeObject(ObjectOutputStream out) throws IOException \n    { \n        throw new NotSerializableException(); \n    } \n    private void readObject(ObjectInputStream in) throws IOException \n    { \n        throw new NotSerializableException(); \n    } \n      \n} \npublic class Test \n{ \n    public static void main(String[] args)  \n            throws Exception  \n    { \n        Employee emp = new Employee(\"Sharma\", 10000); \n          \n        System.out.println(\"name = \" + emp.name); \n        System.out.println(\"salary = \" + emp.salary); \n          \n        FileOutputStream fos = new FileOutputStream(\"abc.ser\"); \n        ObjectOutputStream oos = new ObjectOutputStream(fos); \n              \n        oos.writeObject(emp); \n              \n        oos.close(); \n        fos.close(); \n              \n        System.out.println(\"Object has been serialized\"); \n          \n        FileInputStream f = new FileInputStream(\"ab.txt\"); \n        ObjectInputStream o = new ObjectInputStream(f); \n              \n        Employee emp1 = (Employee)o.readObject(); \n              \n        o.close(); \n        f.close(); \n              \n        System.out.println(\"Object has been deserialized\"); \n          \n        System.out.println(\"name = \" + emp1.name); \n        System.out.println(\"salary = \" + emp1.salary); \n    } \n} \n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 205
	},
	{
		"question" : "189) Give the hierarchy of InputStream and OutputStream classes.",
		"answer" : "<div> <p><strong>OutputStream Hierarchy</strong></p><img src=\"java/javaio/images/java-outputstream.png\" alt=\"Java output stream hierarchy\"><p><strong>InputStream Hierarchy</strong></p><img src=\"java/javaio/images/java-inputstream.png\" alt=\"Java input stream hierarchy\"></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 206
	},
	{
		"question" : "202) Can a Serialized object be transferred via network?",
		"answer" : "<div> <p>Yes, we can transfer a serialized object via network because the serialized object is stored in the memory in the form of bytes and can be transmitted over the network. We can also write the serialized object to the disk or the database.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 207
	},
	{
		"question" : "164) Name some classes present in ",
		"answer" : "<div> <p>There are the following classes and interfaces present in java.util.regex package.</p><ul class=\"points\">\n<li>MatchResult Interface</li>\n<li>Matcher class</li>\n<li>Pattern class</li>\n<li>PatternSyntaxException class</li>\n</ul><img src=\"https://static.javatpoint.com/images/java-regex-api.jpg\" alt=\"Java Regex API\"></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 208
	},
	{
		"question" : "106) What is Java instanceOf operator?",
		"answer" : "<div> <p>The instanceof in Java is also known as type comparison operator because it compares the instance with type. It returns either true or false. If we apply the instanceof operator with any variable that has a null value, it returns false. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Simple1{\n public static void main(String args[]){\n Simple1 s=new Simple1();\n System.out.println(s instanceof Simple1);//true\n }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>true\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 209
	},
	{
		"question" : "165) How the metacharacters are different from the ordinary characters?",
		"answer" : "<div> <p>Metacharacters have the special meaning to the regular expression engine. The metacharacters are ^, $, ., *, +, etc. The regular expression engine does not consider them as the regular characters. To enable the regular expression engine treating the metacharacters as ordinary characters, we need to escape the metacharacters with the backslash.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 210
	},
	{
		"question" : "203) What is Deserialization?",
		"answer" : "<div> <p>Deserialization is the process of reconstructing the object from the serialized state. It is the reverse operation of serialization. An ObjectInputStream deserializes objects and primitive data written using an ObjectOutputStream.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.*;\nclass Depersist{\n public static void main(String args[])throws Exception{\n  \n  ObjectInputStream in=new ObjectInputStream(new FileInputStream(\"f.txt\"));\n  Student s=(Student)in.readObject();\n  System.out.println(s.id+\" \"+s.name);\n\n  in.close();\n }\n}\n</textarea></div><div class=\"codeblock3\"><pre>211 ravi\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 211
	},
	{
		"question" : "166) Write a regular expression to validate a password. A password must start with an alphabet and followed by alphanumeric characters; Its length must be in between 8 to 20.",
		"answer" : "<div> <p>The regular expression for the above criteria will be: <strong>^[a-zA-Z][a-zA-Z0-9]{8,19}</strong> where ^ represents the start of the regex, [a-zA-Z] represents that the first character must be an alphabet, [a-zA-Z0-9] represents the alphanumeric character, {8,19} represents that the length of the password must be in between 8 and 20.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 212
	},
	{
		"question" : "107) What is the abstraction?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><p>Abstraction is a process of hiding the implementation details and showing only functionality to the user. It displays just the essential things to the user and hides the internal information, for example, sending SMS where you type the text and send the message. You don't know the internal processing about the message delivery. Abstraction enables you to focus on what the object does instead of how it does it. Abstraction lets you focus on what the object does instead of how it does it.</p><p>In Java, there are two ways to achieve the abstraction.</p><ul class=\"points\">\n<li>Abstract Class</li>\n<li>Interface</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 213
	},
	{
		"question" : "204) What is the transient keyword?",
		"answer" : "<div> <p>If you define any data member as transient, it will not be serialized. By determining transient keyword, the value of variable need not persist when it is restored. <a>More details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 214
	},
	{
		"question" : "167) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.util.regex.*;\nclass RegexExample2{\npublic static void main(String args[]){\nSystem.out.println(Pattern.matches(\".s\", \"as\")); //line 4\nSystem.out.println(Pattern.matches(\".s\", \"mk\")); //line 5 \nSystem.out.println(Pattern.matches(\".s\", \"mst\")); //line 6\nSystem.out.println(Pattern.matches(\".s\", \"amms\")); //line 7\nSystem.out.println(Pattern.matches(\"..s\", \"mas\")); //line 8\n}}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>true\nfalse \nfalse\nfalse \ntrue\n</pre></div><p><strong>Explanation</strong></p><p>line 4 prints true since the second character of string is s, line 5 prints false since the second character is not s, line 6 prints false since there are more than 3 characters in the string, line 7 prints false since there are more than 2 characters in the string, and it contains more than 2 characters as well, line 8 prints true since the third character of the string is s.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 215
	},
	{
		"question" : "190) What do you understand by an IO stream?",
		"answer" : "<div> <p>The stream is a sequence of data that flows from source to destination. It is composed of bytes. In Java, three streams are created for us automatically.</p><ul class=\"points\">\n<li>System.out: standard output stream</li>\n<li>System.in: standard input stream</li>\n<li>System.err: standard error stream</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 216
	},
	{
		"question" : "108) What is the difference between abstraction and encapsulation?",
		"answer" : "<div> <p>Abstraction hides the implementation details whereas encapsulation wraps code and data into a single unit.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 217
	},
	{
		"question" : "191) What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy? ",
		"answer" : "<div> <p>The Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented. The ByteStream classes are used to perform input-output of 8-bit bytes whereas the CharacterStream classes are used to perform the input/output for the 16-bit Unicode system. There are many classes in the ByteStream class hierarchy, but the most frequently used classes are FileInputStream and FileOutputStream. The most frequently used classes CharacterStream class hierarchy is FileReader and FileWriter.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 218
	},
	{
		"question" : "192) What are the super most classes for all the streams?",
		"answer" : "<div> <p>All the stream classes can be divided into two types of classes that are ByteStream classes and CharacterStream Classes. The ByteStream classes are further divided into InputStream classes and OutputStream classes. CharacterStream classes are also divided into Reader classes and Writer classes. The SuperMost classes for all the InputStream classes is java.io.InputStream and for all the output stream classes is java.io.OutPutStream. Similarly, for all the reader classes, the super-most class is java.io.Reader, and for all the writer classes, it is java.io.Writer.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 219
	},
	{
		"question" : "205) What is Externalizable?",
		"answer" : "<div> <p>The Externalizable interface is used to write the state of an object into a byte stream in a compressed format. It is not a marker interface.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 220
	},
	{
		"question" : "168) What are the advantages of Java inner classes? ",
		"answer" : "<div> <p>There are two types of advantages of Java inner classes.</p><ul class=\"points\">\n<li>Nested classes represent a special type of relationship that is it can access all the members (data members and methods) of the outer class including private.</li>\n<li>Nested classes are used to develop a more readable and maintainable code because it logically groups classes and interfaces in one place only.</li>\n<li><strong>Code Optimization:</strong> It requires less code to write.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 221
	},
	{
		"question" : "169) What is a nested class? ",
		"answer" : "<div> <p>The nested class can be defined as the class which is defined inside another class or interface. We use the nested class to logically group classes and interfaces in one place so that it can be more readable and maintainable. A nested class can access all the data members of the outer class including private data members and methods. The syntax of the nested class is defined below.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Java_Outer_class{  \n //code  \n class Java_Nested_class{  \n  //code  \n }  \n}  \n\t</textarea></div><p>There are two types of nested classes, static nested class, and non-static nested class. The non-static nested class can also be called as inner-class</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 222
	},
	{
		"question" : "193) What are the FileInputStream and FileOutputStream?",
		"answer" : "<div> <p><strong>Java FileOutputStream</strong> is an output stream used for writing data to a file. If you have some primitive values to write into a file, use FileOutputStream class. You can write byte-oriented as well as character-oriented data through the FileOutputStream class. However, for character-oriented data, it is preferred to use FileWriter than FileOutputStream. Consider the following example of writing a byte into a file.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.FileOutputStream;  \npublic class FileOutputStreamExample {  \n    public static void main(String args[]){    \n           try{    \n             FileOutputStream fout=new FileOutputStream(\"D:\\\\testout.txt\");    \n             fout.write(65);    \n             fout.close();    \n             System.out.println(\"success...\");    \n            }catch(Exception e){System.out.println(e);}    \n      }    \n}  \n</textarea></div><p><strong>Java FileInputStream class </strong>obtains input bytes from a file. It is used for reading byte-oriented data (streams of raw bytes) such as image data, audio, video, etc. You can also read character-stream data. However, for reading streams of characters, it is recommended to use FileReader class. Consider the following example for reading bytes from a file.\n</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.FileInputStream;  \npublic class DataStreamExample {  \n     public static void main(String args[]){    \n          try{    \n            FileInputStream fin=new FileInputStream(\"D:\\\\testout.txt\");    \n            int i=fin.read();  \n            System.out.print((char)i);    \n  \n            fin.close();    \n          }catch(Exception e){System.out.println(e);}    \n         }    \n        }  \n  </textarea>\n</div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 223
	},
	{
		"question" : "206) What is the difference between Serializable and Externalizable interface? ",
		"answer" : "<div> <p></p><table class=\"alt\">\n<tbody><tr><th>No.</th><th>Serializable</th><th>Externalizable</th></tr>\n<tr><td>1)</td><td>The Serializable interface does not have any method, i.e., it is a marker interface.</td><td>The Externalizable interface contains is not a marker interface, It contains two methods, i.e., writeExternal() and readExternal().</td></tr>\n<tr><td>2)</td><td> It is used to \"mark\" Java classes so that objects of these classes may get the certain capability. </td><td>The Externalizable interface provides control of the serialization logic to the programmer.</td></tr>\n<tr><td>3)</td><td>It is easy to implement but has the higher performance cost.</td><td>It is used to perform the serialization and often result in better performance.</td></tr>\n<tr><td>4)</td><td>No class constructor is called in serialization.</td><td>We must call a public default constructor while using this interface.</td></tr>\n</tbody></table><p></p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 224
	},
	{
		"question" : "170) What are the disadvantages of using inner classes?",
		"answer" : "<div> <p>There are the following main disadvantages of using inner classes.</p><ul class=\"points\">\n<li>Inner classes increase the total number of classes used by the developer and therefore increases the workload of JVM since it has to perform some routine operations for those extra classes which result in slower performance.</li>\n<li>IDEs provide less support to the inner classes as compare to the top level classes and therefore it annoys the developers while working with inner classes.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 225
	},
	{
		"question" : "171) What are the types of inner classes (non-static nested class) used in Java? ",
		"answer" : "<div> <p>There are mainly three types of inner classes used in Java.</p><table class=\"alt\">\n<tbody><tr><th>Type</th><th>Description</th></tr>\n<tr><td><a>Member Inner Class</a></td><td>A class created within class and outside method.</td></tr>\n<tr><td><a>Anonymous Inner Class</a></td><td>A class created for implementing an interface or extending class. Its name is decided by the java compiler.</td></tr>\n<tr><td><a>Local Inner Class</a></td><td>A class created within the method.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 226
	},
	{
		"question" : "207) Give a brief description of Java socket programming? ",
		"answer" : "<div> <p>Java Socket programming is used for communication between the applications running on different JRE. Java Socket programming can be connection-oriented or connectionless. Socket and ServerSocket classes are used for connection-oriented socket programming and DatagramSocket, and DatagramPacket classes are used for connectionless socket programming. The client in socket programming must know two information: </p><ul class=\"points\">\n<li>IP address of the server</li>\n<li>port number</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 227
	},
	{
		"question" : "215) What is the output of the following Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Simple{  \n public Simple()\n {\n   System.out.println(\"Constructor of Simple class is invoked\");\n }\n void message(){System.out.println(\"Hello Java\");}  \n}  \n  \nclass Test1{  \n public static void main(String args[]){  \n  try{  \n  Class c=Class.forName(\"Simple\");  \n  Simple s=(Simple)c.newInstance();  \n  s.message();  \n  }catch(Exception e){System.out.println(e);}  \n }  \n}  \n</textarea></div><p><strong>Output</strong>\n</p><div class=\"codeblock3\"><pre>Constructor of Simple class is invoked\nHello Java\n</pre></div><p><strong>Explanation</strong></p><p>The newInstance() method of the Class class is used to invoke the constructor at runtime. In this program, the instance of the Simple class is created.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 228
	},
	{
		"question" : "208) What is Socket? ",
		"answer" : "<div> <p>A socket is simply an endpoint for communications between the machines. It provides the connection mechanism to connect the two computers using TCP. The Socket class can be used to create a socket.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 229
	},
	{
		"question" : "216) What is the purpose of using javap?",
		"answer" : "<div> <p>The javap command disassembles a class file. The javap command displays information about the fields, constructors and methods present in a class file.</p><p><strong>Syntax</strong></p><p>javap fully_class_name</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 230
	},
	{
		"question" : "209) What are the steps that are followed when two computers connect through TCP? ",
		"answer" : "<div> <p>There are the following steps that are performed when two computers connect through TCP.</p><ul class=\"points\">\n<li>The ServerSocket object is instantiated by the server which denotes the port number to which, the connection will be made.</li>\n<li>After instantiating the ServerSocket object, the server invokes accept() method of ServerSocket class which makes server wait until the client attempts to connect to the server on the given port.</li>\n<li>Meanwhile, the server is waiting, a socket is created by the client by instantiating Socket class. The socket class constructor accepts the server port number and server name.</li>\n<li>The Socket class constructor attempts to connect with the server on the specified name. If the connection is established, the client will have a socket object that can communicate with the server.</li>\n<li>The accept() method invoked by the server returns a reference to the new socket on the server that is connected with the server.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 231
	},
	{
		"question" : "194) What is the purpose of using BufferedInputStream and BufferedOutputStream classes?",
		"answer" : "<div> <p>Java BufferedOutputStream class is used for buffering an output stream. It internally uses a buffer to store data. It adds more efficiency than to write data directly into a stream. So, it makes the performance fast. Whereas, Java BufferedInputStream class is used to read information from the stream. It internally uses the buffer mechanism to make the performance fast.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 232
	},
	{
		"question" : "172) Is there any difference between nested classes and inner classes? ",
		"answer" : "<div> <p>Yes, inner classes are non-static nested classes. In other words, we can say that inner classes are the part of nested classes.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 233
	},
	{
		"question" : "217) Can you access the private method from outside the class?",
		"answer" : "<div> <p>Yes, by changing the runtime behavior of a class if the class is not secured.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 234
	},
	{
		"question" : "173) Can we access the non-final local variable, inside the local inner class? ",
		"answer" : "<div> <p>No, the local variable must be constant if you want to access it in the local inner class.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 235
	},
	{
		"question" : "195) How to set the Permissions to a file in Java?",
		"answer" : "<div> <p>In Java, FilePermission class is used to alter the permissions set on a file. Java FilePermission class contains the permission related to a directory or file. All the permissions are related to the path. The path can be of two types:</p><ul class=\"points\">\n<li>D:\\\\IO\\\\-: It indicates that the permission is associated with all subdirectories and files recursively.</li>\n<li>D:\\\\IO\\\\*: It indicates that the permission is associated with all directory and files within this directory excluding subdirectories.</li>\n</ul><p>Let's see the simple example in which permission of a directory path is granted with read permission and a file of this directory is granted for write permission. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"Java\">package com.javatpoint;\nimport java.io.*;\nimport java.security.PermissionCollection;\npublic class FilePermissionExample{\n     public static void main(String[] args) throws IOException {\n      String srg = \"D:\\\\IO Package\\\\java.txt\";\n      FilePermission file1 = new FilePermission(\"D:\\\\IO Package\\\\-\", \"read\");\n      PermissionCollection permission = file1.newPermissionCollection();\n      permission.add(file1);\n           FilePermission file2 = new FilePermission(srg, \"write\");\n           permission.add(file2);\n         if(permission.implies(new FilePermission(srg, \"read,write\"))) {\n           System.out.println(\"Read, Write permission is granted for the path \"+srg );\n             }else {\n            System.out.println(\"No Read, Write permission is granted for the path \"+srg);            }\n     } \n}\n</textarea></div><p>Output</p><div class=\"codeblock3\"><pre>Read, Write permission is granted for the path D:\\IO Package\\java.txt\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 236
	},
	{
		"question" : "174) How many class files are created on compiling the OuterClass in the following program? ",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Person {\nString name, age, address;\nclass Employee{\n  float salary=10000;\n}\nclass BusinessMen{\n  final String gstin=\"�4433drt3$\"; \n}\npublic static void main (String args[])\n{\n  Person p = new Person();\n}\n}\n</textarea></div><p>3 class-files will be created named as Person.class, Person$BusinessMen.class, and Person$Employee.class.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 237
	},
	{
		"question" : "218)What are wrapper classes? ",
		"answer" : "<div> <p>Wrapper classes are classes that allow primitive types to be accessed as objects. In other words, we can say that wrapper classes are built-in java classes which allow the conversion of objects to primitives and primitives to objects. The process of converting primitives to objects is called autoboxing, and the process of converting objects to primitives is called unboxing. There are eight wrapper classes present in <strong>java.lang</strong> package is given below.</p><table class=\"alt\">\n<tbody><tr><th>Primitive Type</th><th>Wrapper class</th></tr>\n<tr><td>boolean</td><td>Boolean</td></tr>\n<tr><td>char</td><td>Character</td></tr>\n<tr><td>byte</td><td>Byte</td></tr>\n<tr><td>short</td><td>Short</td></tr>\n<tr><td>int</td><td>Integer</td></tr>\n<tr><td>long</td><td>Long</td></tr>\n<tr><td>float</td><td>Float</td></tr>\n<tr><td>double</td><td>Double</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 238
	},
	{
		"question" : "210) Write a program in Java to establish a connection between client and server?",
		"answer" : "<div> <p>Consider the following program where the connection between the client and server is established.</p><p class=\"filename\">File: MyServer.java</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.*;\nimport java.net.*;\npublic class MyServer {\npublic static void main(String[] args){\ntry{\nServerSocket ss=new ServerSocket(6666);\nSocket s=ss.accept();//establishes connection \nDataInputStream dis=new DataInputStream(s.getInputStream());\nString  str=(String)dis.readUTF();\nSystem.out.println(\"message= \"+str);\nss.close();\n}catch(Exception e){System.out.println(e);}\n}\n}\n</textarea></div><p class=\"filename\">File: MyClient.java</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.*;\nimport java.net.*;\npublic class MyClient {\npublic static void main(String[] args) {\ntry{  \nSocket s=new Socket(\"localhost\",6666);\nDataOutputStream dout=new DataOutputStream(s.getOutputStream());\ndout.writeUTF(\"Hello Server\");\ndout.flush();\ndout.close();\ns.close();\n}catch(Exception e){System.out.println(e);}\n}\n}\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 239
	},
	{
		"question" : "219)What are autoboxing and unboxing? When does it occur?",
		"answer" : "<div> <p>The autoboxing is the process of converting primitive data type to the corresponding wrapper class object, eg., int to Integer. The unboxing is the process of converting wrapper class object to primitive data type. For eg., integer to int. Unboxing and autoboxing occur automatically in Java. However, we can externally convert one into another by using the methods like valueOf() or xxxValue().</p><p>It can occur whenever a wrapper class object is expected, and primitive data type is provided or vice versa.</p><ul class=\"points\">\n<li>Adding primitive types into Collection like ArrayList in Java.</li>\n<li>Creating an instance of parameterized classes ,e.g., ThreadLocal which expect Type.</li>\n<li>Java automatically converts primitive to object whenever one is required and another is provided in the method calling.</li>\n<li>When a primitive type is assigned to an object type. </li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 240
	},
	{
		"question" : "211) How do I convert a numeric IP address like 192.18.97.39 into a hostname like java.sun.com? ",
		"answer" : "<div> <p>By InetAddress.getByName(\"192.18.97.39\").getHostName() where 192.18.97.39 is the IP address. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.io.*;  \nimport java.net.*;  \npublic class InetDemo{  \npublic static void main(String[] args){  \ntry{  \nInetAddress ip=InetAddress.getByName(\"195.201.10.8\");  \n\nSystem.out.println(\"Host Name: \"+ip.getHostName());  \n}catch(Exception e){System.out.println(e);}  \n}  \n}  \n\t</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 241
	},
	{
		"question" : "220) What is the output of the below Java program?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Test1\n{\n  public static void main(String[] args) {\n  Integer i = new Integer(201);\n  Integer j = new Integer(201);\n  if(i == j)\n  {\n    System.out.println(\"hello\");\n  }\n  else \n  {\n    System.out.println(\"bye\");\n  }\n  }\n}\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>bye\n</pre></div><p><strong>Explanation</strong></p><p>The Integer class caches integer values from -127 to 127. Therefore, the Integer objects can only be created in the range -128 to 127. The operator <strong>==</strong> will not work for the value greater than 127; thus <strong>bye</strong> is printed.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 242
	},
	{
		"question" : "175) What are anonymous inner classes?",
		"answer" : "<div> <p>Anonymous inner classes are the classes that are automatically declared and instantiated within an expression. We cannot apply different access modifiers to them. Anonymous class cannot be static, and cannot define any static fields, method, or class. In other words, we can say that it a class without the name and can have only one object that is created by its definition. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">abstract class Person{\n  abstract void eat();\n}\nclass TestAnonymousInner{\n public static void main(String args[]){\n  Person p=new Person(){\n  void eat(){System.out.println(\"nice fruits\");}\n  };\n  p.eat();\n }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Output:</p><div class=\"codeblock3\"><pre>nice fruits\n</pre></div><p>Consider the following example for the working of the anonymous class using interface.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">interface Eatable{\n void eat();\n}\nclass TestAnnonymousInner1{\n public static void main(String args[]){\n Eatable e=new Eatable(){\n  public void eat(){System.out.println(\"nice fruits\");}\n };\n e.eat();\n }\n}\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Output:</p><div class=\"codeblock3\"><pre>nice fruits\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 243
	},
	{
		"question" : "212) What is the reflection?",
		"answer" : "<div> <p>Reflection is the process of examining or modifying the runtime behavior of a class at runtime. The java.lang.Class class provides various methods that can be used to get metadata, examine and change the runtime behavior of a class. The java.lang and java.lang.reflect packages provide classes for java reflection. It is used in:</p><ul>\n<li>IDE (Integrated Development Environment), e.g., Eclipse, MyEclipse, NetBeans.</li>\n<li>Debugger</li>\n<li>Test Tools, etc.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 244
	},
	{
		"question" : "196) What are FilterStreams? ",
		"answer" : "<div> <p><strong>FilterStream classes</strong> are used to add additional functionalities to the other stream classes. FilterStream classes act like an interface which read the data from a stream, filters it, and pass the filtered data to the caller. The FilterStream classes provide extra functionalities like adding line numbers to the destination file, etc.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 245
	},
	{
		"question" : "213) What is the purpose of using java.lang.Class class?",
		"answer" : "<div> <p>The java.lang.Class class performs mainly two tasks:</p><ul class=\"points\">\n<li>Provides methods to get the metadata of a class at runtime.</li>\n<li>Provides methods to examine and change the runtime behavior of a class.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 246
	},
	{
		"question" : "214) What are the ways to instantiate the Class class?",
		"answer" : "<div> <p>There are three ways to instantiate the Class class.</p><ul class=\"points\">\n<li><strong>forName() method of Class class: </strong> The forName() method is used to load the class dynamically. It returns the instance of Class class. It should be used if you know the fully qualified name of the class. This cannot be used for primitive types.</li><br>\n<li><strong>getClass() method of Object class:</strong> It returns the instance of Class class. It should be used if you know the type. Moreover, it can be used with primitives.</li><br>\n<li><strong>the .class syntax:</strong> If a type is available, but there is no instance then it is possible to obtain a Class by appending \".class\" to the name of the type. It can be used for primitive data type also.</li><br>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 247
	},
	{
		"question" : "221) What is object cloning? ",
		"answer" : "<div> <p>The object cloning is a way to create an exact copy of an object. The clone() method of the Object class is used to clone an object. The java.lang.Cloneable interface must be implemented by the class whose object clone we want to create. If we don't implement Cloneable interface, clone() method generates CloneNotSupportedException. The clone() method is defined in the Object class. The syntax of the clone() method is as follows:</p><p><strong>protected Object clone() throws CloneNotSupportedException</strong></p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 248
	},
	{
		"question" : "197) What is an I/O filter? ",
		"answer" : "<div> <p>An I/O filter is an object that reads from one stream and writes to another, usually altering the data in some way as it is passed from one stream to another. Many Filter classes that allow a user to make a chain using multiple input streams. It generates a combined effect on several filters.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 249
	},
	{
		"question" : "242) What is RMI?",
		"answer" : "<div> <p>The RMI (Remote Method Invocation) is an API that provides a mechanism to create the distributed application in java. The RMI allows an object to invoke methods on an object running in another JVM. The RMI provides remote communication between the applications using two objects stub and skeleton.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 250
	},
	{
		"question" : "222) What are the advantages and disadvantages of object cloning? ",
		"answer" : "<div> <p><strong>Advantage of Object Cloning</strong></p><ul class=\"points\">\n<li>You don't need to write lengthy and repetitive codes. Just use an abstract class with a 4- or 5-line long clone() method.</li>\n<li>It is the easiest and most efficient way of copying objects, especially if we are applying it to an already developed or an old project. Just define a parent class, implement Cloneable in it, provide the definition of the clone() method and the task will be done. </li>\n<li>Clone() is the fastest way to copy the array.</li>\n</ul><p><strong>Disadvantage of Object Cloning</strong></p><ul>\n<li>To use the Object.clone() method, we have to change many syntaxes to our code, like implementing a Cloneable interface, defining the clone() method and handling CloneNotSupportedException, and finally, calling Object.clone(), etc.</li>\n<li>We have to implement the Cloneable interface while it does not have any methods in it. We have to use it to tell the JVM that we can perform a clone() on our object.</li>\n<li>Object.clone() is protected, so we have to provide our own clone() and indirectly call Object.clone() from it.</li>\n<li>Object.clone() does not invoke any constructor, so we do not have any control over object construction.</li>\n<li>If you want to write a clone method in a child class, then all of its superclasses should define the clone() method in them or inherit it from another parent class. Otherwise, the super.clone() chain will fail.</li>\n<li>Object.clone() supports only shallow copying, but we will need to override it if we need deep cloning.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 251
	},
	{
		"question" : "243) What is the purpose of stub and skeleton?",
		"answer" : "<div> <p><strong>Stub</strong></p><p>The stub is an object, acts as a gateway for the client side. All the outgoing requests are routed through it. It resides at the client side and represents the remote object. When the caller invokes the method on the stub object, it does the following tasks:</p><ul class=\"points\">\n<li>It initiates a connection with remote Virtual Machine (JVM).</li>\n<li>It writes and transmits (marshals) the parameters to the remote Virtual Machine (JVM).</li>\n<li>It waits for the result.</li>\n<li>It reads (unmarshals) the return value or exception.</li>\n<li>It finally, returns the value to the caller.</li>\n</ul><p></p><p><strong>Skeleton</strong>\n</p><p>The skeleton is an object, acts as a gateway for the server side object. All the incoming requests are routed through it. When the skeleton receives the incoming request, it does the following tasks:</p><ul class=\"points\">\n<li>It reads the parameter for the remote method.</li>\n<li>It invokes the method on the actual remote object.</li>\n<li>It writes and transmits (marshals) the result to the caller.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 252
	},
	{
		"question" : "223) What is a native method? ",
		"answer" : "<div> <p>A native method is a method that is implemented in a language other than Java. Natives methods are sometimes also referred to as foreign methods.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 253
	},
	{
		"question" : "244) What are the steps involved to write RMI based programs?",
		"answer" : "<div> <p>There are 6 steps which are performed to write RMI based programs.</p><ul class=\"points\">\n<li>Create the remote interface.</li>\n<li>Provide the implementation of the remote interface.</li>\n<li>Compile the implementation class and create the stub and skeleton objects using the rmic tool.</li>\n<li>Start the registry service by the rmiregistry tool.</li>\n<li>Create and start the remote application.</li>\n<li>Create and start the client application.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 254
	},
	{
		"question" : "245) What is the use of HTTP-tunneling in RMI?",
		"answer" : "<div> <p>HTTP tunneling can be defined as the method which doesn't need any setup to work within the firewall environment. It handles the HTTP connections through the proxy servers. However, it does not allow outbound TCP connections.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 255
	},
	{
		"question" : "255) Write a program in Java to find the maximum and minimum value node from a circular linked list.",
		"answer" : "<div> <p>Consider the following program.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class MinMax {\n    //Represents the node of list.\n    public class Node{\n        int data;\n        Node next;\n        public Node(int data) {\n            this.data = data;\n        }\n    }\n    \n    //Declaring head and tail pointer as null.\n    public Node head = null;\n    public Node tail = null;\n    \n    //This function will add the new node at the end of the list.\n    public void add(int data){\n        //Create new node\n        Node newNode = new Node(data);\n        //Checks if the list is empty.\n        if(head == null) {\n             //If list is empty, both head and tail would point to new node.\n            head = newNode;\n            tail = newNode;\n            newNode.next = head;\n        }\n        else {\n            //tail will point to new node.\n            tail.next = newNode;\n            //New node will become new tail.\n            tail = newNode;\n            //Since, it is circular linked list tail will points to head.\n            tail.next = head;\n        }\n    }\n    \n    //Finds out the minimum value node in the list\n    public void minNode() {\n        Node current = head;\n        //Initializing min to initial node data\n        int min = head.data;\n        if(head == null) {\n            System.out.println(\"List is empty\");\n        }\n        else {\n             do{\n                 //If current node's data is smaller than min\n                 //Then replace value of min with current node's data\n                 if(min &gt; current.data) {\n                     min = current.data;\n                 }\n                 current= current.next;\n            }while(current != head);\n        \n            System.out.println(\"Minimum value node in the list: \"+ min);\n        }\n    }\n        \n    //Finds out the maximum value node in the list\n    public void maxNode() {\n        Node current = head;\n        //Initializing max to initial node data\n        int max = head.data;\n        if(head == null) {\n            System.out.println(\"List is empty\");\n        }\n        else {\n             do{\n                 //If current node's data is greater than max\n                 //Then replace value of max with current node's data\n                 if(max &lt; current.data) {\n                     max = current.data;\n                 }\n                 current= current.next;\n                }while(current != head);\n             \n            System.out.println(\"Maximum value node in the list: \"+ max);\n        }\n    }\n                \n    public static void main(String[] args) {\n        MinMax cl = new MinMax();\n        //Adds data to the list\n        cl.add(5);\n        cl.add(20);\n        cl.add(10);\n        cl.add(1);\n        //Prints the minimum value node in the list\n        cl.minNode();\n        //Prints the maximum value node in the list\n        cl.maxNode();\n    }\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Minimum value node in the list: 1\nMaximum value node in the list: 20\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 256
	},
	{
		"question" : "224) What is the purpose of the strictfp keyword? ",
		"answer" : "<div> <p>Java strictfp keyword ensures that you will get the same result on every platform if you perform operations in the floating-point variable. The precision may differ from platform to platform that is why java programming language has provided the strictfp keyword so that you get the same result on every platform. So, now you have better control over the floating-point arithmetic.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 257
	},
	{
		"question" : "246) What is JRMP?",
		"answer" : "<div> <p>JRMP (Java Remote Method Protocol) can be defined as the Java-specific, stream-based protocol which looks up and refers to the remote objects. It requires both client and server to use Java objects. It is wire level protocol which runs under RMI and over TCP/IP.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 258
	},
	{
		"question" : "247) Can RMI and CORBA based applications interact?",
		"answer" : "<div> <p>Yes, they can. RMI is available with IIOP as the transport protocol instead of JRMP.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 259
	},
	{
		"question" : "26) What is the difference between ServletContext and PageContext?-",
		"answer" : "<div> <p>ServletContext gives the information about the container whereas PageContext gives the information about the Request.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 260
	},
	{
		"question" : "248) How to perform Bubble Sort in Java?",
		"answer" : "<div> <p>Consider the following program to perform Bubble sort in Java.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class BubbleSort {\n  public static void main(String[] args) {\n  int[] a = {10, 9, 7, 101, 23, 44, 12, 78, 34, 23};\n  for(int i=0;i&lt;10;i++)\n  {\n    for (int j=0;j&lt;10;j++)\n    {\n      if(a[i]&lt;a[j])\n      {\n        int temp = a[i];\n        a[i]=a[j];\n        a[j] = temp; \n      }\n    }\n  }\n  System.out.println(\"Printing Sorted List ...\");\n  for(int i=0;i&lt;10;i++)\n  {\n    System.out.println(a[i]);\n  }\n}\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Printing Sorted List . . . \n7\n9\n10\n12\n23\n34\n34\n44\n78 \n101 \n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 261
	},
	{
		"question" : "249) How to perform Binary Search in Java?",
		"answer" : "<div> <p>Consider the following program to perform the binary search in Java.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.util.*;\npublic class BinarySearch {\npublic static void main(String[] args) {\n  int[] arr = {16, 19, 20, 23, 45, 56, 78, 90, 96, 100};\n  int item, location = -1;\n  System.out.println(\"Enter the item which you want to search\");\n  Scanner sc = new Scanner(System.in);\n  item = sc.nextInt();\n  location = binarySearch(arr,0,9,item);\n  if(location != -1)\n  System.out.println(\"the location of the item is \"+location);\n  else \n    System.out.println(\"Item not found\");\n  }\npublic static int binarySearch(int[] a, int beg, int end, int item)\n{\n  int mid;\n  if(end &gt;= beg) \n  { \n    mid = (beg + end)/2;\n    if(a[mid] == item)\n    {\n      return mid+1;\n    }\n    else if(a[mid] &lt; item) \n    {\n      return binarySearch(a,mid+1,end,item);\n    }\n    else \n    {\n      return binarySearch(a,beg,mid-1,item);\n    }\n  }\n  return -1; \n}\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Enter the item which you want to search \n45 \nthe location of the item is 5 \n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 262
	},
	{
		"question" : "225) What is the purpose of the System class? ",
		"answer" : "<div> <p>The purpose of the System class is to provide access to system resources such as standard input and output. It cannot be instantiated. Facilities provided by System class are given below.</p><ul class=\"points\">\n<li>Standard input</li>\n<li>Error output streams</li>\n<li>Standard output</li>\n<li>utility method to copy the portion of an array</li>\n<li>utilities to load files and libraries</li>\n</ul><p>There are the three fields of Java System class, i.e., static printstream err, static inputstream in, and standard output stream.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 263
	},
	{
		"question" : "27) What is the difference in using request.getRequestDispatcher() and context.getRequestDispatcher()?",
		"answer" : "<div> <p>request.getRequestDispatcher(path) is used to create it we need to give the relative path of the resource whereas context.getRequestDispatcher(path)to create it we need to give the absolute path of the resource.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 264
	},
	{
		"question" : "256) Write a program in Java to calculate the difference between the sum of the odd level and even level nodes of a Binary Tree.",
		"answer" : "<div> <p>Consider the following program.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.util.LinkedList;\nimport java.util.Queue;\n \npublic class DiffOddEven {\n    \n    //Represent a node of binary tree\n    public static class Node{\n        int data;\n        Node left;\n        Node right;\n        \n        public Node(int data){\n            //Assign data to the new node, set left and right children to null\n            this.data = data;\n            this.left = null;\n            this.right = null;\n            }\n        }\n    \n    //Represent the root of binary tree\n    public Node root;\n  \n    public DiffOddEven(){\n        root = null;\n    }\n \n    //difference() will calculate the difference between sum of odd and even levels of binary tree\n    public int difference() {\n          int oddLevel = 0, evenLevel = 0, diffOddEven = 0;\n          \n          //Variable nodesInLevel keep tracks of number of nodes in each level\n          int nodesInLevel = 0;\n          \n          //Variable currentLevel keep track of level in binary tree\n          int currentLevel = 0;\n          \n          //Queue will be used to keep track of nodes of tree level-wise\n          Queue&lt;Node&gt; queue = new LinkedList&lt;Node&gt;();\n          \n          //Check if root is null\n          if(root == null) {\n              System.out.println(\"Tree is empty\");\n              return 0;\n          }\n          else {\n              //Add root node to queue as it represents the first level\n              queue.add(root);\n              currentLevel++;\n              \n              while(queue.size() != 0) {\n                  \n                  //Variable nodesInLevel will hold the size of queue i.e. number of elements in queue\n                  nodesInLevel = queue.size();\n                  \n                  while(nodesInLevel &gt; 0) {\n                      Node current = queue.remove();\n                      \n                    //Checks if currentLevel is even or not.\n                      if(currentLevel % 2 == 0)\n                          //If level is even, add nodes's to variable evenLevel\n                          evenLevel += current.data;\n                      else\n                          //If level is odd, add nodes's to variable oddLevel\n                          oddLevel += current.data;\n                      \n                      //Adds left child to queue\n                      if(current.left != null)\n                          queue.add(current.left);\n                      //Adds right child to queue\n                      if(current.right != null) \n                          queue.add(current.right);\n                     nodesInLevel--;\n                  }\n                  currentLevel++;\n              }\n              //Calculates difference between oddLevel and evenLevel\n              diffOddEven = Math.abs(oddLevel - evenLevel);\n          }\n          return diffOddEven;\n      }\n  \n    public static void main (String[] args) {\n        \n        DiffOddEven bt = new DiffOddEven();\n        //Add nodes to the binary tree\n        bt.root = new Node(1);\n        bt.root.left = new Node(2);\n        bt.root.right = new Node(3);\n        bt.root.left.left = new Node(4);\n        bt.root.right.left = new Node(5);\n        bt.root.right.right = new Node(6);\n    \n        //Display the difference between sum of odd level and even level nodes\n        System.out.println(\"Difference between sum of odd level and even level nodes: \" + bt.difference());\n}\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Difference between sum of odd level and even level nodes: 11\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 265
	},
	{
		"question" : "226) What comes to mind when someone mentions a shallow copy in Java?",
		"answer" : "<div> <p>Object cloning.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 266
	},
	{
		"question" : "28) What is EL in JSP?",
		"answer" : "<div> <p>The Expression Language(EL) is used in JSP to simplify the accessibility of objects. It provides many objects that can be used directly like param, requestScope, sessionScope, applicationScope, request, session, etc.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 267
	},
	{
		"question" : "227) What is a singleton class? ",
		"answer" : "<div> <p>Singleton class is the class which can not be instantiated more than once. To make a class singleton, we either make its constructor private or use the static getInstance method. Consider the following example.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class Singleton{\n    private static Singleton single_instance = null;\n    int i;\n     private Singleton ()\n     {\n         i=90;\n     }\n     public static Singleton getInstance()\n     {\n         if(single_instance == null)\n         {\n             single_instance = new Singleton();\n         }\n         return single_instance;\n     }\n}\npublic class Main \n{\n    public static void main (String args[])\n    {\n        Singleton first = Singleton.getInstance();\n        System.out.println(\"First instance integer value:\"+first.i);\n        first.i=first.i+90;\n        Singleton second = Singleton.getInstance();\n        System.out.println(\"Second instance integer value:\"+second.i);\n    }\n}\n\t</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 268
	},
	{
		"question" : "29) What are the primary differences between the JSP custom tags and java beans? ",
		"answer" : "<div> <ul>\n<li>Custom tags can manipulate JSP content whereas beans cannot.</li>\n<li>Complex operations can be reduced to a significantly simpler form with custom tags than with beans. </li>\n<li>Custom tags require quite a bit more work to set up than do beans. </li>\n<li>Custom tags are available only in JSP 1.1 and later, but beans can be used in all JSP 1.x versions.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 269
	},
	{
		"question" : "30) Can an interface be implemented in the JSP file? ",
		"answer" : "<div> <p>No.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 270
	},
	{
		"question" : "228) Write a Java program that prints all the values given at command-line.",
		"answer" : "<div> <p><strong>Program</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">class A{\npublic static void main(String args[]){\n\nfor(int i=0;i&lt;args.length;i++)\nSystem.out.println(args[i]);\n\n}\n}\n</textarea></div><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">compile by &gt; javac A.java\nrun by &gt; java A sonoo jaiswal 1 3 abc\n</textarea></div><p><strong>Output</strong></p><div class=\"codeblock3\"><pre>sonoo\njaiswal\n1\n3\nabc      \n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 271
	},
	{
		"question" : "229) Which containers use a border layout as their default layout? ",
		"answer" : "<div> <p>The Window, Frame and Dialog classes use a border layout as their default layout.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 272
	},
	{
		"question" : "1) What is JSP?",
		"answer" : "<div> <p>Java Server Pages technology (JSP) is a server-side programming language used to create a dynamic web page in the form of HyperText Markup Language (HTML). It is an extension to the servlet technology. </p><p>A JSP page is internally converted into the servlet. JSP has access to the entire family of the Java API including JDBC API to access enterprise database. Hence, Java language syntax has been used in the java server pages (JSP). The JSP pages are more accessible to maintain than Servlet because we can separate designing and development. It provides some additional features such as Expression Language, Custom Tags, etc.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 273
	},
	{
		"question" : "250) How to perform Selection Sort in Java?",
		"answer" : "<div> <p>Consider the following program to perform selection sort in Java.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class SelectionSort {\npublic static void main(String[] args) {\n  int[] a = {10, 9, 7, 101, 23, 44, 12, 78, 34, 23};\n  int i,j,k,pos,temp;\n  for(i=0;i&lt;10;i++)\n  {\n    pos = smallest(a,10,i);\n    temp = a[i];\n    a[i]=a[pos];\n    a[pos] = temp;\n  }\n  System.out.println(\"\\nprinting sorted elements...\\n\");\n  for(i=0;i&lt;10;i++)\n  {\n    System.out.println(a[i]);\n  }\n}\npublic static int smallest(int a[], int n, int i)\n{\n  int small,pos,j;\n  small = a[i];\n  pos = i;\n  for(j=i+1;j&lt;10;j++)\n  {\n    if(a[j]&lt;small)\n    {\n      small = a[j];\n      pos=j;\n    }\n  }\n  return pos;\n}\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>printing sorted elements...\n7\n9\n10\n12\n23\n23\n34\n44\n78\n101\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 274
	},
	{
		"question" : "251) How to perform Linear Search in Java?",
		"answer" : "<div> <p>Consider the following program to perform Linear search in Java.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">import java.util.Scanner;\n\npublic class Leniear_Search {\npublic static void main(String[] args) {\n  int[] arr = {10, 23, 15, 8, 4, 3, 25, 30, 34, 2, 19};\n  int item,flag=0; \n  Scanner sc = new Scanner(System.in);\n  System.out.println(\"Enter Item ?\");\n  item = sc.nextInt();\n  for(int i = 0; i&lt;10; i++)\n  {\n    if(arr[i]==item)\n    {\n      flag = i+1;\n      break;\n    }\n    else \n      flag = 0; \n  }\n  if(flag != 0)\n  {\n    System.out.println(\"Item found at location\" + flag);\n  }\n  else \n    System.out.println(\"Item not found\");\n  \n}\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Enter Item ?\n23\nItem found at location 2\nEnter Item ?\n22\nItem not found\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 275
	},
	{
		"question" : "252) How to perform merge sort in Java?",
		"answer" : "<div> <p>Consider the following program to perform merge sort in Java.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class MyMergeSort\n{\nvoid merge(int arr[], int beg, int mid, int end)\n{\n\nint l = mid - beg + 1;\nint r = end - mid;\n\nintLeftArray[] = new int [l];\nintRightArray[] = new int [r];\n\nfor (int i=0; i&lt;l; ++i)\nLeftArray[i] = arr[beg + i];\n\nfor (int j=0; j&lt;r; ++j)\nRightArray[j] = arr[mid + 1+ j];\n\n\nint i = 0, j = 0;\nint k = beg;\nwhile (i&lt;l&amp;&amp;j&lt;r)\n{\nif (LeftArray[i] &lt;= RightArray[j])\n{\narr[k] = LeftArray[i];\ni++;\n}\nelse\n{\narr[k] = RightArray[j];\nj++;\n}\nk++;\n}\nwhile (i&lt;l)\n{\narr[k] = LeftArray[i];\ni++;\nk++;\n}\n\nwhile (j&lt;r)\n{\narr[k] = RightArray[j];\nj++;\nk++;\n}\n}\n\nvoid sort(int arr[], int beg, int end)\n{\nif (beg&lt;end)\n{\nint mid = (beg+end)/2;\nsort(arr, beg, mid);\nsort(arr , mid+1, end);\nmerge(arr, beg, mid, end);\n}\n}\npublic static void main(String args[])\n{\nintarr[] = {90,23,101,45,65,23,67,89,34,23};\nMyMergeSort ob = new MyMergeSort();\nob.sort(arr, 0, arr.length-1);\n\nSystem.out.println(\"\\nSorted array\");\nfor(int i =0; i&lt;arr.length;i++)\n{\n  System.out.println(arr[i]+\"\");\n}\n}\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Sorted array \n23\n23\n23\n34\n45\n65\n67\n89\n90\n101\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 276
	},
	{
		"question" : "253) How to perform quicksort in Java?",
		"answer" : "<div> <p>Consider the following program to perform quicksort in Java.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class QuickSort {\npublic static void main(String[] args) {\n    int i;\n    int[] arr={90,23,101,45,65,23,67,89,34,23};\n    quickSort(arr, 0, 9);\n    System.out.println(\"\\n The sorted array is: \\n\");\n    for(i=0;i&lt;10;i++)\n    System.out.println(arr[i]);\n  }\n  public static int partition(int a[], int beg, int end)\n  {\n    \n    int left, right, temp, loc, flag; \n    loc = left = beg;\n    right = end;\n    flag = 0;\n    while(flag != 1)\n    {\n      while((a[loc] &lt;= a[right]) &amp;&amp; (loc!=right))\n      right--;\n      if(loc==right)\n      flag =1;\n      elseif(a[loc]&gt;a[right])\n      {\n        temp = a[loc];\n        a[loc] = a[right];\n        a[right] = temp;\n        loc = right;\n      }\n      if(flag!=1)\n      {\n        while((a[loc] &gt;= a[left]) &amp;&amp; (loc!=left))\n        left++;\n        if(loc==left)\n        flag =1;\n        elseif(a[loc] &lt;a[left])\n        {\n          temp = a[loc];\n          a[loc] = a[left];\n          a[left] = temp;\n          loc = left;\n        }\n      }\n    }\n    returnloc;\n  }\n  static void quickSort(int a[], int beg, int end)\n  {\n    \n    int loc;\n    if(beg&lt;end)\n    {\n      loc = partition(a, beg, end);\n      quickSort(a, beg, loc-1);\n      quickSort(a, loc+1, end);\n    }\n  }\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>The sorted array is: \n23\n23\n23\n34\n45\n65\n67\n89\n90\n101\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 277
	},
	{
		"question" : "31) What is JSTL?",
		"answer" : "<div> <p>JSP Standard Tag Library is a library of predefined tags that ease the development of JSP.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 278
	},
	{
		"question" : "3) List out some advantages of using JSP.",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>Method</th><th>Description</th></tr>\n<tr><td>public void jspInit()</td><td>It is invoked only once, same as init method of the servlet.</td></tr>\n<tr><td>public void _jspService(ServletRequest request,ServletResponse)throws ServletException,IOException</td><td> It is invoked at each request, same as service() method of the servlet. </td></tr>\n<tr><td>public void jspDestroy()</td><td>It is invoked only once, same as destroy() method of the servlet.</td></tr>\n</tbody></table><ul class=\"points\">\n<li>Better performance.</li>\n<li>The compilation of JSP is done before it is processed by the server which eradicates the need for loading of interpreter and code script each time. </li>\n<li>JSP has access to all-powerful enterprises.<br>\nEasy to maintain: JSP can be easily managed because we can easily separate our business logic with presentation logic. In Servlet technology, we mix our business logic with the presentation logic.\n</li>\n<li>JSP can also be used in combination with servlets.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 279
	},
	{
		"question" : "4) Give the syntax for JSP comments.",
		"answer" : "<div> <p>The syntax for JSP comments is:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;%-- Comment --%&gt;\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 280
	},
	{
		"question" : "254) Write a program in Java to create a doubly linked list containing n nodes.",
		"answer" : "<div> <p>Consider the following program to create a doubly linked list containing n nodes.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">  public class CountList {\n    \n    //Represent a node of the doubly linked list\n\n    class Node{\n        int data;\n        Node previous;\n        Node next;\n        \n        public Node(int data) {\n            this.data = data;\n        }\n    }\n    \n    //Represent the head and tail of the doubly linked list\n    Node head, tail = null;\n    \n    //addNode() will add a node to the list\n    public void addNode(int data) {\n        //Create a new node\n        Node newNode = new Node(data);\n        \n        //If list is empty\n        if(head == null) {\n            //Both head and tail will point to newNode\n            head = tail = newNode;\n            //head's previous will point to null\n            head.previous = null;\n            //tail's next will point to null, as it is the last node of the list\n            tail.next = null;\n        }\n        else {\n            //newNode will be added after tail such that tail's next will point to newNode\n            tail.next = newNode;\n            //newNode's previous will point to tail\n            newNode.previous = tail;\n            //newNode will become new tail\n            tail = newNode;\n            //As it is last node, tail's next will point to null\n            tail.next = null;\n        }\n    }\n    \n    //countNodes() will count the nodes present in the list\n    public int countNodes() {\n        int counter = 0;\n        //Node current will point to head\n        Node current = head;\n        \n        while(current != null) {\n            //Increment the counter by 1 for each node\n            counter++;\n            current = current.next;\n        }\n        return counter;\n    }\n    \n    //display() will print out the elements of the list\n    public void display() {\n        //Node current will point to head\n        Node current = head;\n        if(head == null) {\n            System.out.println(\"List is empty\");\n            return;\n        }\n        System.out.println(\"Nodes of doubly linked list: \");\n        while(current != null) {\n            //Prints each node by incrementing the pointer.\n\n            System.out.print(current.data + \" \");\n            current = current.next;\n        }\n    }\n    \n    public static void main(String[] args) {\n        \n        CountList dList = new CountList();\n        //Add nodes to the list\n        dList.addNode(1);\n        dList.addNode(2);\n        dList.addNode(3);\n        dList.addNode(4);\n        dList.addNode(5);\n        \n        //Displays the nodes present in the list\n        dList.display();\n        \n        //Counts the nodes present in the given list\n        System.out.println(\"\\nCount of nodes present in the list: \" + dList.countNodes());\n    }\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>Nodes of doubly linked list: \n1 2 3 4 5 \nCount of nodes present in the list: 5\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 281
	},
	{
		"question" : "5) What is the difference between hide comment and output comment?",
		"answer" : "<div> <p>The JSP comment is called hide comment whereas HTML comment is called output comment. If a user views the source of the page, the JSP comment will not be shown whereas HTML comment will be displayed. </p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 282
	},
	{
		"question" : "6) What are the JSP implicit objects?",
		"answer" : "<div> <p>JSP provides nine implicit objects by default. They are as follows:</p><table class=\"alt\">\n<tbody><tr><th>Object</th><th>Type</th></tr>\n<tr><td>1) out</td><td>JspWriter</td></tr>\n<tr><td>2) request</td><td>HttpServletRequest</td></tr>\n<tr><td>3) response</td><td>HttpServletResponse</td></tr>\n<tr><td>4) config</td><td>ServletConfig</td></tr>\n<tr><td>5) session</td><td>HttpSession</td></tr>\n<tr><td>6) application</td><td>ServletContext</td></tr>\n<tr><td>7) pageContext</td><td>PageContext</td></tr>\n<tr><td>8) page</td><td>Object</td></tr>\n<tr><td>9) exception</td><td>Throwable</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 283
	},
	{
		"question" : "32) How many tags are provided in JSTL?",
		"answer" : "<div> <p>There is 5 type of JSTL tags.</p><ol class=\"points\">\n<li>core tags</li>\n<li>sql tags</li>\n<li>xml tags</li>\n<li>internationalization tags</li>\n<li>functions tags</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 284
	},
	{
		"question" : "7) What is the difference between include directive and include action?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>include directive</th><th>include action</th></tr>\n<tr><td>1) The include directive includes the content at page translation time.</td><td>1) The include action includes the content at request time.</td></tr>\n<tr><td>2) The include directive includes the original content of the page, so page size increases at runtime</td><td>2) The include action doesn't include the original content rather invokes the include() method of Vendor provided class.</td></tr>\n<tr><td>3) It's better for static pages.</td><td>3) 3) It's better for dynamic pages.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 285
	},
	{
		"question" : "33) Which directive is used in JSP custom tag?",
		"answer" : "<div> <p>The JSP taglib directive.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 286
	},
	{
		"question" : "8) Is JSP technology extensible? ",
		"answer" : "<div> <p>Yes. JSP technology is extensible through the development of custom actions, or tags, which are encapsulated in tag libraries.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 287
	},
	{
		"question" : "4) What is MVC?",
		"answer" : "<div> <p>MVC is a design pattern. MVC stands for Model, View and Controller. Model represents data, view represents presentation and controller acts as an interface between model and view.</p><img src=\"images/st/model2.jpg\" alt=\"mvc architecture\"><p><a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 288
	},
	{
		"question" : "34) What are the three tags used in JSP bean development?",
		"answer" : "<div> <ol>\n<li>jsp:useBean</li>\n<li>jsp:setProperty</li>\n<li>jsp:getProperty</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 289
	},
	{
		"question" : "9) How can I implement a thread-safe JSP page? What are the advantages and Disadvantages of using it?",
		"answer" : "<div> <p>You can make your JSPs thread-safe by having them implement the SingleThreadModel interface. This is done by adding the directive &lt;%@ page isThreadSafe=\"false\" %&gt; within your JSP page.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 290
	},
	{
		"question" : "5) What is interceptor?",
		"answer" : "<div> <p>Interceptor is an object i.e. invoked at preprocessing and postprocessing of a request. It is pluggable. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 291
	},
	{
		"question" : "36) List the various action tags used in JSP.",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;%@ page session=\"false\" %&gt; \n</textarea></div><p>Following are the list of various action tags used in JSP:</p><ul class=\"points\">\n<li>jsp:forward: This action tag forwards the request and response to another resource.</li>\n<li>jsp:include: This action tag is used to include another resource.</li>\n<li>jsp:useBean: This action tag is used to create and locates bean object.</li>\n<li>jsp:setProperty: This action tag is used to set the value of the property of the bean.</li>\n<li>jsp:getProperty: This action tag is used to print the value of the property of the bean.</li>\n<li>jsp:plugin: This action tag is used to embed another component such as the applet.</li>\n<li>jsp:param: This action tag is used to set the parameter value. It is used in forward and includes mostly.</li>\n<li>jsp:fallback: This action tag can be used to print the message if the plugin is working.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 292
	},
	{
		"question" : "(OR) How to disable caching on the back button of the browser?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;%\nresponse.setHeader(\"Cache-Control\",\"no-store\"); \nresponse.setHeader(\"Pragma\",\"no-cache\"); \nresponse.setHeader (\"Expires\", \"0\"); //prevents caching at the proxy server\n%&gt; \n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 293
	},
	{
		"question" : "11) How can we handle the exceptions in JSP?",
		"answer" : "<div> <p>There are two ways to perform exception handling, one is by the errorPage element of page directive, and second is by the error-page element of the web.xml file.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 294
	},
	{
		"question" : "37) Explain the steps for creating custom tags in JSP?",
		"answer" : "<div> <p>For creating any custom tag, we need to follow the following steps:</p><ol class=\"points\">\n<li><strong>Create the Tag handler class</strong><br>\nTo generate the Tag Handler, we are inheriting the TagSupport class and overriding its method doStartTag().To write data for the JSP, we need to use the JspWriter class.<br>\nThe PageContext class provides getOut() method that returns the instance of JspWriter class. TagSupport class provides an instance of pageContext by default.</li>\n<li><strong>Create the TLD file</strong><br>\nTag Library Descriptor (TLD) file contains information of tag and Tag Hander classes. It must hold inside the WEB-INF directory.</li>\n<li><strong>Create the JSP file</strong><br>\nLet's use the tag in our JSP file. Here, we are specifying the path of tld file directly. However, it is recommended to use the URI name instead of full a path of tld file. We will learn about URI later.\nIt uses taglib directive to use the tags defined in the tld file.</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 295
	},
	{
		"question" : "12) What are the two ways to include the result of another page. ?",
		"answer" : "<div> <p>There are two ways to include the result of another page:</p><ul>\n<li>By <a>include directive</a></li>\n<li>By <a>include action</a></li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 296
	},
	{
		"question" : "230) Which containers use a FlowLayout as their default layout? ",
		"answer" : "<div> <p>The Panel and Applet classes use the FlowLayout as their default layout.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 297
	},
	{
		"question" : "13) How can we forward the request from JSP page to the servlet?",
		"answer" : "<div> <p>Yes of course! With the help of \"forward action\" tag, but we need to give the URL-pattern of the servlet.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 298
	},
	{
		"question" : "38) How can the applets be displayed in the JSP? Explain with an example.",
		"answer" : "<div> <p>The jsp:plugin action tag is used to embed an applet in the JSP file. The jsp:plugin action tag downloads plugin at client side to execute an applet or bean.</p><p>Example of displaying applet in JSP</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;html&gt;  \n    &lt;head&gt;  \n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;  \n        &lt;title&gt;Mouse Drag&lt;/title&gt;  \n    &lt;/head&gt;  \n    &lt;body bgcolor=\"khaki\"&gt;  \n&lt;h1&gt;Mouse Drag Example&lt;/h1&gt;  \n  \n &lt;jsp:plugin align=\"middle\" height=\"500\" width=\"500\"  \n     type=\"applet\"  code=\"MouseDrag.class\" name=\"clock\" codebase=\".\"/&gt;  \n  \n    &lt;/body&gt;  \n&lt;/html&gt;  \n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 299
	},
	{
		"question" : "6) What are the life cycle methods of interceptor?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><ul class=\"points\">\n<li>public void init()</li>\n<li>public void intercept(ActionInvocation ai)</li>\n<li>public void destroy()</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 300
	},
	{
		"question" : "231) What are peerless components? ",
		"answer" : "<div> <p>The lightweight component of Swing is called peerless components. Spring has its libraries, so it does not use resources from the Operating System, and hence it has lightweight components.\n</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 301
	},
	{
		"question" : "7) What is ValueStack?",
		"answer" : "<div> <p>ValueStack is a stack that contains application specific object such as action and other model. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 302
	},
	{
		"question" : "39) What is Expression language in JSP?",
		"answer" : "<div> <p>The Expression Language (EL) simplifies the accessibility of data stored in the Java Bean component, and other objects like request, session, application.</p><p>There are many implicit objects, operators and reserve words in EL. </p><p>It is the newly added feature in JSP technology version 2.0.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 303
	},
	{
		"question" : "8) What is ActionContext?",
		"answer" : "<div> <p>ActionContext is a container in which action is executed. It is unique per thread. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 304
	},
	{
		"question" : "232) is there is any difference between a Scrollbar and a ScrollPane? ",
		"answer" : "<div> <p>The Scrollbar is a Component whereas the ScrollPane is a Container. A ScrollPane handles its events and performs its scrolling.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 305
	},
	{
		"question" : "9) What is ActionInvocation?",
		"answer" : "<div> <p>ActionInvocation is responsible to invoke action. It holds action and interceptor objects. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 306
	},
	{
		"question" : "40) Explain various implicit objects in expression language.",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr>\n<th>Implicit Objects</th>\n<th>Usage</th>\n</tr>\n<tr>\n<td>pageScope</td>\n<td>it maps the given attribute name with the value set in the page scope</td>\n</tr>\n<tr>\n<td>requestScope</td>\n<td>it maps the given attribute name with the value set in the request scope</td>\n</tr>\n<tr>\n<td>sessionScope</td>\n<td>it maps the given attribute name with the value set in the session scope</td>\n</tr>\n<tr>\n<td>applicationScope</td>\n<td>it maps the given attribute name with the value set in the application scope</td>\n</tr>\n<tr>\n<td>param</td>\n<td>it maps the request parameter to the single value</td>\n</tr>\n<tr>\n<td>paramValues</td>\n<td>it maps the request parameter to an array of values</td>\n</tr>\n<tr>\n<td>header</td>\n<td>it maps the request header name to the single value</td>\n</tr>\n<tr>\n<td>headerValues</td>\n<td>it maps the request header name to an array of values</td>\n</tr>\n<tr>\n<td>cookie</td>\n<td>it maps the given cookie name to the cookie value</td>\n</tr>\n<tr>\n<td>initParam</td>\n<td>it maps the initialization parameter</td>\n</tr>\n<tr>\n<td>pageContext</td>\n<td>it provides access to many objects request, session, etc.</td>\n</tr>\n</tbody></table><br><br></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 307
	},
	{
		"question" : "10) What is OGNL?",
		"answer" : "<div> <p>OGNL is an expression language of struts2. It stands for Object Graph Navigation Language. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 308
	},
	{
		"question" : "233) What is a lightweight component?",
		"answer" : "<div> <p>Lightweight components are the one which does not go with the native call to obtain the graphical units. They share their parent component graphical units to render them. For example, Swing components, and JavaFX Components.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 309
	},
	{
		"question" : "14) Can we use the exception implicit object in any JSP page?",
		"answer" : "<div> <p>No. The exception implicit object can only be used in the error page which defines it with the isErrorPage attribute of page directive.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 310
	},
	{
		"question" : "11) What are the 5 constants of Action interface?",
		"answer" : "<div> <ol class=\"points\">\n<li>SUCCESS</li>\n<li>ERROR</li>\n<li>INPUT</li>\n<li>LOGIN</li>\n<li>NONE</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 311
	},
	{
		"question" : "1) What is EJB?",
		"answer" : "<div> <p>EJB stands for Enterprise Java Bean. It is a server-side component to develop scalable, robust and secured enterprise applications in java. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 312
	},
	{
		"question" : "234) What is a heavyweight component?",
		"answer" : "<div> <p>The portable elements provided by the operating system are called heavyweight components. AWT is limited to the graphical classes provided by the operating system and therefore, It implements only the minimal subset of screen elements supported by all platforms. The Operating system dependent UI discovery tools are called heavyweight components.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 313
	},
	{
		"question" : "12) What does params interceptor?",
		"answer" : "<div> <p>The params (also known as parameters) interceptor sets all parameters on the ValueStack. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 314
	},
	{
		"question" : "2) What are the types of Enterprise Bean?",
		"answer" : "<div> <p>There are three types of enterprise bean in java.</p><ol class=\"points\">\n<li>Session Bean</li>\n<li>Message Driven Bean</li>\n<li>Entity Bean</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 315
	},
	{
		"question" : "13) What does execAndWait interceptor?",
		"answer" : "<div> <p>The execAndWait (also known as ExecuteAndWait) interceptor is used to display intermediate or wait result. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 316
	},
	{
		"question" : "14) What does modelDriven interceptor?",
		"answer" : "<div> <p>The modelDriven interceptor makes other model as the default object of ValueStack. By default, action is the default object of ValueStack. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 317
	},
	{
		"question" : "235) What is an applet?",
		"answer" : "<div> <p>An applet is a small java program that runs inside the browser and generates dynamic content. It is embedded in the webpage and runs on the client side. It is secured and takes less response time. It can be executed by browsers running under many platforms, including Linux, Windows, Mac Os, etc. However, the plugins are required at the client browser to execute the applet. The following image shows the architecture of Applet.</p><img src=\"https://static.javatpoint.com/images/applethierarchy.jpg\" alt=\"hierarchy of applet\"><p>When an applet is created, the following methods are invoked in order.</p><ul class=\"points\">\n<li>init()</li>\n<li>start()</li>\n<li>paint()</li>\n</ul><p>When an applet is destroyed, the following functions are invoked in order.</p><ul class=\"points\">\n<li>stop()</li>\n<li>destroy()</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 318
	},
	{
		"question" : "3) What is session bean?",
		"answer" : "<div> <p>Session Bean encapsulates business logic. It can be invoked by local, remote or web service client.</p><p>There are 3 types of session bean.</p><ol class=\"points\">\n<li>Stateless Session Bean</li>\n<li>Stateful Session Bean</li>\n<li>Singleton Session Bean</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 319
	},
	{
		"question" : "236) Can you write a Java class that could be used both as an applet as well as an application?",
		"answer" : "<div> <p>Yes. Add a main() method to the applet.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 320
	},
	{
		"question" : "4) What is stateless session bean?",
		"answer" : "<div> <p>A Stateless session bean is a business object that doesn't maintain the conversational state with the client. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 321
	},
	{
		"question" : "237) What is Locale? ",
		"answer" : "<div> <p>A Locale object represents a specific geographical, political, or cultural region. This object can be used to get the locale-specific information such as country name, language, variant, etc. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">\nimport java.util.*;\npublic class LocaleExample {\npublic static void main(String[] args) {\nLocale locale=Locale.getDefault();\n//Locale locale=new Locale(\"fr\",\"fr\");//for the specific locale\n\nSystem.out.println(locale.getDisplayCountry());\nSystem.out.println(locale.getDisplayLanguage());\nSystem.out.println(locale.getDisplayName());\nSystem.out.println(locale.getISO3Country());\nSystem.out.println(locale.getISO3Language());\nSystem.out.println(locale.getLanguage());\nSystem.out.println(locale.getCountry());\n\t\n}\n}\n</textarea></div><p><strong>Output:</strong></p><div class=\"codeblock3\"><pre>United States\nEnglish\nEnglish (United States)\nUSA\neng\nen\nUS\n</pre></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 322
	},
	{
		"question" : "5) Write down the steps for the creation of stateless EJB.",
		"answer" : "<div> <ul class=\"points\">\n<li>Create a local interface.</li>\n<li>The interface is to be used by the client application.</li>\n<li>In case the EJB client environment is the same, use @Local annotation.</li>\n<li>In case the EJB client environment is different, use @Remote annotation.</li>\n<li>Create a stateful session bean.</li>\n<li>To signify a stateful bean, use @Stateful annotation.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 323
	},
	{
		"question" : "238)How will you load a specific locale? ",
		"answer" : "<div> <p>By ResourceBundle.getBundle(?) method.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 324
	},
	{
		"question" : "239) What is a JavaBean?",
		"answer" : "<div> <p>JavaBean is a reusable software component written in the Java programming language, designed to be manipulated visually by a software development environment, like JBuilder or VisualAge for Java. t. A JavaBean encapsulates many objects into one object so that we can access this object from multiple places. Moreover, it provides the easy maintenance. Consider the following example to create a JavaBean class.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">//Employee.java\npackage mypack;\npublic class Employee implements java.io.Serializable{\nprivate int id;\nprivate String name;\npublic Employee(){}\npublic void setId(int id){this.id=id;}\npublic int getId(){return id;}\npublic void setName(String name){this.name=name;}\npublic String getName(){return name;}\n}\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 325
	},
	{
		"question" : "6) What is stateful session bean?",
		"answer" : "<div> <p>A Stateful session bean is a business object that maintains the conversational state with the client. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 326
	},
	{
		"question" : "15) How is JSP used in the MVC model?",
		"answer" : "<div> <p>JSP is usually used for presentation in the MVC pattern (Model View Controller ), i.e., it plays the role of the view. The controller deals with calling the model and the business classes which in turn get the data, and this data is then presented to the JSP for rendering on to the client.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 327
	},
	{
		"question" : "16) What are context initialization parameters?",
		"answer" : "<div> <p>Context initialization parameters are specified by the &lt;context-param&gt; in the web.xml file, and these are initialization parameter for the whole application and not specific to any servlet or JSP.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 328
	},
	{
		"question" : "240) What is the purpose of using the Java bean?",
		"answer" : "<div> <p>According to Java white paper, it is a reusable software component. A bean encapsulates many objects into one object so that we can access this object from multiple places. Moreover, it provides the easy maintenance.</p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 329
	},
	{
		"question" : "17) What are the different scope values for the <jsp:useBean> tag?",
		"answer" : "<div> <p>There are 4 values:</p><ol>\n<li>page</li>\n<li>request</li>\n<li>session</li>\n<li>application</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 330
	},
	{
		"question" : "241) What do you understand by the bean persistent property?",
		"answer" : "<div> <p>The persistence property of Java bean comes into the act when the properties, fields, and state information are saved to or retrieve from the storage. </p></div>",
		"category" : "Java",
		"sub_category" : "Core Java 2",
		"id" : 331
	},
	{
		"question" : "7) What is singleton session bean?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><p>Singleton session bean is instantiated only once for the application. It exists for the life cycle of the application.</p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 332
	},
	{
		"question" : "18) What do JSP literals consist of?",
		"answer" : "<div> <ul class=\"points\">\n<li>Boolean</li>\n<li>Integer</li>\n<li>Floating point</li>\n<li>String</li>\n<li>Null</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 333
	},
	{
		"question" : "19) What is the purpose of <jsp:useBean>?",
		"answer" : "<div> <p>The jsp:useBean action searches for the existence of the object with specified name. If not found, it creates one.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 334
	},
	{
		"question" : "8) What is JMS?",
		"answer" : "<div> <p>Java Message Service is a messaging service to create, send and receive messages asynchronously. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 335
	},
	{
		"question" : "9) What are the advantages of JMS?",
		"answer" : "<div> <ul class=\"points\">\n<li>Asynchronous</li>\n<li>Reliable</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 336
	},
	{
		"question" : "27) Is it possible to perform collection mapping with One-to-One and Many-to-One?",
		"answer" : "<div> <p>No, collection mapping can only be performed with One-to-Many and Many-to-Many.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 337
	},
	{
		"question" : "10) What is PTP model?",
		"answer" : "<div> <p>In Point to Point model, one message is delivered to one receiver only. Here, Queue is used as a message-oriented middleware. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 338
	},
	{
		"question" : "28) What is lazy loading in hibernate?",
		"answer" : "<div> <p>Lazy loading in hibernate improves the performance. It loads the child objects on demand.</p><p>Since Hibernate 3, lazy loading is enabled by default, and you don't need to do lazy=\"true\". It means not to load the child objects when the parent is loaded.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 339
	},
	{
		"question" : "29) What is HQL (Hibernate Query Language)?",
		"answer" : "<div> <p>Hibernate Query Language is known as an object-oriented query language. It is like a structured query language (SQL).</p><p>The main advantage of HQL over SQL is:</p><ol>\n<li>You don't need to learn SQL</li>\n<li>Database independent</li>\n<li>Simple to write a query</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 340
	},
	{
		"question" : "30) What is the difference between first level cache and second level cache?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>No.</th><th>First Level Cache</th><th>Second Level Cache</th></tr>\n<tr><td>1)</td><td>First Level Cache is <b>associated with Session</b>.</td><td>Second Level Cache is associated with <b>SessionFactory</b>.</td></tr>\n<tr><td>2)</td><td>It is <b>enabled</b> by default.</td><td>It is <b>not enabled</b> by default.</td></tr>\n</tbody></table><br><br></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 341
	},
	{
		"question" : "1) What is Spring?",
		"answer" : "<div> <p>It is a lightweight, loosely coupled and integrated framework for developing enterprise applications in java.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 342
	},
	{
		"question" : "2) What are the advantages of spring framework?",
		"answer" : "<div> <ol>\n<li>Predefined Templates</li>\n<li>Loose Coupling</li>\n<li>Easy to test</li>\n<li>Lightweight</li>\n<li>Fast Development</li>\n<li>Powerful Abstraction</li>\n<li>Declarative support</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 343
	},
	{
		"question" : "3) What are the modules of spring framework?",
		"answer" : "<div> <ol>\n<li>Test</li>\n<li>Spring Core Container</li>\n<li>AOP, Aspects and Instrumentation</li>\n<li>Data Access/Integration</li>\n<li>Web</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 344
	},
	{
		"question" : "4) What is IOC and DI?",
		"answer" : "<div> <p>IOC (Inversion of Control) and DI (Dependency Injection) is a design pattern to provide loose coupling. It removes the dependency from the program.</p><p>Let's write a code without following IOC and DI.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Employee{\nAddress address;\nEmployee(){\naddress=new Address();//creating instance\n}\n}\n</textarea></div><p>Now, there is dependency between Employee and Address because Employee is forced to use the same address instance.</p><p>Let's write the IOC or DI code.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">public class Employee{\nAddress address;\nEmployee(Address address){\nthis.address=address;//not creating instance\n}\n}\n</textarea></div><p>Now, there is no dependency between Employee and Address because Employee is not forced to use the same address instance. It can use any address instance.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 345
	},
	{
		"question" : "5) What is the role of IOC container in spring?",
		"answer" : "<div> <p>IOC container is responsible to:</p><ul>\n<li>create the instance</li>\n<li>configure the instance, and</li>\n<li>assemble the dependencies</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 346
	},
	{
		"question" : "6) What are the types of IOC container in spring?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><p>There are two types of IOC containers in spring framework.</p><ol>\n<li>BeanFactory</li>\n<li>ApplicationContext</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 347
	},
	{
		"question" : "7) What is the difference between BeanFactory and ApplicationContext?",
		"answer" : "<div> <p>BeanFactory is the <b>basic container</b> whereas ApplicationContext is the <b>advanced container</b>. ApplicationContext extends the BeanFactory interface. ApplicationContext provides more facilities than BeanFactory such as integration with spring AOP, message resource handling for i18n etc.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 348
	},
	{
		"question" : "8) What is the difference between constructor injection and setter injection?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>No.</th><th>Constructor Injection</th><th>Setter Injection</th></tr>\n<tr><td>1)</td><td>No Partial Injection</td><td>Partial Injection</td></tr>\n<tr><td>2)</td><td>Desn't override the setter property</td><td>Overrides the constructor property if both are defined.</td></tr>\n<tr><td>3)</td><td>Creates new instance if any modification occurs</td><td>Doesn't create new instance if you change the property value</td></tr>\n<tr><td>4)</td><td>Better for too many properties</td><td>Better for few properties.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 349
	},
	{
		"question" : "9) What is autowiring in spring? What are the autowiring modes?",
		"answer" : "<div> <p>Autowiring enables the programmer to inject the bean automatically. We don't need to write explicit injection logic.</p><p>Let's see the code to inject bean using dependency injection.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">&lt;bean id=\"emp\" class=\"com.javatpoint.Employee\" autowire=\"byName\" /&gt;\n</textarea></div><p>The autowiring modes are given below:</p><table class=\"alt\">\n<tbody><tr><th>No.</th><th>Mode</th><th>Description</th></tr>\n<tr><td>1)</td><td>no</td><td>this is the default mode, it means autowiring is not enabled.</td></tr>\n<tr><td>2)</td><td>byName</td><td>injects the bean based on the property name. It uses setter method.</td></tr>\n<tr><td>3)</td><td>byType</td><td>injects the bean based on the property type. It uses setter method.</td></tr>\n<tr><td>4)</td><td>constructor</td><td>It injects the bean using constructor</td></tr>\n</tbody></table><p class=\"n\">The \"autodetect\" mode is deprecated since spring 3.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 350
	},
	{
		"question" : "10) What are the different bean scopes in spring?",
		"answer" : "<div> <p>There are 5 bean scopes in spring framework.</p><table class=\"alt\">\n<tbody><tr><th>No.</th><th>Scope</th><th>Description</th></tr>\n<tr><td>1)</td><td>singleton</td><td>The bean instance will be only once and same instance will be returned by the IOC container. It is the default scope.</td></tr>\n<tr><td>2)</td><td>prototype</td><td>The bean instance will be created each time when requested.</td></tr>\n<tr><td>3)</td><td>request</td><td>The bean instance will be created per HTTP request.</td></tr>\n<tr><td>4)</td><td>session</td><td>The bean instance will be created per HTTP session.</td></tr>\n<tr><td>5)</td><td>globalsession</td><td>The bean instance will be created per HTTP global session. It can be used in portlet context only.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 351
	},
	{
		"question" : "11) In which scenario, you will use singleton and prototype scope?",
		"answer" : "<div> <p>Singleton scope should be used with EJB <b>stateless session bean</b> and prototype scope with EJB <b>stateful session bean</b>.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 352
	},
	{
		"question" : "12) What are the transaction management supports provided by spring?",
		"answer" : "<div> <p>Spring framework provides two type of transaction management supports:</p><ol>\n<li><b>Programmatic Transaction Management</b>: should be used for few transaction operations.</li>\n<li><b>Declarative Transaction Management</b>: should be used for many transaction operations.</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 353
	},
	{
		"question" : "13) What are the advantages of JdbcTemplate in spring?",
		"answer" : "<div> <p><b>Less code</b>: By using the JdbcTemplate class, you don't need to create connection,statement,start transaction,commit transaction and close connection to execute different queries. You can execute the query directly.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 354
	},
	{
		"question" : "14) What are classes for spring JDBC API?",
		"answer" : "<div> <ol>\n<li>JdbcTemplate</li>\n<li>SimpleJdbcTemplate</li>\n<li>NamedParameterJdbcTemplate</li>\n<li>SimpleJdbcInsert</li>\n<li>SimpleJdbcCall</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 355
	},
	{
		"question" : "15) How can you fetch records by spring JdbcTemplate?",
		"answer" : "<div> <p>You can fetch records from the database by the <b>query method of JdbcTemplate</b>. There are two interfaces to do this:</p><ol>\n<li><a target=\"_blank\">ResultSetExtractor</a></li>\n<li><a target=\"_blank\">RowMapper</a></li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 356
	},
	{
		"question" : "16) What is the advantage of NamedParameterJdbcTemplate?",
		"answer" : "<div> <p>NamedParameterJdbcTemplate class is used to pass value to the named parameter. A named parameter is better than ? (question mark of PreparedStatement).</p><p>It is <b>better to remember</b>.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 357
	},
	{
		"question" : "17) What is the advantage of SimpleJdbcTemplate?",
		"answer" : "<div> <p>The <b>SimpleJdbcTemplate</b> supports the feature of var-args and autoboxing.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 358
	},
	{
		"question" : "18) What is AOP?",
		"answer" : "<div> <p>AOP is an acronym for Aspect Oriented Programming. It is a methodology that divides the program logic into pieces or parts or concerns.</p><p>It increases the modularity and the key unit is Aspect.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 359
	},
	{
		"question" : "19) What are the advantages of spring AOP?",
		"answer" : "<div> <p>AOP enables you to dynamically add or remove concern before or after the business logic. It is <b>pluggable</b> and <b>easy to maintain</b>.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 360
	},
	{
		"question" : "20) What are the AOP terminology?",
		"answer" : "<div> <p>AOP terminologies or concepts are as follows:</p><ul>\n<li>JoinPoint</li>\n<li>Advice</li>\n<li>Pointcut</li>\n<li>Aspect</li>\n<li>Introduction</li>\n<li>Target Object</li>\n<li>Interceptor</li>\n<li>AOP Proxy</li>\n<li>Weaving</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 361
	},
	{
		"question" : "21) What is JoinPoint?",
		"answer" : "<div> <p>JoinPoint is any point in your program such as field access, method execution, exception handling etc.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 362
	},
	{
		"question" : "22) Does spring framework support all JoinPoints?",
		"answer" : "<div> <p>No, spring framework supports method execution joinpoint only.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 363
	},
	{
		"question" : "23) What is Advice?",
		"answer" : "<div> <p>Advice represents action taken by aspect.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 364
	},
	{
		"question" : "24) What are the types of advice in AOP?",
		"answer" : "<div> <p>There are 5 types of advices in spring AOP.</p><ol>\n<li>Before Advice</li>\n<li>After Advice</li>\n<li>After Returning Advice</li>\n<li>Throws Advice</li>\n<li>Around Advice</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 365
	},
	{
		"question" : "25) What is Pointcut?",
		"answer" : "<div> <p>Pointcut is expression language of Spring AOP.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 366
	},
	{
		"question" : "26) What is Aspect?",
		"answer" : "<div> <p>Aspect is a class in spring AOP that contains advices and joinpoints.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 367
	},
	{
		"question" : "15) What does validation interceptor?",
		"answer" : "<div> <p>The validation interceptor performs validation checks and adds field-level and action-level error messages. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 368
	},
	{
		"question" : "27) What is Introduction?",
		"answer" : "<div> <p>Introduction represents introduction of new fields and methods for a type.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 369
	},
	{
		"question" : "16) What are the bundled validators?",
		"answer" : "<div> <ul class=\"points\">\n<li>requiredstring</li>\n<li>stringlength</li>\n<li>email</li>\n<li>date</li>\n<li>int</li>\n<li>double</li>\n<li>url</li>\n<li>regex</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 370
	},
	{
		"question" : "17) What is the difference between plain-validator and field-validator?",
		"answer" : "<div> <p>In plain-validator one validator can be applied to many fields. In field-validator many validators can be applied to single field. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 371
	},
	{
		"question" : "28) What is target object?",
		"answer" : "<div> <p>Target Object is a proxy object that is advised by one or more aspects.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 372
	},
	{
		"question" : "18) What is the use of jsonValidation?",
		"answer" : "<div> <p>The jsonValidation interceptor is used to perform asynchronous validation. It works with validation and workflow interceptors. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 373
	},
	{
		"question" : "19) What are the aware interfaces in struts2?",
		"answer" : "<div> <p>Aware interfaces are used to store information in request, session, application and response objects. The 4 aware interfaces are given below:</p><ul class=\"points\">\n<li>ServletRequestAware</li>\n<li>ServletResponseAware</li>\n<li>SessionAware</li>\n<li>ServletContextAware</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 374
	},
	{
		"question" : "29) What is interceptor?",
		"answer" : "<div> <p>Interceptor is a class like aspect that contains one advice only.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 375
	},
	{
		"question" : "20) What does i18n interceptor?",
		"answer" : "<div> <p>The i18n interceptor is used to provide multi lingual support for struts application. <a>More details...</a></p><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Questions</a></td>\n<td><a>Java String &amp; Exception Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><h1 class=\"h1\">Hibernate Interview Questions</h1><p>Hibernate interview questions are asked to the students because it is a widely used ORM tool. The important list of top 20 hibernate interview questions and answers for freshers and professionals are given below.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 376
	},
	{
		"question" : "1) What is hibernate?",
		"answer" : "<div> <p>Hibernate is an open-source and lightweight ORM tool that is used to store, manipulate, and retrieve data from the database.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 377
	},
	{
		"question" : "2) What is ORM?",
		"answer" : "<div> <p>ORM is an acronym for Object/Relational mapping. It is a programming strategy to map object with the data stored in the database. It simplifies data creation, data manipulation, and data access.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 378
	},
	{
		"question" : "3) Explain hibernate architecture?",
		"answer" : "<div> <p>Hibernate architecture comprises of many interfaces such as Configuration, SessionFactory, Session, Transaction, etc.</p><img src=\"images/hibernate/architecture.jpg\" alt=\"hibernate framework architecture\"></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 379
	},
	{
		"question" : "5) Mention some of the advantages of using ORM over JDBC.",
		"answer" : "<div> <p>The core interfaces of Hibernate framework are:</p><ul>\n<li>Configuration</li>\n<li>SessionFactory</li>\n<li>Session</li>\n<li>Query</li>\n<li>Criteria</li>\n<li>Transaction</li>\n</ul><p>ORM has the following advantages over JDBC:</p><ul class=\"points\">\n<li>Application development is fast.</li>\n<li>Management of transaction.</li>\n<li>Generates key automatically.</li>\n<li>Details of SQL queries are hidden.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 380
	},
	{
		"question" : "6) Define criteria in terms of Hibernate. ",
		"answer" : "<div> <p>The objects of criteria are used for the creation and execution of the object-oriented criteria queries. </p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 381
	},
	{
		"question" : "7) List some of the databases supported by Hibernate.",
		"answer" : "<div> <p>Some of the databases supported by Hibernate are:</p><ul class=\"points\">\n<li>DB2</li>\n<li>MySQL</li>\n<li>Oracle</li>\n<li>Sybase SQL Server</li>\n<li>Informix Dynamic Server</li>\n<li>HSQL </li>\n<li>PostgreSQL</li>\n<li>FrontBase</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 382
	},
	{
		"question" : "8) List the key components of Hibernate.",
		"answer" : "<div> <p>Key components of Hibernate are:</p><ul class=\"points\">\n<li>Configuration</li>\n<li>Session</li>\n<li>SessionFactory</li>\n<li>Criteria</li>\n<li>Query</li>\n<li>Transaction</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 383
	},
	{
		"question" : "20) What is the purpose of <jsp:setProperty >?",
		"answer" : "<div> <p>This action sets the properties of a bean.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 384
	},
	{
		"question" : "21) What is the purpose of <jsp:getProperty >?",
		"answer" : "<div> <p>This action retrieves the properties of a bean.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 385
	},
	{
		"question" : "9) Mention two components of Hibernate configuration object.",
		"answer" : "<div> <p>Database Connection</p><p>Class Mapping Setup</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 386
	},
	{
		"question" : "10) How is SQL query created in Hibernate?",
		"answer" : "<div> <p>The SQL query is created with the help of the following syntax:</p><p>Session.createSQLQuery</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 387
	},
	{
		"question" : "22) List out the various scope values of JSP action.",
		"answer" : "<div> <p>The possible scope values are:</p><ul class=\"points\">\n<li>page</li>\n<li>request</li>\n<li>session</li>\n<li>application</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 388
	},
	{
		"question" : "11) What does HQL stand for?",
		"answer" : "<div> <p>Hibernate Query Language</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 389
	},
	{
		"question" : "12) How is HQL query created?",
		"answer" : "<div> <p>The HQL query is created with the help of the following syntax:</p><p>Session.createQuery</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 390
	},
	{
		"question" : "13) How can we add criteria to a SQL query?",
		"answer" : "<div> <p>A criterion is added to a SQL query by using the Session.createCriteria.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 391
	},
	{
		"question" : "11) What is Pub/Sub model?",
		"answer" : "<div> <p>In the Publisher/Subscriber model, one message is delivered to all subscribers. Here, Topic is used as a message-oriented middleware. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 392
	},
	{
		"question" : "14) Define persistent classes.",
		"answer" : "<div> <p>Classes whose objects are stored in a database table are called as persistent classes. </p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 393
	},
	{
		"question" : "12) What is MDB?",
		"answer" : "<div> <p>Message Driven Bean (MDB) encapsulates business logic. It is invoked by passing the message. It is like JMS receiver. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 394
	},
	{
		"question" : "23) What is the use of 'out' implicit object?",
		"answer" : "<div> <p>The object is used to give a response to contents. </p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 395
	},
	{
		"question" : "13) What is Entity Bean?",
		"answer" : "<div> <p>Entity Bean is a server-side component that represents the persistent data. Since EJB 3.x, it is replaced by JPA. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 396
	},
	{
		"question" : "15) What is SessionFactory?",
		"answer" : "<div> <p>SessionFactory provides the instance of Session. It is a factory of Session. It holds the data of second level cache that is not enabled by default.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 397
	},
	{
		"question" : "14) What is Session Facade?",
		"answer" : "<div> <p>Session Facade is a design pattern to access enterprise bean through the local interface. It abstracts the business object interactions and provides a service layer. It makes the performance fast over the network.</p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 398
	},
	{
		"question" : "16) Is SessionFactory a thread-safe object?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><p>Yes, SessionFactory is a thread-safe object, many threads cannot access it simultaneously.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 399
	},
	{
		"question" : "24) Give the use of session object.",
		"answer" : "<div> <p>The object is used between the client requests for the tracking of client sessions.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 400
	},
	{
		"question" : "17) What is Session?",
		"answer" : "<div> <p>It maintains a connection between the hibernate application and database.</p><p>It provides methods to store, update, delete or fetch data from the database such as persist(), update(), delete(), load(), get() etc.</p><p>It is a factory of Query, Criteria and Transaction i.e. it provides factory methods to return these instances.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 401
	},
	{
		"question" : "15) List some key actors in persistence API.",
		"answer" : "<div> <p>Some of the key actors in persistence API are:</p><ul class=\"points\">\n<li>Entity</li>\n<li>EntityManager</li>\n<li>Persistence unit</li>\n<li>Data source</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 402
	},
	{
		"question" : "25) Give the use of exception object.",
		"answer" : "<div> <p>The object is used for the generation of a response to the errors thrown.</p></div>",
		"category" : "Java",
		"sub_category" : "JSP",
		"id" : 403
	},
	{
		"question" : "16) List down the steps for the demonstration of EJP persistence mechanism.",
		"answer" : "<div> <ul class=\"points\">\n<li>Create a database table</li>\n<li>Create entity classes for the table</li>\n<li>Create persistent unit and data source</li>\n<li>Create a stateless EJB</li>\n<li>Update stateless EJBM</li>\n<li>Console based application accesses the stateless EJB.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 404
	},
	{
		"question" : "18) Is Session a thread-safe object?",
		"answer" : "<div> <p>No, Session is not a thread-safe object, many threads can access it simultaneously. In other words, you can share it between threads.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 405
	},
	{
		"question" : "19) What is the difference between session.save() and session.persist() method?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>No.</th><th>save()</th><th>persist()</th></tr>\n<tr><td>1)</td><td>returns the identifier (Serializable) of the instance.</td><td>Return nothing because its return type is void.</td></tr>\n<tr><td>2)</td><td>Syn: public Serializable save(Object o)</td><td>Syn: public void persist(Object o) </td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 406
	},
	{
		"question" : "20) What is the difference between get and load method?",
		"answer" : "<div> <p>The differences between get() and load() methods are given below.</p><table class=\"alt\">\n<tbody><tr><th>No.</th><th>get()</th><th>load()</th></tr>\n<tr><td>1)</td><td>Returns <b>null</b> if an object is not found.</td><td>Throws <b>ObjectNotFoundException</b> if an object is not found.</td></tr>\n<tr><td>2)</td><td>get() method always <b>hit the database</b>. </td><td>load() method <b>doesn't hit</b> the database. </td></tr>\n<tr><td>3)</td><td>It returns the real object, not the proxy.</td><td>It returns <b>proxy<b> object.</b></b></td></tr>\n<tr><td>4)</td><td>It should be used if <b>you are not sure</b> about the existence of instance.</td><td>It should be used if <b>you are sure</b> that instance exists.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 407
	},
	{
		"question" : "21) What is the difference between update and merge method?",
		"answer" : "<div> <p>The differences between update() and merge() methods are given below.</p><table class=\"alt\">\n<tbody><tr><th>No.</th><th>The update() method</th><th>merge() method</th></tr>\n<tr><td>1)</td><td>Update means to edit something.</td><td>Merge means to combine something.</td></tr>\n<tr><td>2)</td><td>update() should be used if the session doesn't contain an already persistent state with the same id. It means an update should be used inside the session only. After closing the session, it will throw the error.</td><td>merge() should be used if you don't know the state of the session, means you want to make the modification at any time.</td></tr>\n</tbody></table><p>Let's try to understand the difference by the example given below:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">...\nSessionFactory factory = cfg.buildSessionFactory();\nSession session1 = factory.openSession();\n \nEmployee e1 = (Employee) session1.get(Employee.class, Integer.valueOf(101));//passing id of employee\nsession1.close();\n \ne1.setSalary(70000);\n \nSession session2 = factory.openSession();\nEmployee e2 = (Employee) session1.get(Employee.class, Integer.valueOf(101));//passing same id\n\nTransaction tx=session2.beginTransaction();\nsession2.merge(e1);\n\ntx.commit();\nsession2.close();\n</textarea></div><p>After closing session1, e1 is in detached state. It will not be in the session1 cache. So if you call update() method, it will throw an error.</p><p>Then, we opened another session and loaded the same Employee instance. If we call merge in session2, changes of e1 will be merged in e2.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 408
	},
	{
		"question" : "17) Name the attributes of javax.ejb.Stateful.",
		"answer" : "<div> <ul class=\"points\">\n<li>Name</li>\n<li>mappedName</li>\n<li>Description</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 409
	},
	{
		"question" : "18) Name the attributes of javax.ejb.EJB.",
		"answer" : "<div> <p>beanInterface</p><p>beanName</p><p>mappedName</p></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 410
	},
	{
		"question" : "10) How is the testing of the 'protected' method done?",
		"answer" : "<div> <ul class=\"points\">\n<li>Opensource</li>\n<li>Annotation support for test cases</li>\n<li>Assertion support for checking the expected result</li>\n<li>Test runner support to execute the test case</li>\n</ul><p>To test the protected method, the test class is declared in the same package as the target class.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 411
	},
	{
		"question" : "19) Mention the three levels for applying interceptor methods.",
		"answer" : "<div> <ul class=\"points\">\n<li>Default</li>\n<li>Class</li>\n<li>Method</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 412
	},
	{
		"question" : "20 Mention the Java types that can be mapped using the @Lob annotation.",
		"answer" : "<div> <ul class=\"points\">\n<li>java.sql.Blob</li>\n<li>String</li>\n<li>byte[]</li>\n<li>java.sql.Clob</li>\n<li>Serializable Object</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "EJB",
		"id" : 413
	},
	{
		"question" : "11) How is the testing of 'private' method done?",
		"answer" : "<div> <p>There is no direct way for testing of the private method; hence manual testing is to be performed, or the method is changed to \"protected\" method.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 414
	},
	{
		"question" : "21) Name the ACID properties of a transaction.",
		"answer" : "<div> <ul class=\"points\">\n<li>Atomic</li>\n<li>Consistent</li>\n<li>Isolated</li>\n<li>Durable</li>\n</ul><br><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Interview Questions</a></td>\n<td><a>Java String &amp; Exception Interview Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><h1 class=\"h1\">Struts Interview Questions</h1><p>There is given frequently asked struts interview questions and answers that has been asked in many companies. Let's see the list of top Struts2 interview questions.</p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 415
	},
	{
		"question" : "12) If the JUnit method's return type is 'string', what will happen?",
		"answer" : "<div> <p>JUnit test methods are designed to return 'void'. So the execution will fail.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 416
	},
	{
		"question" : "1) What is Struts?",
		"answer" : "<div> <p>Struts is a framework for developing MVC-based framework. Struts2 is the combination of Webwork and struts1 frameworks. <a>More details...</a></p></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 417
	},
	{
		"question" : "22) What are the states of the object in hibernate?",
		"answer" : "<div> <p>There are 3 states of the object (instance) in hibernate.</p><ol>\n<li><b>Transient</b>: The object is in a transient state if it is just created but has no primary key (identifier) and not associated with a session.</li>\n<li><b>Persistent</b>: The object is in a persistent state if a session is open, and you just saved the instance in the database or retrieved the instance from the database.</li>\n<li><b>Detached</b>: The object is in a detached state if a session is closed. After detached state, the object comes to persistent state if you call lock() or update() method.</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 418
	},
	{
		"question" : "13) Is the use of 'main' method possible for unit testing?",
		"answer" : "<div> <p>Yes</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 419
	},
	{
		"question" : "3) What are the features of Struts?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>No.</th><th>Struts1</th><th>Struts2</th></tr>\n<tr><td>1)</td><td>Action class is not POJO. You need to inherit abstract class.</td><td>Action class is POJO. You don't need to inherit any class or implement any interface.</td></tr>\n<tr><td>2)</td><td>Front controller is ActionServlet.</td><td>Front Controller is StrutsPrepareAndExecuteFilter.</td></tr>\n<tr><td>3)</td><td>It uses the concept of RequestProcessor class while processing request.</td><td>It uses the concept of Interceptors while processing the request.</td></tr>\n<tr><td>4)</td><td>It has only JSP for the view component.</td><td>It has JSP, Freemarker, Valocity etc. for the view component.</td></tr>\n<tr><td>5)</td><td>Configuration file name can be [anyname].xml and placed inside WEB-INF directory.</td><td>Configuration file must be struts.xml and placed inside classes directory.</td></tr>\n<tr><td>6)</td><td>Action and Model are separate.</td><td>Action and Model are combined within action class.</td></tr>\n</tbody></table><ul class=\"points\">\n<li>Configuration MVC components</li>\n<li>POJO based action</li>\n<li>AJAX Support</li>\n<li>Various Tag Support</li>\n<li>Various Result Types</li>\n<li>Integration Support</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Struts",
		"id" : 420
	},
	{
		"question" : "14) Is it necessary to write the test class to test every class?",
		"answer" : "<div> <p>No</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 421
	},
	{
		"question" : "15) What does XMLUnit provide?",
		"answer" : "<div> <p>Junit extension class, XMLTestCase and set of supporting classes is provided by the XMLUnit.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 422
	},
	{
		"question" : "30) What is weaving?",
		"answer" : "<div> <p>Weaving is a process of linking aspect with other application.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 423
	},
	{
		"question" : "16) List the core components of Cactus. ",
		"answer" : "<div> <ul class=\"points\">\n<li>Cactus Framework</li>\n<li>Cactus Integration Module</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 424
	},
	{
		"question" : "31) Does spring perform weaving at compile time?",
		"answer" : "<div> <p>No, spring framework performs weaving at runtime.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 425
	},
	{
		"question" : "17) What are the methods in fixtures?",
		"answer" : "<div> <ul class=\"points\">\n<li>setup</li>\n<li>tearDown</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 426
	},
	{
		"question" : "32) What are the AOP implementation?",
		"answer" : "<div> <p>There are 3 AOP implementation.</p><ol>\n<li>Spring AOP</li>\n<li>Apache AspectJ</li>\n<li>JBoss AOP</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 427
	},
	{
		"question" : "18) What is the Unit Test Case?",
		"answer" : "<div> <p>A Unit Test Case is the combination of input data and expected output result. It is defined to test the functionality of a unit.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 428
	},
	{
		"question" : "33) What is the front controller class of Spring MVC?",
		"answer" : "<div> <p>The <b>DispatcherServlet</b> class works as the front controller in Spring MVC.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 429
	},
	{
		"question" : "19) What is the use of @Test annotation?",
		"answer" : "<div> <p>The @Test annotation is used to mark the method as the test method.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 430
	},
	{
		"question" : "34) What does @Controller annotation?",
		"answer" : "<div> <p>The <b>@Controller</b> annotation marks the class as controller class. It is applied on the class.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 431
	},
	{
		"question" : "20) What is the test suit?",
		"answer" : "<div> <p>The test suit allows us to group multiple test cases so that it can be run together. TestSuit is the container class under junit.framework.TestSuite package.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 432
	},
	{
		"question" : "35) What does @RequestMapping annotation?",
		"answer" : "<div> <p>The <b>@RequestMapping</b> annotation maps the request with the method. It is applied on the method.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 433
	},
	{
		"question" : "21) What does test runner?",
		"answer" : "<div> <p>The test runner is used to execute the test cases.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 434
	},
	{
		"question" : "36) What does the ViewResolver class?",
		"answer" : "<div> <p>The <b>View Resolver</b> class resolves the view component to be invoked for the request. It defines prefix and suffix properties to resolve the view component.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 435
	},
	{
		"question" : "22) What are the important JUnit annotations?",
		"answer" : "<div> <p>The test runner is used to execute the test cases.</p><ul class=\"points\">\n<li>@Test</li>\n<li>@BeforeClass</li>\n<li>@Before</li>\n<li>@After</li>\n<li>@AfterClass</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 436
	},
	{
		"question" : "37) Which ViewResolver class is widely used?",
		"answer" : "<div> <p>The <b>org.springframework.web.servlet.view.InternalResourceViewResolver</b> class is widely used.</p></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 437
	},
	{
		"question" : "23) What are the inheritance mapping strategies?",
		"answer" : "<div> <p>There are 3 ways of inheritance mapping in hibernate.</p><ol>\n<li>Table per hierarchy</li>\n<li>Table per concrete class</li>\n<li>Table per subclass</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 438
	},
	{
		"question" : "23) What does Assert class?",
		"answer" : "<div> <p>Assert class provides methods to test the test cases.</p><br><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Interview Questions</a></td>\n<td><a>Java String &amp; Exception Interview Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><br><br><h1 class=\"h1\">Maven Interview Question</h1><p>A list of top frequently asked <strong>maven interview questions</strong> and answers are given below. </p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 439
	},
	{
		"question" : "24) How to make an immutable class in hibernate?",
		"answer" : "<div> <p>If you mark a class as mutable=\"false\", the class will be treated as an immutable class. By default, it is mutable=\"true\".</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 440
	},
	{
		"question" : "25) What is automatic dirty checking in hibernate?",
		"answer" : "<div> <p>The automatic dirty checking feature of Hibernate, calls update statement automatically on the objects that are modified in a transaction.</p><p>Let's understand it by the example given below:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">...\nSessionFactory factory = cfg.buildSessionFactory();\nSession session1 = factory.openSession();\nTransaction tx=session2.beginTransaction();\n \nEmployee e1 = (Employee) session1.get(Employee.class, Integer.valueOf(101));\n \ne1.setSalary(70000);\n \ntx.commit();\nsession1.close();\n</textarea></div><p>Here, after getting employee instance e1 and we are changing the state of e1.</p><p>After changing the state, we are committing the transaction. In such a case, the state will be updated automatically. This is known as dirty checking in hibernate.</p></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 441
	},
	{
		"question" : "10) What are the available scopes for the managed bean?",
		"answer" : "<div> <p>You can use following scopes for a bean class:</p><ul class=\"points\">\n<li><strong>Application (@ApplicationScoped):</strong> Application scope persists across interaction of all the users with the web application.</li>\n<li><strong>Session (@SessionScoped):</strong> Session scope persists across multiple HTTP requests in a web application. </li>\n<li><strong>View (@ViewScoped):</strong> View scope persists during the interaction of the user with a single page (view) of a web application.</li>\n</ul><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 442
	},
	{
		"question" : "38) Does spring MVC provide validation support?",
		"answer" : "<div> <p>Yes.</p><br><br></div>",
		"category" : "Java",
		"sub_category" : "Spring",
		"id" : 443
	},
	{
		"question" : "1) What is Maven?",
		"answer" : "<div> <p>Maven is a project management tool. It is based on POM (Project Object Model). <a>More details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 444
	},
	{
		"question" : "11) What is eager managed bean?",
		"answer" : "<div> <p>The Managed bean is lazy by default. It means the bean is instantiated only when a request is made from the application.</p><p>You can force a bean to be instantiated and placed in the application scope as soon as the application is started.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 445
	},
	{
		"question" : "1) What is Testing?",
		"answer" : "<div> <p>Testing is the process of checking the functionality of the application whether it fulfills the requirement or not.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 446
	},
	{
		"question" : "2) What aspects are managed by Maven?",
		"answer" : "<div> <ul class=\"points\">\n<li>Builds</li>\n<li>Documentation</li>\n<li>Reporting</li>\n<li>SCMs</li>\n<li>Releases</li>\n<li>Distribution</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 447
	},
	{
		"question" : "26) How many types of association mapping are possible in hibernate?",
		"answer" : "<div> <p>There can be 4 types of association mapping in hibernate.</p><ol>\n<li>One to One</li>\n<li>One to Many</li>\n<li>Many to One</li>\n<li>Many to Many</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Hibernate",
		"id" : 448
	},
	{
		"question" : "12) What are User Interface Components in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>JavaServer Faces HTML tag library represents HTML form components and other basic HTML elements, which are used to display or accept data from the user. A JSF form sends this data to the server after submitting the form.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 449
	},
	{
		"question" : "13) What are the MVC design modules?",
		"answer" : "<div> <ul class=\"points\">\n<li>Model</li>\n<li>View</li>\n<li>Controller</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 450
	},
	{
		"question" : "2) What is JUnit?",
		"answer" : "<div> <p>JUnit is the testing framework, it is used for unit testing of Java code.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">JUnit = Java + Unit Testing\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 451
	},
	{
		"question" : "14) Give a list of facelet tags.",
		"answer" : "<div> <ul class=\"points\">\n<li>Templates</li>\n<li>Parameters</li>\n<li>Custom</li>\n<li>Remove</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 452
	},
	{
		"question" : "3) What is unit testing?",
		"answer" : "<div> <p>The process of testing individual functionality (known as a unit) of the application is called unit testing.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 453
	},
	{
		"question" : "4) What is the difference between manual testing and automated testing?",
		"answer" : "<div> <p>Manual testing is performed by Human, so it is time-consuming and costly. Automated testing is performed by testing tools or programs, so it is fast and less costly.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 454
	},
	{
		"question" : "5) Give some disadvantages of manual testing.",
		"answer" : "<div> <p>Following are some disadvantages of manual testing:</p><ul class=\"points\">\n<li>The testing is very time consuming and is very tiring.</li>\n<li>The testing demands a very big investment in the human resources.</li>\n<li>The testing is less reliable</li>\n<li>The testing cannot be programmed.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 455
	},
	{
		"question" : "6) List out some advantages of automated testing.",
		"answer" : "<div> <p>Some of the advantages of automated testing are:</p><ul class=\"points\">\n<li>It is very fast.</li>\n<li>Investment is very less.</li>\n<li>Testing is more reliable.</li>\n<li>The testing can be programmed.</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 456
	},
	{
		"question" : "7) Is it necessary to write the test case for every logic?",
		"answer" : "<div> <p>No, we should write the test case only for that logic that can be reasonably broken.</p></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 457
	},
	{
		"question" : "56) What are web resources in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>JSF web resources are the resources which are required for proper rendering in the web application. It includes images, script files, and any user-created component libraries.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 458
	},
	{
		"question" : "8) What are the useful JUnit extensions?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><ul class=\"points\">\n<li>JWebUnit</li>\n<li>XMLUnit</li>\n<li>Cactus</li>\n<li>MockObject</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Junit",
		"id" : 459
	},
	{
		"question" : "15) Give a list of important DataTable operations.",
		"answer" : "<div> <ul class=\"points\">\n<li>Display DataTable</li>\n<li>Add data</li>\n<li>Edit data</li>\n<li>Delete data</li>\n<li>Using the data model</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 460
	},
	{
		"question" : "57) How to access CSS (Cascading Style Sheets) File in JSF (JavaServer Faces) application?",
		"answer" : "<div> <p>The &lt;<strong>h:outputStylesheet</strong>&gt; tag is used to access CSS (Cascading Style Sheets) resource in the web application. You must create a subdirectory inside the resources folder.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 461
	},
	{
		"question" : "58) How to access JS (JavaScript) File in JSF (JavaServer Faces) application?",
		"answer" : "<div> <p>The &lt;<strong>h:outputScript</strong>&gt; tag is used to access JavaScript file in the web application. You must create a subdirectory inside the resources folder.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 462
	},
	{
		"question" : "16) What does AJAX stand for?",
		"answer" : "<div> <p>AJAX stands for Asynchronous JavaScript and XML.</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 463
	},
	{
		"question" : "59) How to relocate web resources in JSF (JavaServer Faces) application?",
		"answer" : "<div> <p>JSF provides a facility to place your resources at any section of your web page and render it to another section. You can relocate your resource by specifying the target attribute.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 464
	},
	{
		"question" : "1) What is HTML?",
		"answer" : "<div> <p>You can integrate JSF application to the JDBC. JDBC allows you to store data into the database table.</p><p><strong>For more information:</strong> <a>Click here</a>\n<br><br>\n</p><img src=\"https://static.javatpoint.com/interview/images/html-interview-questions.png\" alt=\"HTML Interview Questions\" class=\"imageright\"><h1 class=\"h1\">HTML Interview Questions</h1><p>A list of top frequently asked <strong>HTML interview questions</strong> and HTML5 interview questions and answers are given below. </p><ul class=\"points\">\n<li><a>HTML5 Interview Questions</a></li>\n</ul><p>HTML stands for Hyper Text Markup Language. It is a language of World Wide Web. It is a standard text formatting language which is used to create and display pages on the Web. It makes the text more interactive and dynamic. It can turn text into images, tables, links.<a target=\"_blank\"> More details.</a></p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 465
	},
	{
		"question" : "17) List some AJAX attributes. ",
		"answer" : "<div> <ul class=\"points\">\n<li>Disabled</li>\n<li>Event</li>\n<li>Execute</li>\n<li>Immediate</li>\n<li>Listener</li>\n<li>Onerror</li>\n<li>Onevent</li>\n<li>Render</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 466
	},
	{
		"question" : "2) What are Tags?",
		"answer" : "<div> <p>HTML tags are composed of three things: an opening tag, content and ending tag. Some tags are unclosed tags.</p><p>HTML documents contain two things:</p><ul class=\"points\">\n<li>content, and</li>\n<li>tags</li>\n</ul><p>When a web browser reads an HTML document, the browser reads it from top to bottom and left to right. HTML tags are used to create HTML documents and render their properties. Each HTML tags have different properties.</p><h4 class=\"h4\">Syntax</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;tag&gt; content &lt;/tag&gt;\n</textarea></div><p>Content is placed between tags to display data on the web page.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 467
	},
	{
		"question" : "3) Do all HTML tags have an end tag?",
		"answer" : "<div> <p>No. There are some HTML tags that don't need a closing tag. For example: &lt;image&gt; tag, &lt;br&gt; tag. <a target=\"_blank\">More details.</a></p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 468
	},
	{
		"question" : "18) Name some important event handlers.",
		"answer" : "<div> <ul class=\"points\">\n<li>ActionListener</li>\n<li>ApplicationEvents</li>\n<li>ValueChangeListener</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 469
	},
	{
		"question" : "4) What is formatting in HTML?",
		"answer" : "<div> <p>The HTML formatting is a process of format the text for a better look and feel. It uses different tags to make text bold, italicized, underlined. <a target=\"_blank\">More details.</a></p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 470
	},
	{
		"question" : "29) What is the canvas element in HTML5?",
		"answer" : "<div> <p>The &lt;canvas&gt; element is a container that is used to draw graphics on the web page using scripting language like JavaScript. It allows for dynamic and scriptable rendering of 2D shapes and bitmap images. There are several methods in canvas to draw paths, boxes, circles, text and add images. For Example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;canvas id=\"myCanvas1\" width=\"300\" height=\"100\" style=\"border:2px solid;\"&gt;  \nYour browser does not support the HTML5 canvas tag.  \n&lt;/canvas&gt;  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 471
	},
	{
		"question" : "19) What are the requirements for using integrated JSF using JDBC?",
		"answer" : "<div> <ul class=\"points\">\n<li>PostgreSQLJDBC4 Driver</li>\n<li>PostgreSQL 9.1</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 472
	},
	{
		"question" : "30) What is SVG?",
		"answer" : "<div> <p>HTML SVG is used to describe the two-dimensional vector and vector/raster graphics. SVG images and their behaviors are defined in XML text files. So as XML files, you can create and edit an SVG image with the text editor. It is mostly used for vector type diagrams like pie charts, 2-Dimensional graphs in an X, Y coordinate system.\n</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;svg width=\"100\" height=\"100\"&gt;  \n &lt;circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"yellow\" stroke-width=\"4\" fill=\"red\" /&gt;  \n&lt;/svg&gt; \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 473
	},
	{
		"question" : "20) What is the use of Controller module?",
		"answer" : "<div> <p>It handles the processing of an application.</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 474
	},
	{
		"question" : "31) What are the different new form element types in HTML 5?",
		"answer" : "<div> <p>Following is a list of 10 frequently used new elements in HTML 5:</p><ul class=\"points\">\n<li>Color</li>\n<li>Date</li>\n<li>Datetime-local</li>\n<li>Email</li>\n<li>Time</li>\n<li>Url</li>\n<li>Range</li>\n<li>Telephone</li>\n<li>Number</li>\n<li>Search</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 475
	},
	{
		"question" : "22) What is h:inpuText tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>The module shows the user interface.</p><p>The JSF &lt;h: inputText&gt; tag is used to render an input field on the web page.</p><p>It is used within a &lt;h: form&gt; tag to declare input field that allows the user to input data.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 476
	},
	{
		"question" : "32) Is there any need to change the web browsers to support HTML5?",
		"answer" : "<div> <p>No. Almost all browsers (updated versions) support HTML 5. For example Chrome, Firefox, Opera, Safari, IE.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 477
	},
	{
		"question" : "23) What is h:outputText tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>The JSF &lt;h:outputText&gt; is used to render a plain text. If the \"styleClass\", \"style\", \"dir\" or \"lang\" attributes are present, render a \"span\" element. If the \"styleClass\" attribute is present, render its value as the value of the \"class\" attribute.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 478
	},
	{
		"question" : "33) Which type of video formats are supported by HTML5?",
		"answer" : "<div> <p>HTML 5 supports three types of video format:</p><ul class=\"points\">\n<li>mp4</li>\n<li>WebM</li>\n<li>Ogg</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 479
	},
	{
		"question" : "34) Is audio tag supported in HTML 5?",
		"answer" : "<div> <p>Yes. It is used to add sound or music files on the web page. There are three\nsupported file formats for HTML 5 audio tag.</p><ol class=\"points\">\n<li>mp3</li>\n<li>WAV</li>\n<li>Ogg</li>\n</ol><p>Let's see the code to play mp3 file using HTML audio tag. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;audio controls&gt;  \n  &lt;source src=\"koyal.mp3\" type=\"audio/mpeg\"&gt;  \nYour browser does not support the html audio tag.  \n&lt;/audio&gt;  \n</textarea></div><p>Instead of koyal.mp3, you can pass any mp3 file name.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 480
	},
	{
		"question" : "24) What is h:form tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>The &lt;h:form&gt; tag represents an input form. It includes child components that can contain data which is either presented to the user or submitted with the form. It can also include HTML markup to lay out the components on the page.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 481
	},
	{
		"question" : "35) What is the difference between progress and meter tag?",
		"answer" : "<div> <p>The progress tag is used to represent the progress of the task only while the meter tag is used to measure data within a given range. <a target=\"_blank\">More details.</a></p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 482
	},
	{
		"question" : "25) What is h:commandButton tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>The &lt;h:commandButton&gt;tag creates a submit button and used to submit an application form.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 483
	},
	{
		"question" : "36) What is the use of figure tag in HTML 5?",
		"answer" : "<div> <p>The figure tag is used to add a photo in the document on the web page. It is used to handle the group of diagrams, photos, code listing with some embedded content.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;p&gt;The Taj Mahal is widely recognized as \"the jewel of Muslim art in India and one of the universally admired masterpieces of the world's heritage.\"&lt;/p&gt;  \n&lt;figure&gt;  \n  &lt;img src=\"htmlpages/images/tajmahal.jpg\" alt=\"Taj Mahal\"/&gt;  \n&lt;/figure&gt;   \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 484
	},
	{
		"question" : "26) What is h:inputTextarea tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>The &lt;h:inputTextarea&gt;tag renders an HTML \"textarea\" element. It allows a user to enter multiline string.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 485
	},
	{
		"question" : "37) What is the use of figcaption tag in HTML 5?",
		"answer" : "<div> <p>The &lt;figcaption&gt; element is used to provide a caption to an image. It is an optional tag and can appear before or after the content within the &lt;figure&gt; tag. The &lt;figcaption&gt; element is used with &lt;figure&gt; element and it can be placed as the first or last child of the &lt;figure&gt; element.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;figure&gt;  \n  &lt;img src=\"htmlpages/images/tajmahal.jpg\" alt=\"Taj Mahal\"/&gt;  \n&lt;figcaption&gt;Fig.1.1 - A front view of the great Taj Mahal in Agra.&lt;/figcaption&gt;  \n&lt;/figure&gt;    \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 486
	},
	{
		"question" : "38) What is button tag?",
		"answer" : "<div> <p>The button tag is used in HTML 5. It is used to create a clickable button within the HTML form on the web page. It is generally used to create a \"submit\" or \"reset\" button. Let's see the code to display the button.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;button name=\"button\" type=\"button\"&gt;Click Here&lt;/button&gt;  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 487
	},
	{
		"question" : "27) What is h:commandLink tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>JSF renders it as an HTML \"a\" anchor element that acts as a form submit button when clicked. So, you can create an anchor tag by using this tag. An h:commandLink tag must include a nested h:outputText tag, which represents the text that the user clicks to generate the event. It's also required to be placed inside a &lt;h:form&gt; tag.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 488
	},
	{
		"question" : "39) What is the use of details and summary tag?",
		"answer" : "<div> <p>The details tag is used to specify some additional details on the web page. It can be viewed or hidden on demand. The summary tag is used with details tag. <a target=\"_blank\">More details.</a></p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 489
	},
	{
		"question" : "28) What is h:inputSecret tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is a standard password field which accepts one line of text with no spaces and displays it as a set of asterisks as it is entered. In other words, we say, it is used to create an HTML password field which allows a user to input a string without the actual string appearing in the field.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 490
	},
	{
		"question" : "40) What is datalist tag?",
		"answer" : "<div> <p>The HTML 5 datalist tag provides an autocomplete feature on the form element. It facilitates users to choose the predefined options to the users to select data.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;label&gt;  \n Enter your favorite cricket player: Press any character&lt;br /&gt;  \n &lt;input type=\"text\" id=\"favCktPlayer\" list=\"CktPlayers\"&gt;  \n &lt;datalist id=\"CktPlayers\"&gt;  \n &lt;option value=\"Sachin Tendulkar\"&gt;  \n &lt;option value=\"Brian Lara\"&gt;  \n &lt;option value=\"Jacques Kallis\"&gt;   \n &lt;option value=\"Ricky Ponting\"&gt;   \n &lt;option value=\"Rahul Dravid\"&gt;   \n &lt;option value=\"Shane Warne\"&gt;   \n &lt;option value=\"Rohit Sharma\"&gt;   \n &lt;option value=\"Donald Bradman\"&gt;   \n &lt;option value=\"Saurav Ganguly \"&gt;   \n &lt;option value=\"AB diVilliers\"&gt;   \n &lt;option value=\"Mahendra Singh Dhoni\"&gt;   \n &lt;option value=\"Adam Gilchrist\"&gt;  \n &lt;/datalist&gt;  \n&lt;/label&gt;   \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 491
	},
	{
		"question" : "5) How many types of heading does an HTML contain?",
		"answer" : "<div> <p>The HTML contains six types of headings which are defined with the &lt;h1&gt; to &lt;h6&gt; tags. Each type of heading tag displays different text size from another. So, &lt;h1&gt; is the largest heading tag and &lt;h6&gt; is the smallest one. For example: </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;h1&gt;Heading no. 1&lt;/h1&gt;  \n&lt;h2&gt;Heading no. 2&lt;/h2&gt;  \n&lt;h3&gt;Heading no. 3&lt;/h3&gt;  \n&lt;h4&gt;Heading no. 4&lt;/h4&gt;  \n&lt;h5&gt;Heading no. 5&lt;/h5&gt;  \n&lt;h6&gt;Heading no. 6&lt;/h6&gt;  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 492
	},
	{
		"question" : "29) What is h:inputHidden tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It renders an HTML \"input\" element of type hidden. It does not appear on the web page, so you can pass hidden information while submitting the form.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 493
	},
	{
		"question" : "Menu Example",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>No.</th><th>Typical HTML4</th><th>Typical HTML5</th></tr>\n<tr><td>1)</td><td>&lt;div id=\"header\"&gt;</td><td>&lt;header&gt;</td></tr>\n<tr><td>2)</td><td>&lt;div id=\"menu\"&gt;</td><td>&lt;nav&gt;</td></tr>\n<tr><td>3)</td><td>&lt;div id=\"content\"&gt;</td><td>&lt;section&gt;</td></tr>\n<tr><td>4)</td><td>&lt;div id=\"post\"&gt;</td><td>&lt;article&gt;</td></tr>\n<tr><td>5)</td><td>&lt;div id=\"footer\"&gt;</td><td>&lt;footer&gt;</td></tr>\n</tbody></table><p><strong>HTML 4 Header and Footer:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;div id=\"header\"&gt;\n  &lt;h1&gt;Monday Times&lt;/h1&gt;\n&lt;/div&gt;\n.\n.\n.\n&lt;div id=\"footer\"&gt;\n  &lt;p&gt;&amp;copy; JavaTpoint. All rights reserved.&lt;/p&gt;\n&lt;/div&gt;\n</textarea></div><p><strong>HTML 5 Header and Footer:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;header&gt;\n  &lt;h1&gt;Monday Times&lt;/h1&gt;\n&lt;/header&gt;\n.\n.\n.\n&lt;footer&gt;\n  &lt;p&gt;© JavaTpoint. All rights reserved.&lt;/p&gt;\n&lt;/footer&gt;\n</textarea></div><p><strong>HTML 4 Menu:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;div id=\"menu\"&gt;\n  &lt;ul&gt;\n    &lt;li&gt;News&lt;/li&gt;\n    &lt;li&gt;Sports&lt;/li&gt;\n    &lt;li&gt;Weather&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n</textarea></div><p><strong>HTML 5 Menu:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;nav&gt;\n  &lt;ul&gt;\n    &lt;li&gt;News&lt;/li&gt;\n    &lt;li&gt;Sports&lt;/li&gt;\n    &lt;li&gt;Weather&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/nav&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 494
	},
	{
		"question" : "6) How to create a hyperlink in HTML?",
		"answer" : "<div> <p>The HTML provides an anchor tag to create a hyperlink that links one page to another page. These tags can appear in any of the following ways:</p><ul class=\"points\">\n<li>Unvisited link - It is displayed, underlined and blue.</li>\n<li>Visited link - It is displayed, underlined and purple.</li>\n<li>Active link - It is displayed, underlined and red.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 495
	},
	{
		"question" : "42) If I do not put <!DOCTYPE html> will HTML 5 work?",
		"answer" : "<div> <p>No, the browser will not be able to identify that it is an HTML document and HTML 5 tags do not function properly..</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 496
	},
	{
		"question" : "7) Which HTML tag is used to display the data in the tabular form?",
		"answer" : "<div> <p>The <b>HTML table tag</b> is used to display data in tabular form (row * column). It also manages the layout of the page, e.g., header section, navigation bar, body content, footer section. Here is the list of tags used while displaying the data in the tabular form: </p><table class=\"alt\">\n<tbody><tr><th>Tag</th><th>Description</th></tr>\n<tr><td>&lt;table&gt;</td><td>It defines a table.</td></tr>\n<tr><td>&lt;tr&gt;</td><td>It defines a row in a table.</td></tr>\n<tr><td>&lt;th&gt;</td><td>It defines a header cell in a table.</td></tr>\n<tr><td>&lt;td&gt;</td><td>It defines a cell in a table.</td></tr>\n<tr><td>&lt;caption&gt;</td><td>It defines the table caption.</td></tr>\n<tr><td>&lt;colgroup&gt;</td><td>It specifies a group of one or more columns in a table for formatting.</td></tr>\n<tr><td>&lt;col&gt;</td><td>It is used with &lt;colgroup&gt; element to specify column properties for each\ncolumn.</td></tr>\n<tr><td>&lt;tbody&gt;</td><td>It is used to group the body content in a table.</td></tr>\n<tr><td>&lt;thead&gt;</td><td>It is used to group the header content in a table.</td></tr>\n<tr><td>&lt;tfooter&gt;</td><td>It is used to group the footer content in a table.</td></tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 497
	},
	{
		"question" : "30) What is h:inputFile tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>JSF renders it as an HTML element of type file. It is used to get the file as input. In HTML form, it allows a user to upload a file.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 498
	},
	{
		"question" : "43) What is the use of the required attribute in HTML5?",
		"answer" : "<div> <p>It forces a user to fill text on the text field or text area before submitting the form. It is used for form validation.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">Name: &lt;input type=\"text\" name=\"name\" required&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 499
	},
	{
		"question" : "8) What are some common lists that are used when designing a page?",
		"answer" : "<div> <p>There are many common lists which are used to design a page. You can choose any or a combination of the following list types:</p><ul class=\"points\">\n<li>Ordered list - The ordered list displays elements in numbered format. It is represented by &lt;ol&gt; tag.</li>\n<li>Unordered list - The unordered list displays elements in bulleted format. It is represented by &lt;ul&gt; tag.</li>\n<li>Definition list - The definition list displays elements in definition form like in dictionary. The &lt;dl&gt;, &lt;dt&gt; and &lt;dd&gt; tags are used to define description list.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 500
	},
	{
		"question" : "3) What are the advantages of Maven?",
		"answer" : "<div> <ul class=\"points\">\n<li>No need to add jar file in each project</li>\n<li>Creates right directory structure</li>\n<li>Builds and deploys the project</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 501
	},
	{
		"question" : "9) What is the difference between HTML elements and tags?",
		"answer" : "<div> <p>HTML elements communicate to the browser to render text. When the elements are enclosed by brackets &lt;&gt;, they form HTML tags. Most of the time, tags come in a pair and surround content.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 502
	},
	{
		"question" : "10) What is semantic HTML?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><p>Semantic HTML is a coding style. It is the use of HTML markup to reinforce the semantics or meaning of the content. For example: In semantic HTML &lt;b&gt; &lt;/b&gt; tag is not used for bold statement as well as &lt;i&gt; &lt;/i&gt; tag is used for italic. Instead of these we use &lt;strong&gt;&lt;/strong&gt; and &lt;em&gt;&lt;/em&gt; tags.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 503
	},
	{
		"question" : "11) What is an image map?",
		"answer" : "<div> <p>Image map facilitates you to link many different web pages using a single image. It is represented by &lt;map&gt; tag. You can define shapes in images that you want to make part of an image mapping.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 504
	},
	{
		"question" : "4) What is the command to check the maven version?",
		"answer" : "<div> <p>Type the following command on console to know the maven version.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">mvn -version\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 505
	},
	{
		"question" : "12) How to insert a copyright symbol on a browser page?",
		"answer" : "<div> <p>You can insert a copyright symbol by using &amp;copy; or &amp;#169; in an HTML file. </p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 506
	},
	{
		"question" : "13) How to create a nested webpage in HTML?",
		"answer" : "<div> <p>The HTML iframe tag is used to display a nested webpage. In other words, it represents a webpage within a webpage. The HTML &lt;iframe&gt; tag defines an inline frame. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;!DOCTYPE html&gt;  \n&lt;html&gt;  \n&lt;body&gt;  \n&lt;h2&gt;HTML Iframes example&lt;/h2&gt;  \n&lt;p&gt;Use the height and width attributes to specify the size of the iframe:&lt;/p&gt;  \n&lt;iframe src=\"https://www.javatpoint.com/\" height=\"300\" width=\"400\"&gt;&lt;/iframe&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 507
	},
	{
		"question" : "1) What is CSS?",
		"answer" : "<div> <p>The new input types for form validation are email, URL, number, tel, and date.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;input type=\"email\"&gt;\n</textarea></div><br><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Interview Tips</a></td>\n<td><a>Job/HR Interview Questions</a></td></tr>\n<tr><td><a>JavaScript Interview Questions</a></td>\n<td><a>jQuery Interview Questions</a></td></tr>\n<tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><br><br><img src=\"https://static.javatpoint.com/interview/images/css-interview-questions.png\" alt=\"CSS Interview Questions\" class=\"imageright\"><h1 class=\"h1\">CSS Interview Questions</h1><p>A list of top frequently asked <strong>CSS interview questions</strong> and answers are given below. </p><p>CSS stands for Cascading Style Sheet. It is a popular styling language which is used with HTML to design websites. It can also be used with any XML documents including plain XML, SVG, and XUL.<a target=\"_blank\">More details...</a></p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 508
	},
	{
		"question" : "5) What does the build tool?",
		"answer" : "<div> <ul class=\"points\">\n<li>Generates source code (if the auto-generated code is used)</li>\n<li>Generates documentation from source code</li>\n<li>Compiles source code</li>\n<li>Packages compiled code into a JAR or ZIP file</li>\n<li>Installs the packaged code in the local repository, server repository, or central repository</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 509
	},
	{
		"question" : "14) How do you keep list elements straight in an HTML file?",
		"answer" : "<div> <p>You can keep the list elements straight by using indents. </p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 510
	},
	{
		"question" : "6) What is the difference between Ant and Maven?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><table class=\"alt\">\n<tbody><tr><th>Ant</th><th>Maven</th></tr>\n<tr><td>It is <b>a toolbox</b>.</td><td>It is <b>a framework</b>.</td></tr>\n<tr><td>It is <b>mainly a build tool</b>.</td><td>It is <b>mainly a project management tool</b>.</td></tr>\n<tr><td>There is <b>no life cycle</b>.</td><td>There is a<b>life cycle</b>.</td></tr>\n<tr><td>Ant <b>doesn't have formal conventions</b>.</td><td>Maven <b>has a convention</b> to place source code, compiled code etc.</td></tr>\n<tr><td>Ant is <b>procedural</b>.</td><td>Maven is <b>declarative</b>.</td></tr>\n<tr><td>The ant scripts are <b>not reusable</b>.</td><td>The Maven plugins are <b>reusable</b>.</td></tr>\n</tbody></table></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 511
	},
	{
		"question" : "2) What is the origin of CSS?",
		"answer" : "<div> <p>SGML (Standard Generalized Markup Language) is the origin of CSS. It is a language that defines markup languages. </p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 512
	},
	{
		"question" : "15) Does a hyperlink only apply to text?",
		"answer" : "<div> <p>No, you can use hyperlinks on text and images both. The HTML anchor tag defines a hyperlink that links one page to another page. The \"href\" attribute is the most important attribute of the HTML anchor tag.\n</p><h4 class=\"h4\">Syntax</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;a href = \"...........\"&gt; Link Text &lt;/a&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 513
	},
	{
		"question" : "16) What is a style sheet?",
		"answer" : "<div> <p>A style sheet is used to build a consistent, transportable, and well-designed style template. You can add these templates on several different web pages. It describes the look and formatting of a document written in markup language. </p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 514
	},
	{
		"question" : "3) What are the different variations of CSS?",
		"answer" : "<div> <p>Following are the different variations of CSS:</p><ul class=\"points\">\n<li>CSS1</li>\n<li>CSS2</li>\n<li>CSS2.1</li>\n<li>CSS3</li>\n<li>CSS4</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 515
	},
	{
		"question" : "4) How can you integrate CSS on a web page?",
		"answer" : "<div> <p>There are three methods to integrate CSS on web pages.</p><ol class=\"points\">\n<li>Inline method - It is used to insert style sheets in HTML document</li>\n<li>Embedded/Internal method - It is used to add a unique style to a single document</li>\n<li>Linked/Imported/External method - It is used when you want to make changes on multiple pages.</li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 516
	},
	{
		"question" : "31) What is h:graphicImage tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>JSF renders an HTML element \"img\" tag. This tag is used to render an image on the web page.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 517
	},
	{
		"question" : "5) What are the advantages of CSS?",
		"answer" : "<div> <ul class=\"points\">\n<li>Bandwidth</li>\n<li>Site-wide consistency</li>\n<li>Page reformatting</li>\n<li>Accessibility</li>\n<li>Content separated from presentation</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 518
	},
	{
		"question" : "32) What is h:message tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to display a single message for a particular component. You can display your custom message by passing the id of that component into the for the attribute.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 519
	},
	{
		"question" : "33) What is h:messages tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to displays all messages that were stored in the faces context during the course of the JSF lifecycle.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 520
	},
	{
		"question" : "34) What is h:dataTable tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to create a data table that can be updated dynamically.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 521
	},
	{
		"question" : "7) Why is the use of the profile required in Maven?",
		"answer" : "<div> <p>For providing probability to projects, we use profiles.</p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 522
	},
	{
		"question" : "35) What are the available validation tags in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>JavaServer Faces technology provides a set of standard classes and associated tags that you can use to validate elements data. A table which contains the validation tags is given.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 523
	},
	{
		"question" : "17) Can you create a multi-colored text on a web page?",
		"answer" : "<div> <p>Yes. To create a multicolor text on a web page you can use &lt;font color =\"color\"&gt; &lt;/font&gt; for the specific texts you want to color. </p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 524
	},
	{
		"question" : "8) What is the syntax for offline project creation?",
		"answer" : "<div> <p>The syntax for project creation is:</p><p>\n</p><p>mvn o packg.</p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 525
	},
	{
		"question" : "36) What is f:validateBean tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to register a bean validator to the component. For validating the bean model, you must set the context parameter in the web deployment descriptor file web.xml.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 526
	},
	{
		"question" : "18) Is it possible to change the color of the bullet?",
		"answer" : "<div> <p>The color of the bullet is always the color of the first text of the list. So, if you want to change the color of the bullet, you must change the color of the text. </p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 527
	},
	{
		"question" : "19) Explain the layout of HTML?",
		"answer" : "<div> <p>HTML layout specifies a way in which the web page is arranged.</p><br><img src=\"https://static.javatpoint.com/htmlpages/images/html-layouts.png\" alt=\"HTML Layouts\"><br><p>Every website has a specific layout to display content in a specific manner. </p><p>Following are different HTML5 elements which are used to define the different parts of a webpage. </p><ul class=\"points\">\n<li>&lt;header&gt;: It is used to define a header for a document or a section.</li>\n<li>&lt;nav&gt;: It is used to define a container for navigation links</li>\n<li>&lt;section&gt;: It is used to define a section in a document</li>\n<li>&lt;article&gt;: It is used to define an independent, self-contained article</li>\n<li>&lt;aside&gt;: It is used to define content aside from the content (like a sidebar)</li>\n<li>&lt;footer&gt;: It is used to define a footer for a document or a section</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 528
	},
	{
		"question" : "37) What is f:validateDoubleRange tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to check that the value of an input field is within a specific range or not. The value must be a float or double type.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 529
	},
	{
		"question" : "9) How is the propagation of plugins to child POMs stopped?",
		"answer" : "<div> <p>It can be done using the following syntax:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">set&lt;inherited&gt; to false.\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 530
	},
	{
		"question" : "6) What are the limitations of CSS?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><ul class=\"points\">\n<li>Ascending by selectors is not possible</li>\n<li>Limitations of vertical control</li>\n<li>No expressions</li>\n<li>No column declaration</li>\n<li>Pseudo-class not controlled by dynamic behavior</li>\n<li>Rules, styles, targeting specific text not possible</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 531
	},
	{
		"question" : "20) What is a marquee?",
		"answer" : "<div> <p>Marquee is used to put the scrolling text on a web page. It scrolls the image or text up, down, left or right automatically. You should put the text which you want to scroll within the &lt;marquee&gt;......&lt;/marquee&gt; tag. <a target=\"_blank\">More details.</a></p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 532
	},
	{
		"question" : "10) What is the use of the exclusion element?",
		"answer" : "<div> <p>The element is used to exclude dependencies.</p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 533
	},
	{
		"question" : "7) What are the CSS frameworks?",
		"answer" : "<div> <p>CSS frameworks are the preplanned libraries which make easy and more standard compliant web page styling. The frequently used CSS frameworks are: -</p><ul class=\"points\">\n<li>Bootstrap</li>\n<li>Foundation</li>\n<li>Semantic UI</li>\n<li>Gumby</li>\n<li>Ulkit</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 534
	},
	{
		"question" : "21) How many tags can be used to separate a section of texts?",
		"answer" : "<div> <p>Three tags are used to separate the texts. </p><ul class=\"points\">\n<li>&lt;br&gt; tag - Usually &lt;br&gt; tag is used to separate the line of text. It breaks the current line and conveys the flow to the next line</li>\n<li>&lt;p&gt; tag - The &lt;p&gt; tag contains the text in the form of a new paragraph. </li>\n<li>&lt;blockquote&gt; tag - It is used to define a large quoted section. If you have a large quotation, then put the entire text within &lt;blockquote&gt;.............&lt;/blockquote&gt; tag.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 535
	},
	{
		"question" : "11) Define SNAPSHOT in terms of maven.",
		"answer" : "<div> <p>The snapshot indicates the current development copy.</p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 536
	},
	{
		"question" : "8) Why background and color are the separate properties if they should always be set together?",
		"answer" : "<div> <p>There are two reasons behind this:</p><ul class=\"points\">\n<li>It enhances the legibility of style sheets. The background property is a complex property in CSS, and if it is combined with color, the complexity will further increase. </li>\n<li>Color is an inherited property while the background is not. So this can make confusion further.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 537
	},
	{
		"question" : "12) Define Archetype.",
		"answer" : "<div> <p>It is a Maven plugin which is designed for the creation of project structure. </p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 538
	},
	{
		"question" : "9) What is Embedded Style Sheet?",
		"answer" : "<div> <p>An Embedded style sheet is a CSS style specification method used with HTML. You can embed the entire stylesheet in an HTML document by using the STYLE element. <a target=\"_blank\">More details...</a></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> &lt;style&gt;  \nbody {  \n    background-color: linen;  \n}  \nh1 {  \n    color: red;  \n    margin-left: 80px;  \n}   \n&lt;/style&gt;  \n\t </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 539
	},
	{
		"question" : "22) How to make a picture of a background image of a web page?",
		"answer" : "<div> <p>To make a picture a background image on a web page, you should put the following tag code after the &lt;/head&gt; tag.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;body background = \"image.gif\"&gt;\n</textarea></div><p>Here, replace the \"image.gif\" with the name of your image file which you want to display on your web page. </p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 540
	},
	{
		"question" : "38) What is f:validateLength tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to check whether the length of a component's value is within a specific range or not. The value must be a java.lang.String.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 541
	},
	{
		"question" : "10) What are the advantages of Embedded Style Sheets?",
		"answer" : "<div> <ul class=\"points\">\n<li>You can create classes for use on multiple tag types in the document.</li>\n<li>You can use selector and grouping methods to apply styles in complex situations.</li>\n<li>No extra download is required to import the information.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 542
	},
	{
		"question" : "11) What is a CSS selector?",
		"answer" : "<div> <p>It is a string that identifies the elements to which a particular declaration apply. It is also referred as a link between the HTML document and the style sheet. It is equivalent of HTML elements. There are several different types of selectors in CSS: - </p><ul class=\"points\">\n<li>CSS Element Selector</li>\n<li>CSS Id Selector</li>\n<li>CSS Class Selector</li>\n<li>CSS Universal Selector</li>\n<li>CSS Group Selector</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 543
	},
	{
		"question" : "39) What is f:validateLongRange tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to check whether the local value of a component is within a specific range or not. The value must be any numeric type or String that can be converted to a long.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 544
	},
	{
		"question" : "40) What is f:validateRegex tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to check whether the local value of a component is a match against a regular expression from the java.util.regex package or not.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 545
	},
	{
		"question" : "23) What are empty elements?",
		"answer" : "<div> <p>HTML elements with no content are called empty elements. For example: &lt;br&gt;, &lt;hr&gt; etc.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 546
	},
	{
		"question" : "12) Name some CSS style components.",
		"answer" : "<div> <p>Some CSS Style components are:</p><ul class=\"points\">\n<li>Selector</li>\n<li>Property</li>\n<li>Value</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 547
	},
	{
		"question" : "13) What is the use of CSS Opacity?",
		"answer" : "<div> <p>The CSS opacity property is used to specify the transparency of an element. In simple word, you can say that it specifies the clarity of the image.\nIn technical terms, Opacity is defined as the degree to which light is allowed to travel through an object. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;style&gt;  \nimg.trans {  \n    opacity: 0.4;  \n    filter: alpha(opacity=40); /* For IE8 and earlier */  \n}  \n&lt;/style&gt; \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 548
	},
	{
		"question" : "24) What is the use of a span tag? Give one example.",
		"answer" : "<div> <p>The span tag is used for following things:</p><ul class=\"points\">\n<li>For adding color on text</li>\n<li>For adding background on text</li>\n<li>Highlight any color text </li>\n</ul><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;p&gt;\n&lt;span style=\"color:#ffffff;\"&gt;\nIn this page we use span.\n&lt;/span&gt;\n&lt;/p&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 549
	},
	{
		"question" : "14) Explain universal selector.",
		"answer" : "<div> <p>The universal selector matches the name of any of the element type instead of selecting elements of a specific type.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;style&gt;  \n* {  \n   color: green;  \n   font-size: 20px;  \n}   \n&lt;/style&gt;  \n  </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 550
	},
	{
		"question" : "41) What is f:validateRequired tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to ensure that the local value is not empty on an EditableValueHolder component.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 551
	},
	{
		"question" : "25) What is the use of an iframe tag?",
		"answer" : "<div> <p>An iframe is used to display a web page within a web page.</p><p><strong>Syntax:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;iframe src=\"URL\"&gt;&lt;/iframe&gt;\n</textarea></div><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;iframe src=\"demo_iframe.html\" width=\"200px\" height=\"200px\"&gt;&lt;/iframe&gt;\n</textarea></div><p><strong>Target to a link:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;iframe src=\"http://www.javatpoint.com\" name=\"iframe_a\"&gt;&lt;/iframe&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 552
	},
	{
		"question" : "42) How to validate managed bean in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>JSF provides validation constraints for bean model in the form of annotations. You can place those annotations on a field, method, or class of a JavaBeans component, such as a managed bean.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 553
	},
	{
		"question" : "26) What are the entities in HTML?",
		"answer" : "<div> <p>The HTML character entities are used as a replacement for reserved characters in HTML. You can also replace characters that are not present on your keyboard by entities. These characters are replaced because some characters are reserved in HTML.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 554
	},
	{
		"question" : "43) What are the standard converters in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>The JavaServer Faces provides a set of Converters. You can use that to convert component data. The purpose of conversion is to take the String-based data from the Servlet API and convert it to strongly typed Java objects.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 555
	},
	{
		"question" : "15) Which command is used for the selection of all the elements of a paragraph?",
		"answer" : "<div> <p>The p[lang] command is used for selecting all the elements of a paragraph.</p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 556
	},
	{
		"question" : "16) What is the use of % unit? ",
		"answer" : "<div> <p>It is used for defining percentage values.</p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 557
	},
	{
		"question" : "17) Name the property used to specify the background color of an element.",
		"answer" : "<div> <p>The background-color property is used to specify the background color of the element. For example: </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;style&gt;  \nh2,p{  \n    background-color: #b0d4de;  \n}  \n&lt;/style&gt;\n </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 558
	},
	{
		"question" : "7. What does central repository consist of?",
		"answer" : "<div> <p>It consists of a large number of libraries that are frequently used.</p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 559
	},
	{
		"question" : "27) Why is a URL encoded in HTML?",
		"answer" : "<div> <p>An URL is encoded to convert non-ASCII characters into a format that can be used over the Internet because a URL is sent over the Internet by using the ASCII character-set only. If a URL contains characters outside the ASCII set, the URL has to be converted. The non-ASCII characters are replaced with a \"%\" followed by hexadecimal digits.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 560
	},
	{
		"question" : "18) Name the property for controlling the image repetition of the background.",
		"answer" : "<div> <p>The background-repeat property repeats the background image horizontally and vertically. Some images are repeated only horizontally or vertically. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;style&gt;  \nbody {  \nbackground-image: url(\"paper1.gif\");  \nmargin-left:100px;  \n}  \n&lt;/style&gt;\n </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 561
	},
	{
		"question" : "13) Give the command for installation of the JAR file in a local repository.",
		"answer" : "<div> <p>mvn install</p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 562
	},
	{
		"question" : "28) Does a <!DOCTYPE html> tag is a HTML tag?",
		"answer" : "<div> <p>No, the &lt;!DOCTYPE html&gt; declaration is not an HTML tag. There are many type of HTML e.g. HTML 4.01 Strict, HTML 4.01 Transitional, HTML 4.01 Frameset, XHTML 1.0 Strict, XHTML 1.0 Transitional, XHTML 1.0 Frameset, XHTML 1.1 etc. So, &lt;!DOCTYPE html&gt; is used to instruct the web browser about the HTML page.</p></div>",
		"category" : "Web",
		"sub_category" : "HTML",
		"id" : 563
	},
	{
		"question" : "44) What is f:converter tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is a core converter tag. It is used to add an arbitrary converter to the parent component.\n</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 564
	},
	{
		"question" : "19) Name the property for controlling the image position in the background.",
		"answer" : "<div> <p> The background-position property is used to define the initial position of the background image. By default, the background image is placed on the top-left of the webpage. </p><p>You can set the following positions:</p><ol class=\"points\">\n<li>center</li>\n<li>top</li>\n<li>bottom</li>\n<li>left</li>\n<li>right</li>\n</ol><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">background: white url('good-morning.jpg');\nbackground-repeat: no-repeat;\nbackground-attachment: fixed;\nbackground-position: center; \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 565
	},
	{
		"question" : "45) What is f:convertDateTime tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to convert user input into the specified date. You can convert a component's data to a java.util.Date by nesting the convertDateTime tag inside the component tag. The convertDateTime tag has several attributes that allow you to specify the format and type of the data.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 566
	},
	{
		"question" : "20) Name the property for controlling the image scroll in the background. ",
		"answer" : "<div> <p>The background-attachment property is used to specify if the background image is fixed or scroll with the rest of the page in the browser window. If you set fixed the background image, then the image not move during scrolling in the browser. Let's take an example with the fixed background image. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">background: white url('bbb.gif');\nbackground-repeat: no-repeat;\nbackground-attachment: fixed;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 567
	},
	{
		"question" : "46) What is f:convertNumber tag in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is used to convert component (user input) data into a Java Number type. You can convert a component's data to a java.lang.Number by nesting the convertNumber tag inside the component tag. The convertNumber tag has several attributes that allow you to specify the format and type of the data.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 568
	},
	{
		"question" : "14) Mention the phases of cleaning lifecycle.",
		"answer" : "<div> <p>The lifecycle of cleaning consist of:</p><ul class=\"points\">\n<li>pre-clean</li>\n<li>clean</li>\n<li>post-clean</li>\n</ul></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 569
	},
	{
		"question" : "21) What is the use of ruleset?",
		"answer" : "<div> <p>The ruleset is used to identify that selectors can be attached with other selectors. It has two parts:</p><ul class=\"points\">\n<li>Selector - Selector indicates the HTML element you want to style. </li>\n<li>Declaration Block - The declaration block can contain one or more declarations separated by a semicolon.</li>\n</ul><img src=\"csspages/images/css-syntax.png\" alt=\"CSS syntax\"></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 570
	},
	{
		"question" : "15) What is the purpose of mvn clean command?",
		"answer" : "<div> <p>The command removes the target directory before the starting of a build process.</p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 571
	},
	{
		"question" : "22) What is the difference between class selectors and id selectors?",
		"answer" : "<div> <p>An overall block is given to class selector while id selectors take only a single element differing from other elements.</p><h4 class=\"h4\">CSS Class Selector</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;style&gt;  \n.center {  \n    text-align: center;  \n    color: blue;  \n}  \n&lt;/style&gt;\n </textarea></div><h4 class=\"h4\">CSS Id Selector</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;style&gt;  \n#para1 {  \n    text-align: center;  \n    color: blue;  \n}  \n&lt;/style&gt;  \n </textarea></div><p> <a target=\"_blank\">More details...</a></p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 572
	},
	{
		"question" : "47) How to refer bean method in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>We refer a managed bean method that performs navigation processing for the component and returns a logical outcome String.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 573
	},
	{
		"question" : "23) What are the advantages of External Style Sheets?",
		"answer" : "<div> <ul class=\"points\">\n<li>You can create classes for reusing it in many documents.</li>\n<li>By using it, you can control the styles of multiple documents from one file. </li>\n<li>In complex situations, you can use selectors and grouping methods to apply styles. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 574
	},
	{
		"question" : "48) What is Facelets?",
		"answer" : "<div> <p>It is a lightweight page declaration language which is used to build JavaServer Faces views using HTML style.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 575
	},
	{
		"question" : "49) What are the advantages of Facelets?",
		"answer" : "<div> <p>1) It supports code reusability through templating and composite components.</p><p>2) It provides functional extensibility of components and other server-side objects through customization</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 576
	},
	{
		"question" : "50) What is the lifecycle of Facelets application in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>The JavaServer Faces specification defines the lifecycle of a JavaServer Faces application. The following steps describe that process to a Facelets-based application.</p><p>1) Lifecycle starts when a client makes a new request for a web page which is created using Facelets. JSF creates a new component tree or javax.faces.component.UIViewRoot and placed into the FacesContext.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 577
	},
	{
		"question" : "16) What is a MOJO?",
		"answer" : "<div> <p>A MOJO stands for Maven plain Old Java Object. Each MOJO is an executable goal in Maven, and a plugin is a distribution of one or more related MOJOs.</p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 578
	},
	{
		"question" : "24) What is the difference between inline, embedded and external style sheets?",
		"answer" : "<div> <p><strong>Inline</strong>: Inline Style Sheet is used to style only a small piece of code. </p><h4 class=\"h4\">Syntax</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;htmltag style=\"cssproperty1:value; cssproperty2:value;\"&gt; &lt;/htmltag&gt;   \n\t </textarea></div><p><strong>Embedded</strong>: Embedded style sheets are put between the &lt;head&gt;...&lt;/head&gt; tags.</p><h4 class=\"h4\">Syntax</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;style&gt;  \nbody {  \n    background-color: linen;  \n}  \nh1 {  \n    color: red;  \n    margin-left: 80px;  \n}   \n&lt;/style&gt;  \n\t </textarea></div><p><strong>External</strong>: This is used to apply the style to all the pages within your website by changing just one style sheet. </p><h4 class=\"h4\">Syntax</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;head&gt;  \n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\"&gt;  \n&lt;/head&gt;  \n\t </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 579
	},
	{
		"question" : "17) What is a repository?",
		"answer" : "<div> <p>A repository is a directory or place where all the jars and pom.xml file are stored. There are 3 types of a repository in Maven:</p><ol class=\"points\">\n<li>Local Repository</li>\n<li>Central Repository</li>\n<li>Remote Repository</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 580
	},
	{
		"question" : "8) Define anonymous function",
		"answer" : "<div> <p>It is a function that has no name. These functions are declared dynamically at runtime using the function operator instead of the function declaration. The function operator is more flexible than a function declaration. It can be easily used in the place of an expression. For example: </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var display=function()\n{\n  alert(\"Anonymous Function is invoked\");\n}\ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 581
	},
	{
		"question" : "18) What is a local repository?",
		"answer" : "<div> <p>Maven local repository is created by maven in your local system when you run any maven command. <a>More details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 582
	},
	{
		"question" : "25) What is RWD?",
		"answer" : "<div> <p>RWD stands for Responsive Web Design. This technique is used to display the designed page perfectly on every screen size and device, for example, mobile, tablet, desktop and laptop. You don't need to create a different page for each device. </p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 583
	},
	{
		"question" : "9) Can an anonymous function be assigned to a variable?",
		"answer" : "<div> <p>Yes, you can assign an anonymous function to a variable.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 584
	},
	{
		"question" : "19) What is a central repository?",
		"answer" : "<div> <p>Maven community creates maven central repository on the web. <a>More details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 585
	},
	{
		"question" : "26) What are the benefits of CSS sprites?",
		"answer" : "<div> <p> If a web page has a large number of images that take a longer time to load because each image separately sends out an HTTP request. The concept of CSS sprites is used to reduce the loading time for a web page because it combines the various small images into one image. It reduces the number of HTTP requests and hence the loading time. </p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 586
	},
	{
		"question" : "10) In JavaScript what is an argument object?",
		"answer" : "<div> <p>The variables of JavaScript represent the arguments that are passed to a function. </p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 587
	},
	{
		"question" : "20) What is a remote repository?",
		"answer" : "<div> <p>Maven remote repository is located on the web by different vendors. So you need to define the dependency in pom.xml file manually. It is important because most of the libraries are missing from the central repository. <a>More details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 588
	},
	{
		"question" : "51) How to create a Fecelet view?",
		"answer" : "<div> <p>Facelets views are XHTML pages. You can create a web page or view, by adding components to the page, wire the components to backing bean values and properties, and register converters, validators, or listeners on the components.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 589
	},
	{
		"question" : "27) What is the difference between logical tags and physical tags?",
		"answer" : "<div> <ul class=\"points\">\n<li>Physical tags are referred to as presentational markup while logical tags are useless for appearances.</li>\n<li>Physical tags are newer versions, on the other hand, logical tags are old and concentrate on content. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 590
	},
	{
		"question" : "21) What is POM?",
		"answer" : "<div> <p>POM stands for Project Object Model. The pom.xml file contains information of project and project configuration. <a>More details.</a></p></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 591
	},
	{
		"question" : "28) What is the CSS Box model and what are its elements?",
		"answer" : "<div> <p>The CSS box model is used to define the design and layout of elements of CSS. </p><p>The elements are:</p><ul class=\"points\">\n<li>Margin - It removes the area around the border. It is transparent.</li>\n<li>Border - It represents the area around the padding</li>\n<li>Padding - It removes the area around the content. It is transparent.</li>\n<li>Content - It represents the content like text, images, etc.</li>\n</ul><img src=\"https://static.javatpoint.com/interview/images/css-box-model.png\" alt=\"CSS Box Model\"></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 592
	},
	{
		"question" : "22) What are the build phases in Maven?",
		"answer" : "<div> <ol class=\"points\">\n<li>validate</li>\n<li>compile</li>\n<li>test</li>\n<li>package</li>\n<li>integration-test</li>\n<li>verify</li>\n<li>install</li>\n<li>deploy</li>\n</ol></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 593
	},
	{
		"question" : "52) How to map Faces Servlet instance in JSF (JavaServer Faces) application?",
		"answer" : "<div> <p>The configuration of a JavaServer Faces application is done by mapping the Faces Servlet in the web deployment descriptor file a web.xml.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 594
	},
	{
		"question" : "29) What is the float property of CSS?",
		"answer" : "<div> <p>The CSS float property is used to move the image to the right or left along with the texts to be wrapped around it. It doesn't change the property of the elements used before it.</p><p>To understand its purpose and origin, let's take a look at its print display. In the print display, an image is set into the page such that text wraps around it as needed. </p><img src=\"https://static.javatpoint.com/csspages/images/css-float-print.png\" alt=\"CSS Float Print Layout\"><p>Its web layout is also just similar to print layout.</p><img src=\"https://static.javatpoint.com/csspages/images/css-float-web.png\" alt=\"CSS Float Web Layout\"><br></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 595
	},
	{
		"question" : "53) What are the Facelets Templates?",
		"answer" : "<div> <p>It is a tool which provides the facility to implement the user interface. Templating is a useful Facelets feature that allows you to create a page that will act as the base for the other pages in an application. By using templates, you can reuse code and avoid recreating similar pages again and again.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 596
	},
	{
		"question" : "23) What is the command to package maven project?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">mvn -package\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 597
	},
	{
		"question" : "30) How to restore the default property value using CSS?",
		"answer" : "<div> <p>In short, there is no easy way to restore to default values to whatever a browser uses.</p><p>The closest option is to use the 'initial' property value, which restores the default CSS values, rather than the browser's default styles.</p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 598
	},
	{
		"question" : "11) Define closure.",
		"answer" : "<div> <p>In JavaScript, we need closures when a variable which is defined outside the scope in reference is accessed from some inner scope.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var num = 10;\nfunction sum() \n{\ndocument.writeln(num+num);\n} \nsum();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 599
	},
	{
		"question" : "54) How to create Facelets Templates?",
		"answer" : "<div> <p>Templating is a useful Facelets feature that allows you to create a page that will act as the base for the other pages in an application.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 600
	},
	{
		"question" : "24) What is the fully qualified artifact name of maven project?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;\n</textarea></div></div>",
		"category" : "Java",
		"sub_category" : "Maven",
		"id" : 601
	},
	{
		"question" : "31) What is the purpose of the z-index and how is it used?",
		"answer" : "<div> <p>The z-index helps to specify the stack order of positioned elements that may overlap one another. The z-index default value is zero and can take on either a positive or negative number.</p><p>An element with a higher z-index is always stacked above than a lower index.</p><p>Z-Index can take the following values:</p><ul class=\"points\">\n<li><strong>Auto:</strong> Sets the stack order equal to its parents.</li>\n<li><strong>Number:</strong> Orders the stack order.</li>\n<li><strong>Initial:</strong> Sets this property to its default value (0).</li>\n<li><strong>Inherit:</strong> Inherits this property from its parent element.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 602
	},
	{
		"question" : "12) If we want to return the character from a specific index which method is used?",
		"answer" : "<div> <p>The JavaScript string charAt() method is used to find out a char value present at the specified index. The index number starts from 0 and goes to n-1, where n is the length of the string. The index value can't be a negative, greater than or equal to the length of the string. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var str=\"Javatpoint\";  \ndocument.writeln(str.charAt(4));  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 603
	},
	{
		"question" : "25) What is an archetype?",
		"answer" : "<div> <p>Archetype is the maven plugin. It creates the project structure.</p><br><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Interview Questions</a></td>\n<td><a>Java String &amp; Exception Interview Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><br><br><h1 class=\"h1\">JSF Interview Questions</h1><p>A list of top frequently asked JSF interview questions and answers are given below.\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 604
	},
	{
		"question" : "55) What are the Facelets Composite Components?",
		"answer" : "<div> <p>JSF provides the concept of composite components with Facelets. The Composite component is a special type of template that acts as a component in your application.</p><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 605
	},
	{
		"question" : "13) What is the difference between JavaScript and JScript?",
		"answer" : "<div> <p>Netscape provided the JavaScript language. Microsoft changed the name and called it JScript to avoid the trademark issue. In other words, you can say JScript is the same as JavaScript, but Microsoft provides it.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 606
	},
	{
		"question" : "32) Explain the difference between visibility: hidden and display: none?",
		"answer" : "<div> <p><strong>visibility: hidden</strong> hides the element, but it occupies space and affects the layout of the document.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\nh1.vis {\n    visibility: visible;\n}\n\nh1.hid {\n    visibility: hidden;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1 class=\"vis\"&gt;It is visible&lt;/h1&gt;\n&lt;h1 class=\"hid\"&gt;It is hidden&lt;/h1&gt;\n\n&lt;p&gt;Note - Second heading is hidden, but it still occupy space.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\t </textarea></div><p><strong>display: none</strong> also hides the element but not occupy space. It will not affect the layout of the document.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\nh1.vis {\n    display: block;\n}\n\nh1.hid {\n     display: none;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1 class=\"vis\"&gt;It is visible&lt;/h1&gt;\n&lt;h1 class=\"hid\"&gt;It is hidden&lt;/h1&gt;\n\n&lt;p&gt;Note - Second heading is hidden and not occupy space.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 607
	},
	{
		"question" : "1) What is JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is a server-side component-based user interface framework. It is used to develop web applications. It provides a well-defined programming model and consists of rich API and tag libraries. The latest version JSF 2 uses Facelets as its default templating system.</p><p><strong>For more information:</strong> <a>Click here.</a></p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 608
	},
	{
		"question" : "14) How to write a hello world example of JavaScript?",
		"answer" : "<div> <p>A simple example of JavaScript hello world is given below. You need to place it inside the body tag of HTML.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\"&gt;\ndocument.write(\"JavaScript Hello World!\");\n&lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 609
	},
	{
		"question" : "15) What are the key differences between Java and JavaScript? / How is JavaScript different from Java?",
		"answer" : "<div> <p>JavaScript is a lightweight programming language (most commonly known as scripting language) developed by Netscape, Inc. It is used to make web pages interactive. It is not a part of the Java platform. Following is a list of some key differences between Java and JavaScript</p><p><strong>A list of key differences between Java and JavaScript</strong></p><table class=\"alt\">\n<tbody><tr>\n<th>Java</th>\n<th>JavaScript</th>\n</tr>\n<tr>\n<td>Java is a complete and strongly typed programming language used for backend coding. In Java, variables must be declared first to use in the program, and the type of a variable is checked at compile-time.</td>\n<td>JavaScript is a weakly typed, lightweight programming language (most commonly known as scripting language) and has more relaxed syntax and rules.</td>\n</tr>\n<tr>\n<td>Java is an object-oriented programming (OOPS) language or structured programming languages such as C, C++, or .Net.</td>\n<td>JavaScript is a client-side scripting language, and it doesn't fully support the OOPS concept. It resides inside the HTML documents and is used to make web pages interactive (not achievable with simple HTML).</td>\n</tr>\n<tr>\n<td>Java creates applications that can run in any virtual machine (JVM) or browser.</td>\n<td>JavaScript code can run only in the browser, but it can now run on the server via Node.js.</td>\n</tr>\n<tr>\n<td>The Java code needs to be compiled.</td>\n<td>The JavaScript code doesn't require to be complied.</td>\n</tr>\n<tr>\n<td>Java Objects are class-based. You can't make any program in Java without creating a class.</td>\n<td>JavaScript Objects are prototype-based.</td>\n</tr>\n<tr>\n<td>Java is a Complete and Standalone language that can be used in backend coding.</td>\n<td>JavaScript is assigned within a web page and integrates with its HTML content.</td>\n</tr>\n<tr>\n<td>Java programs consume more memory.</td>\n<td>JavaScript code is used in HTML web pages and requires less memory.</td>\n</tr>\n<tr>\n<td>The file extension of the Java program is written as \".Java\" and it translates source code into bytecodes which are then executed by JVM (Java Virtual Machine).</td>\n<td>The JavaScript file extension is written as \".js\" and it is interpreted but not compiled. Every browser has a JavaScript interpreter to execute the JS code.</td>\n</tr>\n<tr>\n<td>Java supports multithreading.</td>\n<td>JavaScript doesn't support multithreading.</td>\n</tr>\n<tr>\n<td>Java uses a thread-based approach to concurrency.</td>\n<td>JavaScript uses an event-based approach to concurrency.</td>\n</tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 610
	},
	{
		"question" : "16) How to use external JavaScript file?",
		"answer" : "<div> <p> I am assuming that js file name is message.js, place the following script tag inside the head tag.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\" src=\"message.js\"&gt;&lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 611
	},
	{
		"question" : "17) Is JavaScript case sensitive language?",
		"answer" : "<div> <p>Yes, JavaScript is a case sensitive language. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">Var msg = \"JavaScript is a case-sensitive language\"; //Here, var should be used to declare a variable\nfunction display() \n{\ndocument.writeln(msg); // It will not display the result.\n} \ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 612
	},
	{
		"question" : "33) What do you understand by W3C?",
		"answer" : "<div> <p>W3C stands for World Wide Web Consortium. Its purpose is to deliver the information of the World Wide Web. It also develops rules and guidelines for the Web.</p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 613
	},
	{
		"question" : "18) What is BOM?",
		"answer" : "<div> <p><strong>BOM</strong> stands for <em>Browser Object Model</em>. It provides interaction with the browser. The default object of a browser is a window. So, you can call all the functions of the window by specifying the window or directly. The window object provides various properties like document, history, screen, navigator, location, innerHeight, innerWidth,</p><img src=\"images/javascript/bom.jpg\" alt=\"javascript object model\"></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 614
	},
	{
		"question" : "2) What are the benefits of JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It provides a clean and clear separation between behavior and presentation of the web application. You can write business logic and user interface separately.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 615
	},
	{
		"question" : "19) What is DOM? What is the use of document object?",
		"answer" : "<div> <p><strong>DOM</strong> stands for <em>Document Object Model</em>. A document object represents the HTML document. It can be used to access and change the content of HTML.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 616
	},
	{
		"question" : "34) What is tweening?",
		"answer" : "<div> <p>It is the process of generating intermediate frames between two images. </p><p>It gives the impression that the first image has smoothly evolved into the second one. </p><p>It is an important method used in all types of animations. </p><p>In CSS3, Transforms (matrix, translate, rotate, scale) module can be used to achieve tweening.</p></div>",
		"category" : "Web",
		"sub_category" : "CSS",
		"id" : 617
	},
	{
		"question" : "20) What is the use of window object?",
		"answer" : "<div> <p>The window object is created automatically by the browser that represents a window of a browser. It is not an object of JavaScript. It is a browser object. </p><p>The window object is used to display the popup dialog box. Let's see with description.</p><table class=\"alt\">\n<tbody><tr><th>Method</th><th>Description</th></tr>\n<tr><td>alert()</td><td>displays the alert box containing the message with ok button.</td></tr>\n<tr><td>confirm()</td><td>displays the confirm dialog box containing the message with ok and cancel button.</td></tr>\n<tr><td>prompt()</td><td>displays a dialog box to get input from the user.</td></tr>\n<tr><td>open()</td><td>opens the new window.</td></tr>\n<tr><td>close()</td><td>closes the current window.</td></tr>\n<tr><td>setTimeout()</td><td>performs the action after specified time like calling function, evaluating expressions.</td></tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 618
	},
	{
		"question" : "27) How to write normal text code using JavaScript dynamically?",
		"answer" : "<div> <p>The innerText property is used to write the simple text using JavaScript dynamically. Let's see a simple example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">document.getElementById('mylocation').innerText=\"This is text using JavaScript\"; \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 619
	},
	{
		"question" : "21) What is the use of history object?",
		"answer" : "<div> <p>The history object of a browser can be used to switch to history pages such as back and forward from the current page or another page. There are three methods of history object.</p><ol class=\"points\">\n<li>history.back() - It loads the previous page.</li>\n<li>history.forward() - It loads the next page.</li>\n<li>history.go(number) - The number may be positive for forward, negative for backward. It loads the given page number.</li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 620
	},
	{
		"question" : "3) What are the features of JSF (JavaServer Faces)?",
		"answer" : "<div> <p>The latest version of JSF 2.2 provides the following features.</p><ul class=\"points\">\n<li>Component-Based Framework</li>\n<li>Implements Facelets Technology</li>\n<li>Integration with Expression Language </li>\n<li>Support HTML5 </li>\n<li>Ease and Rapid Web Development.</li>\n<li>Support Internationalization</li>\n<li>Bean Annotations</li>\n</ul><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 621
	},
	{
		"question" : "4) Give the system requirements for the JSF use.",
		"answer" : "<div> <p>For using JSF in a computer, the platform needs to have JDK 1.5 or above.</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 622
	},
	{
		"question" : "1) What is JavaScript?",
		"answer" : "<div> <p>The main difference between CSS2 and CSS3 is that CSS3 is divided into different sections which are also known as modules. Unlike CSS2, CSS3 modules are supported by many browsers.</p><p> Apart from that, CSS3 contains new General Sibling Combinators which is responsible for matching the sibling elements with the given elements.</p><br><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Interview Tips</a></td>\n<td><a>Job/HR Interview Questions</a></td></tr>\n<tr><td><a>JavaScript Interview Questions</a></td>\n<td><a>jQuery Interview Questions</a></td></tr>\n<tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><br><br><h1 class=\"h1\">JavaScript Interview Questions</h1><img src=\"https://static.javatpoint.com/interview/images/javascript-interview-questions.png\" alt=\"JavaScript Interview Questions\" class=\"imageright\"><p>JavaScript interview questions and answers for provides a list of top 20 interview questions. The frequently asked JavaScript interview questions with answers for beginners and professionals are given below.</p><p><strong>JavaScript</strong> is <em>a scripting language</em>. It is different from Java language. It is object-based, lightweight, cross-platform translated language. It is widely used for client-side validation. The JavaScript Translator (embedded in the browser) is responsible for translating the JavaScript code for the web browser.<a> More details.</a></p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 623
	},
	{
		"question" : "28) How to create objects in JavaScript?",
		"answer" : "<div> <p>There are 3 ways to create an object in JavaScript.</p><ol class=\"points\">\n<li>By object literal</li>\n<li>By creating an instance of Object</li>\n<li>By Object Constructor</li>\n</ol><p>Let's see a simple code to create an object using object literal.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">emp={id:102,name:\"Rahul Kumar\",salary:50000} \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 624
	},
	{
		"question" : "22) How to write a comment in JavaScript?",
		"answer" : "<div> <p>There are two types of comments in JavaScript.</p><ol class=\"points\">\n<li>Single Line Comment: It is represented by // (double forward slash)</li>\n<li>Multi-Line Comment: Slash represents it with asterisk symbol as /* write comment here */ </li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 625
	},
	{
		"question" : "23) How to create a function in JavaScript?",
		"answer" : "<div> <p>To create a function in JavaScript, follow the following syntax.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">function function_name(){\n//function body\n}\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 626
	},
	{
		"question" : "29) How to create an array in JavaScript?",
		"answer" : "<div> <p>There are 3 ways to create an array in JavaScript.</p><ol class=\"points\">\n<li>By array literal</li>\n<li>By creating an instance of Array</li>\n<li>By using an Array constructor</li>\n</ol><p>Let's see a simple code to create an array using object literal.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var emp=[\"Shyam\",\"Vimal\",\"Ratan\"];  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 627
	},
	{
		"question" : "24) What are the different data types present in JavaScript?",
		"answer" : "<div> <p>There are two types of data types in JavaScript:</p><ul class=\"points\">\n<li>Primitive data types</li>\n<li>Non- Primitive data types</li>\n</ul><p class=\"pq\"><strong>Primitive data types</strong></p><p>The primitive data types are as follows:</p><p><strong>String:</strong> The string data type represents a sequence of characters. It is written within quotes and can be represented using a single or a double quote.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var str1 = \"Hello JavaTpoint\"; //using double quotes\nvar str2 = 'Hello Javatpoint'; //using single quotes\n</textarea></div><p><strong>Number:</strong> The number data type is used to represent numeric values and can be written with or without decimals.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var x = 5; //without decimal\nvar y = 5.0; //with decimal\n</textarea></div><p><strong>Boolean:</strong> The Boolean data type is used to represent a Boolean value, either false or true. This data type is generally used for conditional testing.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var x = 5;\nvar y =  6;\nvar z =  5;\n(x == y) // returns false\n(x == z) //returns true\n</textarea></div><p><strong>BigInt:</strong> The BigInt data type is used to store numbers beyond the Number data type limitation. This data type can store large integers and is represented by adding \"n\" to an integer literal.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var bigInteger =  123456789012345678901234567890;\n// This is an example of bigInteger.\n</textarea></div><p><strong>Undefined:</strong> The Undefined data type is used when a variable is declared but not assigned. The value of this data type is undefined, and its type is also undefined.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var x; // value of x is undefined\nvar y = undefined; // You can also set the value of a variable as undefined.\n</textarea></div><p><strong>Null:</strong> The Null data type is used to represent a non-existent, null, or a invalid value i.e. no value at all.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var  x = null;\n</textarea></div><p><strong>Symbol:</strong> Symbol is a new data type introduced in the ES6 version of JavaScript. It is used to store an anonymous and unique value.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var symbol1 = Symbol('symbol');\n</textarea></div><p><strong>typeof:</strong> The typeof operator is used to determine what type of data a variable or operand contains. It can be used with or without parentheses (typeof(x) or typeof x). This is mainly used in situations when you need to process the values of different types.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">typeof 10;  // Returns: \"number\"\ntypeof 10.0;  // Returns: \"number\"\ntypeof 2.5e-4;  // Returns: \"number\"\ntypeof Infinity;  // Returns: \"number\"\ntypeof NaN;  // Returns: \"number\". Despite being \"Not-A-Number\"\n// Strings\ntypeof '';  // Returns: \"string\"\ntypeof 'Welcome to JavaTpoint';  // Returns: \"string\"\ntypeof '12';  // Returns: \"string\". Number within quotes is typeof string\n// Booleans\ntypeof true;  // Returns: \"boolean\"\ntypeof false;  // Returns: \"boolean\"\n// Undefined\ntypeof undefined;  // Returns: \"undefined\"\ntypeof undeclaredVariable; // Returns: \"undefined\"\n// Null\ntypeof Null;  // Returns: \"object\"\n// Objects\ntypeof {name: \"John\", age: 18};  // Returns: \"object\"\n// Arrays\ntypeof [1, 2, 3];  // Returns: \"object\"\n// Functions\ntypeof function(){};  // Returns: \"function\"\n</textarea></div><p class=\"pq\"><strong>Non-Primitive data types</strong></p><p>In the above examples, we can see that the primitive data types can store only a single value. To store multiple and complex values, we have to use non-primitive data types.</p><p>The non-primitive data types are as follows:</p><p><strong>Object:</strong> The Object is a non-primitive data type. It is used to store collections of data. An object contains properties, defined as a key-value pair. A property key (name) is always a string, but the value can be any data type, such as strings, numbers, Booleans, or complex data types like arrays, functions, and other objects.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">// Collection of data in key-value pairs\nvar obj1 = {\n   x:  123,\n   y:  \"Welcome to JavaTpoint\",\n   z: function(){\n      return this.x;\n   }\n}\n</textarea></div><p><strong>Array:</strong> The Array data type is used to represent a group of similar values. Every value in an array has a numeric position, called its index, and it may contain data of any data type-numbers, strings, Booleans, functions, objects, and even other arrays. The array index starts from 0 so that the first array element is arr[0], not arr[1].</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var colors = [\"Red\", \"Yellow\", \"Green\", \"Orange\"];\nvar cities = [\"Noida\", \"Delhi\", \"Ghaziabad\"];\nalert(colors[2]);   // Output: Green\nalert(cities[1]);   // Output: Delhi\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 628
	},
	{
		"question" : "30) What does the isNaN() function?",
		"answer" : "<div> <p>The isNan() function returns true if the variable value is not a number. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">function number(num) {\n  if (isNaN(num)) {\n    return \"Not a Number\";\n  }\n  return \"Number\";\n}\nconsole.log(number('1000F'));\n// expected output: \"Not a Number\"\n\nconsole.log(number('1000'));\n// expected output: \"Number\"\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 629
	},
	{
		"question" : "2) List some features of JavaScript. ",
		"answer" : "<div> <p>Some of the features of JavaScript are:</p><ul class=\"points\">\n<li>Lightweight</li>\n<li>Interpreted programming language</li>\n<li>Good for the applications which are network-centric</li>\n<li>Complementary to Java</li>\n<li>Complementary to HTML</li>\n<li>Open source</li>\nCross-platform\n</ul></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 630
	},
	{
		"question" : "31) What is the output of 10+20+\"30\" in JavaScript?",
		"answer" : "<div> <p>3030 because 10+20 will be 30. If there is numeric value before and after +, it treats as binary + (arithmetic operator). </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">function display()\n{\n  document.writeln(10+20+\"30\");\n}\ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 631
	},
	{
		"question" : "3) Who developed JavaScript, and what was the first name of JavaScript?",
		"answer" : "<div> <p>JavaScript was developed by Brendan Eich, who was a Netscape programmer. Brendan Eich developed this new scripting language in just ten days in the year September 1995. At the time of its launch, JavaScript was initially called Mocha. After that, it was called Live Script and later known as JavaScript.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 632
	},
	{
		"question" : "25) What is the difference between == and ===?",
		"answer" : "<div> <p>The == operator checks equality only whereas === checks equality, and data type, i.e., a value must be of the same type.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 633
	},
	{
		"question" : "32) What is the output of \"10\"+20+30 in JavaScript?",
		"answer" : "<div> <p>102030 because after a string all the + will be treated as string concatenation operator (not binary +).</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">function display()\n{\n  document.writeln(\"10\"+20+30);\n}\ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 634
	},
	{
		"question" : "26) How to write HTML code dynamically using JavaScript?",
		"answer" : "<div> <p>The innerHTML property is used to write the HTML code using JavaScript dynamically. Let's see a simple example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">document.getElementById('mylocation').innerHTML=\"&lt;h2&gt;This is heading using JavaScript&lt;/h2&gt;\"; \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 635
	},
	{
		"question" : "33) Difference between Client side JavaScript and Server side JavaScript?",
		"answer" : "<div> <p><strong>Client-side JavaScript</strong> comprises the basic language and predefined objects which are relevant to running JavaScript in a browser. The client-side JavaScript is embedded directly by in the HTML pages. The browser interprets this script at runtime.</p><p><strong>Server-side JavaScript</strong> also resembles client-side JavaScript. It has a relevant JavaScript which is to run in a server. The server-side JavaScript are deployed only after compilation.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 636
	},
	{
		"question" : "5) What is the life cycle of JSF (JavaServer Faces)?",
		"answer" : "<div> <p>JavaServer Faces application framework manages lifecycle phases automatically for simple applications and also allows you to manage that manually. The lifecycle of a JavaServer Faces application begins when the client makes an HTTP request for a page and ends when the server responds with the page.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 637
	},
	{
		"question" : "6) How does the execution phase work in JSF (JavaServer Faces) life cycle?",
		"answer" : "<div> <p>In the execute phase, when the first request is made, the application view is built or restored. For other subsequent requests other actions are performed like request parameter values are applied, conversions and validations are performed for component values, managed beans are updated with component values, and application logic is invoked.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 638
	},
	{
		"question" : "34) In which location cookies are stored on the hard disk?",
		"answer" : "<div> <p>The storage of cookies on the hard disk depends on the OS and the browser.</p><p>The Netscape Navigator on Windows uses a cookies.txt file that contains all the cookies. The path is c:\\Program Files\\Netscape\\Users\\username\\cookies.txt</p><p>The Internet Explorer stores the cookies on a file <a class=\"__cf_email__\" data-cfemail=\"30454355425e515d5570475552435944551e4448441e\">[email&nbsp;protected]</a> The path is: c:\\Windows\\Cookies\\<a class=\"__cf_email__\" data-cfemail=\"dbaea8bea9b5bab6be9b8cbeb9a8b2afbef5afa3aff5\">[email&nbsp;protected]</a></p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 639
	},
	{
		"question" : "7) How does render phase work in JSF (JavaServer Faces) life cycle?",
		"answer" : "<div> <p>In this phase, the requested view is rendered as a response to the client browser. View rendering is a process in which output is generated as HTML or XHTML. So, the user can see it on the browser.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 640
	},
	{
		"question" : "35) What's the difference between event.preventDefault() and event.stopPropagation() methods in JavaScript? ",
		"answer" : "<div> <p>In JavaScript, the event.preventDefault() method is used to prevent the default behavior of an element.</p><p><strong>For example:</strong> If you use it in a form element, it prevents it from submitting. If used in an anchor element, it prevents it from navigating. If used in a contextmenu, it prevents it from showing or displaying.</p><p>On the other hand, the event.stopPropagation() method is used to stop the propagation of an event or stop the event from occurring in the bubbling or capturing phase.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 641
	},
	{
		"question" : "8) What is managed bean in JSF (JavaServer Faces)?",
		"answer" : "<div> <p>It is a pure Java class which contains a set of properties and the set of the getter, setter methods.</p><p>Following are the common functions that managed bean methods perform:</p><ul class=\"points\">\n<li>Validating a component's data</li>\n<li>Handling an event fired by a component</li>\n<li>Performing processing to determine the next page to which the application must navigate</li>\n</ul><p><strong>For more information:</strong> <a>Click here</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 642
	},
	{
		"question" : "36) What is the real name of JavaScript?",
		"answer" : "<div> <p>The original name was <strong>Mocha</strong>, a name chosen by Marc Andreessen, founder of Netscape. In September of 1995, the name was changed to LiveScript. In December 1995, after receiving a trademark license from Sun, the name JavaScript was adopted. </p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 643
	},
	{
		"question" : "59) What is the use of a Number object in JavaScript?",
		"answer" : "<div> <p>The JavaScript number object enables you to represent a numeric value. It may be integer or floating-point. JavaScript number object follows the IEEE standard to represent the floating-point numbers.</p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\nvar x=102;//integer value  \nvar y=102.7;//floating point value  \nvar z=13e4;//exponent value, output: 130000  \nvar n=new Number(16);//integer value by number object  \ndocument.write(x+\" \"+y+\" \"+z+\" \"+n);  \n}   \ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 644
	},
	{
		"question" : "37) How can you check if the event.preventDefault() method was used in an element? ",
		"answer" : "<div> <p>When we use the event.defaultPrevent() method in the event object returns a Boolean indicating that the event.preventDefault() was called in a particular element. </p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 645
	},
	{
		"question" : "60) What is the use of a Boolean object in JavaScript?",
		"answer" : "<div> <p>The JavaScript Boolean is an object that represents value in two states: true or false. You can create the JavaScript Boolean object by Boolean() constructor.</p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\ndocument.writeln(10&lt;20);//true  \ndocument.writeln(10&lt;5);//false   \n}   \ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 646
	},
	{
		"question" : "4) List some of the advantages of JavaScript.",
		"answer" : "<div> <p>Some of the advantages of JavaScript are:</p><ul class=\"points\">\n<li>Server interaction is less</li>\n<li>Feedback to the visitors is immediate</li>\n<li>Interactivity is high</li>\n<li>Interfaces are richer</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 647
	},
	{
		"question" : "61) What is the use of a TypedArray object in JavaScript?",
		"answer" : "<div> <p>The JavaScript TypedArray object illustrates an array like a view of an underlying binary data buffer. There is any number of different global properties, whose values are TypedArray constructors for specific element types.</p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\nvar arr1= [1,2,3,4,5,6,7,8,9,10];   \n       arr1.copyWithin(2) ; \n       document.write(arr1);  \n}\ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 648
	},
	{
		"question" : "38) What is the difference between undefined value and null value?",
		"answer" : "<div> <p><strong>Undefined value:</strong> A value that is not defined and has no keyword is known as undefined value. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">int number;//Here, a number has an undefined value.\n</textarea></div><p><strong>Null value:</strong> A value that is explicitly specified by the keyword \"null\" is known as a null value. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">String str=null;//Here, str has a null value.\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 649
	},
	{
		"question" : "9) How to configure managed bean in the XML file?",
		"answer" : "<div> <p>In this case, we configure bean-name, bean-class, and bean-scope in the XML file to make it accessible in the project. This is an older approach to configure bean into an XML file.</p><p><strong>For more information:</strong> <a>Click here.</a>\n</p></div>",
		"category" : "Java",
		"sub_category" : "JSF",
		"id" : 650
	},
	{
		"question" : "5) List some of the disadvantages of JavaScript.",
		"answer" : "<div> <p>Some of the disadvantages of JavaScript are:</p><ul class=\"points\">\n<li>No support for multithreading</li>\n<li>No support for multiprocessing</li>\n<li>Reading and writing of files is not allowed</li>\n<li>No support for networking applications.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 651
	},
	{
		"question" : "39) How to set the cursor to wait in JavaScript?",
		"answer" : "<div> <p>The cursor can be set to wait in JavaScript by using the property \"cursor\". The following example illustrates the usage:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script&gt;\nwindow.document.body.style.cursor = \"wait\"; \n&lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 652
	},
	{
		"question" : "40) What is this [[[]]]?",
		"answer" : "<div> <p>This is a three-dimensional array.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var myArray = [[[]]];\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 653
	},
	{
		"question" : "41) Are Java and JavaScript same?",
		"answer" : "<div> <p>No, Java and JavaScript are the two different languages. Java is a robust, secured and object-oriented programming language whereas JavaScript is a client-side scripting language with some limitations.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 654
	},
	{
		"question" : "6) Define a named function in JavaScript. ",
		"answer" : "<div> <p>The function which has named at the time of definition is called a named function. For example </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">function msg()\n{\n  document.writeln(\"Named Function\");\n}\nmsg();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 655
	},
	{
		"question" : "42) What is negative infinity?",
		"answer" : "<div> <p>Negative Infinity is a number in JavaScript which can be derived by dividing the negative number by zero. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var num=-5;\nfunction display()\n{\n  document.writeln(num/0);\n}\ndisplay();\n//expected output: -Infinity\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 656
	},
	{
		"question" : "7) Name the types of functions ",
		"answer" : "<div> <p>The types of function are:</p><ul class=\"points\">\n<li>Named - These type of functions contains name at the time of definition. For Example:</li>\n<div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">function display()\n{\n  document.writeln(\"Named Function\");\n}\ndisplay();\n</textarea></div>\n<li>Anonymous - These type of functions doesn't contain any name. They are declared dynamically at runtime.</li>\n<div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var display=function()\n{\n  document.writeln(\"Anonymous Function\");\n}\ndisplay();\n</textarea></div>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 657
	},
	{
		"question" : "43) What is the difference between View state and Session state?",
		"answer" : "<div> <p>\"View state\" is specific to a page in a session whereas \"Session state\" is specific to a user or browser that can be accessed across all pages in the web application.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 658
	},
	{
		"question" : "44) What are the pop-up boxes available in JavaScript?",
		"answer" : "<div> <ul class=\"points\">\n<li>Alert Box</li>\n<li>Confirm Box</li>\n<li>Prompt Box</li>\n</ul><h4 class=\"h4\">Example of alert() in JavaScript</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\"&gt;\nfunction msg(){\n alert(\"Hello Alert Box\");\n}\n&lt;/script&gt;\n&lt;input type=\"button\" value=\"click\" onclick=\"msg()\"/&gt;\n</textarea></div><h4 class=\"h4\">Example of confirm() in JavaScript</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\"&gt;\nfunction msg(){\nvar v= confirm(\"Are u sure?\");\nif(v==true){\nalert(\"ok\");\n}\nelse{\nalert(\"cancel\");\n}\n\n}\n&lt;/script&gt;\n\n&lt;input type=\"button\" value=\"delete record\" onclick=\"msg()\"/&gt;\n</textarea></div><h4 class=\"h4\">Example of prompt() in JavaScript</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\"&gt;\nfunction msg(){\nvar v= prompt(\"Who are you?\");\nalert(\"I am \"+v);\n\n}\n&lt;/script&gt;\n\n&lt;input type=\"button\" value=\"click\" onclick=\"msg()\"/&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 659
	},
	{
		"question" : "22) What is the goal of CDN and what are the advantages of using CDN?",
		"answer" : "<div> <p>The primary goal of the CDN is to provide content to the end-users with high availability and high performance. </p><p><strong>Advantages of using CDN:</strong></p><ul class=\"points\">\n<li>It reduces the load from the server.</li>\n<li>It saves bandwidth. jQuery framework is loaded faster from these CDN.</li>\n<li>If a user regularly visits a site which is using jQuery framework from any of these CDN, it will be cached. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 660
	},
	{
		"question" : "45) How can we detect OS of the client machine using JavaScript?",
		"answer" : "<div> <p>The <strong>navigator.appVersion</strong> string can be used to detect the operating system on the client machine.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 661
	},
	{
		"question" : "23) How can you use a jQuery library in your project?",
		"answer" : "<div> <p>You can use a jQuery library in the ASP.Net project from downloading the latest jQuery library from jQuery.com and include the references to the jQuery library file in your HTML/PHP/JSP/Aspx page. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script src=\"_scripts/jQuery-1.2.6.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n&lt;script language=\"javascript\"&gt; \n$(document).ready(function() { \nalert('test'); \n}); \n&lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 662
	},
	{
		"question" : "46) How to submit a form using JavaScript by clicking a link?",
		"answer" : "<div> <p>Let's see the JavaScript code to submit the form by clicking the link.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;form name=\"myform\" action=\"index.php\"&gt;\nSearch: &lt;input type='text' name='query' /&gt;\n&lt;a href=\"javascript: submitform()\"&gt;Search&lt;/a&gt;\n&lt;/form&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction submitform()\n{\n  document.myform.submit();\n}\n&lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 663
	},
	{
		"question" : "62) What is the use of a Set object in JavaScript?",
		"answer" : "<div> <p>The JavaScript Set object is used to store the elements with unique values. The values can be of any type i.e. whether primitive values or object references. For example:</p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\nvar set = new Set();  \nset.add(\"jQuery\");  \nset.add(\"AngularJS\");  \nset.add(\"Bootstrap\");  \nfor (let elements of set) {  \n document.writeln(elements+\"&lt;br&gt;\");  \n}   \n}\ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 664
	},
	{
		"question" : "12) What are the basic rules to write XML document?",
		"answer" : "<div> <p>You should consider the following rules to write an XML document.</p><ul class=\"points\">\n<li>It should have a root element.</li>\n<li>All tags must be closed.</li>\n<li>Spaces are not allowed in tag names.</li>\n<li>All tags must be nested properly.</li>\n<li>XML tags are case sensitive.</li>\n<li>Use the attribute values within quotes.</li>\n<li>Whitespace is preserved in XML. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 665
	},
	{
		"question" : "24) What are the selectors in jQuery? How many types of selectors in jQuery?",
		"answer" : "<div> <p>If you want to work with an element on the web page, first you need to find it. Selectors find the HTML elements in jQuery. There are many types of selectors. Some basic selectors are:</p><ul class=\"points\">\n<li><strong>Name:</strong> It is used to select all elements which match with the given element Name.</li>\n<li><strong>#ID:</strong> It is used to select a single element which matches with the given ID</li>\n<li><strong>.Class:</strong> It is used to select all elements which match with the given Class.</li>\n<li><strong>Universal (*):</strong> It is used to select all elements available in a DOM.</li>\n<li><strong>Multiple Elements E, F, G:</strong> It is used to selects the combined results of all the specified selectors E, F or G.</li>\n<li><strong>Attribute Selector:</strong> It is used to select elements based on its attribute value.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 666
	},
	{
		"question" : "63) What is the use of a WeakSet object in JavaScript?",
		"answer" : "<div> <p>The JavaScript WeakSet object is the type of collection that allows us to store weakly held objects. Unlike Set, the WeakSet are the collections of objects only. It doesn't contain the arbitrary values. For example:</p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\nvar ws = new WeakSet();  \nvar obj1={};  \nvar obj2={};  \nws.add(obj1);  \nws.add(obj2);  \n//Let's check whether the WeakSet object contains the added object  \ndocument.writeln(ws.has(obj1)+\"&lt;br&gt;\");  \ndocument.writeln(ws.has(obj2));   \n}   \ndisplay()\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 667
	},
	{
		"question" : "25) What is a use of jQuery filter?",
		"answer" : "<div> <p>: jQuery filter is used to filter the specific values from the object. It filters the result of your original query into specific elements. </p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 668
	},
	{
		"question" : "64) What is the use of a Map object in JavaScript?",
		"answer" : "<div> <p>The JavaScript Map object is used to map keys to values. It stores each element as key-value pair. It operates the elements such as search, update and delete on the basis of specified key. For example:</p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\nvar map=new Map();  \nmap.set(1,\"jQuery\");  \nmap.set(2,\"AngularJS\");  \nmap.set(3,\"Bootstrap\");  \ndocument.writeln(map.get(1)+\"&lt;br&gt;\");  \ndocument.writeln(map.get(2)+\"&lt;br&gt;\");  \ndocument.writeln(map.get(3));  \n}\ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 669
	},
	{
		"question" : "47) Is JavaScript faster than ASP script?",
		"answer" : "<div> <p>Yes, because it doesn't require web server's support for execution.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 670
	},
	{
		"question" : "65) What is the use of a WeakMap object in JavaScript?",
		"answer" : "<div> <p>The JavaScript WeakMap object is a type of collection which is almost similar to Map. It stores each element as a key-value pair where keys are weakly referenced. Here, the keys are objects and the values are arbitrary values. For example:</p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\nvar wm = new WeakMap();  \nvar obj1 = {};  \nvar obj2 = {};  \nvar obj3= {};  \nwm.set(obj1, \"jQuery\");  \nwm.set(obj2, \"AngularJS\");  \nwm.set(obj3,\"Bootstrap\");  \ndocument.writeln(wm.has(obj2));   \n}   \ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 671
	},
	{
		"question" : "26) What are the different types of selectors in jQuery?",
		"answer" : "<div> <p>There are three types of selectors in jQuery:</p><ul class=\"points\">\n<li>CSS Selector</li>\n<li>Custom Selector</li>\n<li>XPath Selector</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 672
	},
	{
		"question" : "48) How to change the background color of HTML document using JavaScript?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\"&gt;\ndocument.body.bgColor=\"pink\";\n&lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 673
	},
	{
		"question" : "66) What are the falsy values in JavaScript, and how can we check if a value is falsy?",
		"answer" : "<div> <p>Those values which become false while converting to Boolean are called falsy values. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">const falsyValues = ['', 0, null, undefined, NaN, false]; \n</textarea></div><p>We can check if a value is falsy by using the Boolean function or the Double NOT operator (!!). </p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 674
	},
	{
		"question" : "27) What is the difference between the ID selector and class selector in jQuery?",
		"answer" : "<div> <p>ID selector and class selector are the same as they are in CSS. ID selector uses ID while class selector uses a class to select elements. </p><p>You use an ID selector to select just one element. If you want to select a group of elements, having the same CSS class, use class selector.\n</p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 675
	},
	{
		"question" : "67) What do you understand by hoisting in JavaScript?",
		"answer" : "<div> <p>Hoisting is the default behavior of JavaScript where all the variable and function declarations are moved on top. In simple words, we can say that Hoisting is a process in which, irrespective of where the variables and functions are declared, they are moved on top of the scope. The scope can be both local and global.</p><p><strong>Example 1:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">hoistedVariable = 12;\nconsole.log(hoistedVariable); // outputs 12 even when the variable is declared after it is initialized\t\nvar hoistedVariable;\n</textarea></div><p><strong>Example2:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">hoistedFunction();  // Outputs \" Welcome to JavaTpoint \" even when the function is declared after calling\nfunction hoistedFunction(){ \n  console.log(\" Welcome to JavaTpoint \");\n}\nExample3:\n// Hoisting in a local scope \nfunction doSomething(){\n  x = 11;\n  console.log(x);\n  var x;\n}\ndoSomething(); // Outputs 11 since the local variable \"x\" is hoisted inside the local scope\n</textarea></div><h2 class=\"h2padding\">JavaScript MCQ</h2><p class=\"pq\">1) Which of the following statement is true?</p><ol class=\"pointsa\">\n<li>If onKeyDown returns false, the key-up event is canceled.</li>\n<li>If onKeyDown returns false, the key-press event is canceled.</li>\n<li>If onKeyPress returns false, the key-down event is canceled.</li>\n<li>If onKeyPress returns false, the key-up event is canceled.</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(1)\"><span id=\"btntext1\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(1)\"><span id=\"btntext1\">Workspace</span></button><div id=\"workspace1\"></div><div class=\"testanswer\" id=\"answer1\">\n<p><strong>Answer:</strong> B is the correct option. </p>\n</div><p class=\"pq\">2) Which of the following statement shows the primary difference between JavaScript and Java?</p><ol class=\"pointsa\">\n<li>There is no difference between JavaScript and Java.</li>\n<li>Functions are considered as fields.</li>\n<li>Variables are specific.</li>\n<li>Functions are values, and there is no such distinction between methods and fields.</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(2)\"><span id=\"btntext2\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(2)\"><span id=\"btntext2\">Workspace</span></button><div id=\"workspace2\"></div><div class=\"testanswer\" id=\"answer2\">\n<p><strong>Answer:</strong> D is the correct option. We know that Java is an OOP language while JavaScript is an OOP scripting language. The most fundamental difference between JavaScript and Java is that the functions are values, and there is no such distinction between methods and fields. </p>\n</div><p class=\"pq\">3) Which of the following syntax is valid for creating a RegExp object?</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">1. var txt=new RegExp(pattern,attributes);\n2. var txt=/pattern/attributes;\n</textarea></div><ol class=\"pointsa\">\n<li>Only 1 syntax</li>\n<li>Only 2 syntax</li>\n<li>Both 1 and 2 syntax</li>\n<li>None of the above</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(3)\"><span id=\"btntext3\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(3)\"><span id=\"btntext3\">Workspace</span></button><div id=\"workspace3\"></div><div class=\"testanswer\" id=\"answer3\">\n<p><strong>Answer:</strong> C: Both the statements are correct and can be used for creating a RegExp object. </p>\n</div><p class=\"pq\">4) Which of the following statement specifies the meaning of Augmenting classes?</p><ol class=\"pointsa\">\n<li>Objects inherit prototype properties even in a dynamic state.</li>\n<li>Objects inherit prototype properties only in a dynamic state.</li>\n<li>Objects inherit prototype properties in the static state.</li>\n<li>An object doesn't inherit prototype properties in the static state.</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(4)\"><span id=\"btntext4\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(4)\"><span id=\"btntext4\">Workspace</span></button><div id=\"workspace4\"></div><div class=\"testanswer\" id=\"answer4\">\n<p><strong>Answer:</strong> A: \"Objects inherit prototype properties even in a dynamic state\" is the correct answer. </p>\n</div><p class=\"pq\">5) If para1 is the DOM object for a paragraph, which of the following would be the correct syntax to change the text within the paragraph?</p><ol class=\"pointsa\">\n<li>para1=\"New Text\"</li>\n<li>firstChild.nodeValue= \"New Text\";</li>\n<li>value=\"New Text\";</li>\n<li>nodeValue=\"New Text\";</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(5)\"><span id=\"btntext5\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(5)\"><span id=\"btntext5\">Workspace</span></button><div id=\"workspace5\"></div><div class=\"testanswer\" id=\"answer5\">\n<p><strong>Answer:</strong> C: \"para1.value=\"New Text\";\" is the correct syntax to change the text within the paragraph. </p>\n</div><p class=\"pq\">6) Which of the following is used to define the behavior of the instances present of a class inside a method?</p><ol class=\"pointsa\">\n<li>Method</li>\n<li>Classes</li>\n<li>Interfaces</li>\n<li>Classes and Interfaces</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(6)\"><span id=\"btntext6\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(6)\"><span id=\"btntext6\">Workspace</span></button><div id=\"workspace6\"></div><div class=\"testanswer\" id=\"answer6\">\n<p><strong>Answer:</strong> B: \"Classes\" is the correct answer. The class's behavior is defined by the class and is shared by all instances.</p>\n</div><p class=\"pq\">7) Which of the following statement is true in the case of the property of the JSON() method?</p><ol class=\"pointsa\">\n<li>A JSON() method can be invoked manually as object.JSON()</li>\n<li>A JSON() method is invoked automatically by the JSON.stringify() method</li>\n<li>A JSON() method is automatically invoked by the compiler.</li>\n<li>A JSON() method cannot be invoked in any form.</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(7)\"><span id=\"btntext7\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(7)\"><span id=\"btntext7\">Workspace</span></button><div id=\"workspace7\"></div><div class=\"testanswer\" id=\"answer7\">\n<p><strong>Answer:</strong> B is the correct option. The JSON() method is most commonly used to exchange data to/from a web server. When we send data to a web server, the data has to be a string. In this case, json.strigify() is used to convert a JavaScript object into a string. </p>\n</div><p class=\"pq\">8) Which of the following statement is true if class B can extend another class A?</p><ol class=\"pointsa\">\n<li>A is the superclass, and B is the subclass.</li>\n<li>B is the superclass, and A is the subclass.</li>\n<li>Both A and B are the superclass.</li>\n<li>Both A and B are subclass.</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(8)\"><span id=\"btntext8\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(8)\"><span id=\"btntext8\">Workspace</span></button><div id=\"workspace8\"></div><div class=\"testanswer\" id=\"answer8\">\n<p><strong>Answer:</strong> A: \"A is the superclass and B is the subclass\" is the correct answer. A class is called a superclass if it can define a subclass. Subclasses are also called extensions of a superclass.</p>\n</div><p class=\"pq\">9) Which of the following is the correct syntax of the eval() function?</p><ol class=\"pointsa\">\n<li>[objectName.]eval(numeric)</li>\n<li>[EvalName.]eval(string)</li>\n<li>[EvalName.]eval(numeric)</li>\n<li>[objectName.]eval(string)</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(9)\"><span id=\"btntext9\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(9)\"><span id=\"btntext9\">Workspace</span></button><div id=\"workspace9\"></div><div class=\"testanswer\" id=\"answer9\">\n<p><strong>Answer:</strong> D is the correct option. The eval() function is used to evaluate or execute an argument. If the argument is an expression, the eval() function evaluates the expression. If the argument is one or more JavaScript statements, the eval() function executes the statements. </p>\n</div><p class=\"pq\">10) What would be the output of the following JavaScript code?</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">const obj1 = \n{  \n\ta: 10,  \n  \tb: 15,  \n  \tc: 18  \n};  \nconst obj2 = Object.assign({c: 11, d: 12}, obj1);  \nconsole.log(obj2.c, obj2.d); \n</textarea></div><ol class=\"pointsa\">\n<li>10, 12</li>\n<li>11, 12</li>\n<li>Undefined</li>\n<li>Error</li>\n</ol><button class=\"showanswer\" onclick=\"showhide(10)\"><span id=\"btntext10\">Show Answer</span></button><button class=\"workspace\" onclick=\"showworkspace(10)\"><span id=\"btntext10\">Workspace</span></button><div id=\"workspace10\"></div><div class=\"testanswer\" id=\"answer10\">\n<p><strong>Answer:</strong> B: 11, 12 is the correct answer. The Object.assign() method is used to copy the properties and values of one object to another. </p>\n</div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 676
	},
	{
		"question" : "49) How to handle exceptions in JavaScript?",
		"answer" : "<div> <p>By the help of try/catch block, we can handle exceptions in JavaScript. JavaScript supports try, catch, finally and throw keywords for exception handling.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 677
	},
	{
		"question" : "28) What is the use of serialize() method in JQuery?",
		"answer" : "<div> <p>The jQuery serialize() method is used to create a text string in standard URL-encoded notation. It serializes the form values so that its serialized values can be used in the URL query string while making an AJAX request.</p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(document).ready(function(){  \n    $(\"button\").click(function(){  \n        $(\"div\").text($(\"form\").serialize());  \n    });  \n});   \n</textarea></div><p>For complete example: <a>Click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 678
	},
	{
		"question" : "1) What is jQuery?",
		"answer" : "<div> <img src=\"https://static.javatpoint.com/interview/images/jquery-interview-questions.png\" alt=\"jQuery Interview Questions\" class=\"imageright\"><h1 class=\"h1\">jQuery Interview Question</h1><p>A list of top frequently asked <strong>jQuery interview questions</strong> and answers are given below. </p><p>jQuery is a fast, lightweight, feature-rich client-side JavaScript library. It is cross-platform and supports different types of browsers. It has provided a much-needed boost to JavaScript. Before jQuery, JavaScript codes were lengthy and bigger, even for smaller functions. It makes a website more interactive and attractive.</p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 679
	},
	{
		"question" : "29) What is the use of val() method in JQuery?",
		"answer" : "<div> <p>The jQuery val() method is used:</p><ul class=\"points\">\n<li>To get the current value of the first element in the set of matched elements.</li>\n<li>To set the value of every matched element.</li>\n</ul><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(selector).val()\n</textarea></div><p>For complete example: <a>Click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 680
	},
	{
		"question" : "50) How to validate a form in JavaScript?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script&gt;\nfunction validateform(){\nvar name=document.myform.name.value;\nvar password=document.myform.password.value;\n\nif (name==null || name==\"\"){\n  alert(\"Name can't be blank\");\n  return false;\n}else if(password.length&lt;6){\n  alert(\"Password must be at least 6 characters long.\");\n  return false;\n  }\n}\n&lt;/script&gt;\n&lt;body&gt;\n&lt;form name=\"myform\" method=\"post\" action=\"abc.jsp\" onsubmit=\"return validateform()\" &gt;\nName: &lt;input type=\"text\" name=\"name\"&gt;&lt;br/&gt;\nPassword: &lt;input type=\"password\" name=\"password\"&gt;&lt;br/&gt;\n&lt;input type=\"submit\" value=\"register\"&gt;\n&lt;/form&gt;\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Visit here: <a target=\"_blank\">JavaScript form validation</a>.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 681
	},
	{
		"question" : "30) How to add and remove CSS classes to an element using jQuery?",
		"answer" : "<div> <p>You can use addclass() jQuery method to add CSS class to an element and removeclass() jQuery method to remove CSS class from an element.</p><h4 class=\"h4\"> CSS addClass() Example</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">&lt;!DOCTYPE html&gt;  \n&lt;html&gt;  \n&lt;head&gt;  \n &lt;title&gt;jQuery Example&lt;/title&gt;  \n&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"&gt;  \n &lt;/script&gt;  \n &lt;script type=\"text/javascript\" language=\"javascript\"&gt;  \n$(document).ready(function()\n{\n$(\"#btn\").click(function()\n{\n    $(\"#para\").addClass(\"change\");\n});\n});\n &lt;/script&gt;  \n&lt;style&gt;\n    .change\n    {\n        color:blue;\n    }\n&lt;/style&gt;\n &lt;/head&gt;  \n&lt;body&gt;  \n&lt;p id=\"para\"&gt;This method adds CSS class from an element&lt;/p&gt;  \n&lt;input type=\"button\" id=\"btn\" value=\"Click me\"&gt; \n&lt;/body&gt;  \n&lt;/html&gt;  \n</textarea></div><h4 class=\"h4\"> CSS removeClass() Example</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">&lt;!DOCTYPE html&gt;  \n&lt;html&gt;  \n&lt;head&gt;  \n &lt;title&gt;jQuery Example&lt;/title&gt;  \n&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"&gt;  \n &lt;/script&gt;  \n &lt;script type=\"text/javascript\" language=\"javascript\"&gt;  \n$(document).ready(function()\n{\n$(\"#btn\").click(function()\n{\n    $(\"p\").removeClass(\"change\");\n});\n});\n &lt;/script&gt;  \n&lt;style&gt;\n    .change\n    {\n        color:blue;\n    }\n&lt;/style&gt;\n &lt;/head&gt;  \n&lt;body&gt;  \n&lt;p class=\"change\"&gt;This method removes CSS class to an element&lt;/p&gt;  \n&lt;input type=\"button\" id=\"btn\" value=\"Click me\"&gt; \n&lt;/body&gt;  \n&lt;/html&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 682
	},
	{
		"question" : "31) Can you write a jQuery code to select all links inside the paragraph?",
		"answer" : "<div> <p>Yes. You can use &lt;a&gt; tag nested inside paragraph &lt;p&gt; tag to select all links. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">&lt;!DOCTYPE html&gt;  \n&lt;html&gt;  \n&lt;head&gt;  \n &lt;title&gt;jQuery Example&lt;/title&gt;  \n&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"&gt;  \n &lt;/script&gt;  \n &lt;script type=\"text/javascript\" language=\"javascript\"&gt;  \n$(document).ready(function()\n{\n    $(\"p a\").attr(\"href\", \"https://www.javatpoint.com\");\n});\n &lt;/script&gt;  \n &lt;/head&gt;  \n&lt;body&gt;  \n    &lt;p&gt;&lt;a&gt;Learn JavaScript&lt;/a&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;a&gt;Learn jQuery&lt;/a&gt;&lt;/p&gt; \n&lt;/body&gt;   \n&lt;/html&gt;  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 683
	},
	{
		"question" : "2) Is jQuery a programming language?",
		"answer" : "<div> <p>jQuery is not a programming language but a well-written JavaScript code. It is used to traverse documents, event handling, Ajax interaction, and Animation. </p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 684
	},
	{
		"question" : "32) What is the difference between prop and attr?",
		"answer" : "<div> <p><strong>attr():</strong> It gets the value of an attribute for the first element in the set of matched element. </p><p><strong>prop():</strong> it gets the value of a property for the first element in the set of matched elements. It is introduced in jQuery 1.6. </p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 685
	},
	{
		"question" : "13) What is XSL?",
		"answer" : "<div> <p><strong>XSL</strong> stands for Extensible Stylesheet Language. It is a language for expressing stylesheets. These stylesheets are like CSS which describes how to display an XML document of a given type. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 686
	},
	{
		"question" : "3) What is the difference between JavaScript and jQuery?",
		"answer" : "<div> <p>The simple difference is that JavaScript is a language while jQuery is a built-in library built for JavaScript. jQuery simplifies the use of JavaScript language. </p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 687
	},
	{
		"question" : "51) How to validate email in JavaScript?",
		"answer" : "<div> <div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script&gt;\nfunction validateemail()\n{\nvar x=document.myform.email.value;\nvar atposition=x.indexOf(\"@\");\nvar dotposition=x.lastIndexOf(\".\");\nif (atposition&lt;1 || dotposition&lt;atposition+2 || dotposition+2&gt;=x.length){\n  alert(\"Please enter a valid e-mail address \\n atpostion:\"+atposition+\"\\n dotposition:\"+dotposition);\n  return false;\n  }\n}\n&lt;/script&gt;\n&lt;body&gt;\n&lt;form name=\"myform\"  method=\"post\" action=\"#\" onsubmit=\"return validateemail();\"&gt;\nEmail: &lt;input type=\"text\" name=\"email\"&gt;&lt;br/&gt;\n\n&lt;input type=\"submit\" value=\"register\"&gt;\n&lt;/form&gt;\n</textarea></div><span class=\"testit\"><a target=\"_blank\">Test it Now</a></span><p>Visit here: <a target=\"_blank\">JavaScript Email validation</a>.</p></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 688
	},
	{
		"question" : "33) What are the two types of CDNs?",
		"answer" : "<div> <p>There are two types of CDN:</p><ul class=\"points\">\n<li><strong>Microsoft:</strong> It loads jQuery from AJAX CDN.</li>\n<li><strong>Google:</strong> It loads jQuery from Google libraries API.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 689
	},
	{
		"question" : "4) Is jQuery replacement of JavaScript?",
		"answer" : "<div> <p>No, jQuery is not the replacement of JavaScript. jQuery is written on the top of JavaScript, and it is a different library. jQuery is a lightweight JavaScript library which is used to interact with JavaScript and HTML. </p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 690
	},
	{
		"question" : "14) What is XPath in XML?",
		"answer" : "<div> <p><strong>XPath</strong> is a technology used in XML. It is used <em>to retrieve elements from XML documents</em>. XPath expressions can be used to locate and retrieve elements, attributes and values from XML files because XML documents are structured. It is similar to SQL.</p><p>As SQL is used to retrieve data from database, XPath is used to retrieve data from XML. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 691
	},
	{
		"question" : "52) What is this keyword in JavaScript?",
		"answer" : "<div> <p>The this keyword is a reference variable that refers to the current object. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var address=  \n{  \ncompany:\"Javatpoint\",  \ncity:\"Noida\",  \nstate:\"UP\",  \nfullAddress:function()  \n{  \nreturn this.company+\" \"+this.city+\" \"+this.state;  \n}  \n};  \nvar fetch=address.fullAddress();  \ndocument.writeln(fetch);  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 692
	},
	{
		"question" : "34) What is the use of the animate() method in jQuery?",
		"answer" : "<div> <p>The animate function is used to apply the custom animation effect to elements. Syntax:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(selector).animate({params}, [duration], [easing], [callback])\n</textarea></div><p>Here,</p><ul class=\"points\">\n<li>\"param\" defines the CSS properties on which you want to apply the animation.</li>\n<li>\"duration\" specify how long the animation run. It can be one of the following values: \"slow,\" \"fast,\" \"normal\" or milliseconds</li>\n<li>\"easing\" is the string which specifies the function for the transition.</li>\n<li>\"callback\" is the function which we want to run once the animation effect is complete. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 693
	},
	{
		"question" : "5) Why do we use jQuery?",
		"answer" : "<div> <ul class=\"points\">\n<li>It is very easy to learn and use.</li>\n<li>It is used to develop browser compatible web applications.</li>\n<li>It improves the performance of an application. </li>\n<li>It is very fast and extensible. </li>\n<li>It facilitates you to write minimal lines of codes for UI related functions.</li>\n<li>It provides cross-browser support.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 694
	},
	{
		"question" : "15) What is XSLT?",
		"answer" : "<div> <p><strong>XSLT</strong> is a popular XML technology which is used <em>to transform one XML file to other format like HTML</em> etc. XSLT is like a language which has its own syntax, functions and operator to transform XML documents. XSLT is also used to display data present in XML files as HTML pages. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 695
	},
	{
		"question" : "6) What is $() in jQuery library?",
		"answer" : "<div> <p>The $() function is an alias of jQuery() function. It is used to wrap any object into jQuery object which later facilitates you to call the various method defined jQuery object. You can pass a selector string to $() function, and it returns a jQuery object which contains an array of all matched DOM elements.</p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"java\"> $(document).ready(function() {\n $(\"p\").css(\"background-color\", \"pink\");\n });\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 696
	},
	{
		"question" : "1) What is XML?",
		"answer" : "<div> <p>By using jQuery property \"jQuery.fx.off\" and setting it to true, you can disable jQuery animation.</p><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Interview Questions</a></td>\n<td><a>Java String &amp; Exception Interview Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><br><br><img src=\"https://static.javatpoint.com/interview/images/xml-interview-questions.png\" alt=\"XML Interview Questions\" class=\"imageright\"><h1 class=\"h1\">XML Interview Questions</h1><p>There is given XML interview questions and answers that has been asked in many companies. Let's see the list of top 25 XML interview questions.</p><p><strong>XML</strong> stands for <em>eXtensible Markup Language</em>. It is a simple and flexible markup language. It is known as universal language for data on the web because XML documents can be created and used in any language. It is universal standard for information interchange. </p><p>XML technology facilitates you to create your own markup language. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 697
	},
	{
		"question" : "7) What are the effects methods used in jQuery?",
		"answer" : "<div> <p>These are some effects methods used in jQuery:</p><ul class=\"points\">\n<li>show() - It displays or shows the selected elements.</li>\n<li>hide() - It hides the matched or selected elements.</li>\n<li>toggle() - It shows or hides the matched elements. In other words, it toggles between the hide() and shows() methods.</li>\n<li>fadeIn() - It shows the matched elements by fading it to opaque. In other words, it fades in the selected elements.</li>\n<li>fadeOut() - It shows the matched elements by fading it to transparent. In other words, it fades out the selected elements.</li>\n</ul><img src=\"jquerypages/images/jquery-effects.png\" alt=\"jquery effects\"></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 698
	},
	{
		"question" : "16) What is the difference between XML DTD and XML schema or XSD?",
		"answer" : "<div> <p>XSL stands for Extensible Stylesheet Language. It is a language for expressing stylesheets. These stylesheets are like CSS which describes how to display an XML document of a given type. </p><ul class=\"points\">\n<li>DTD stands for Document Type Definition whereas XSD stands for XML Schema Definition.</li>\n<li>DTD does not support namespaces. It has its own set of keywords to define a schema whereas XSD uses its own set of namespaces and elements to define the schema.</li>\n<li>DTD is the predecessor of XML schema whereas XML schema is a new technology, some XML parser do not support it yet. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 699
	},
	{
		"question" : "2) How XML is different from HTML?",
		"answer" : "<div> <p>HTML stands for Hyper Text Markup Language while XML stands for eXtensible Markup Language. The key differences between HTML and XML are given below:</p><table class=\"alt\">\n<tbody><tr><th>No.</th><th>HTML</th><th>XML</th></tr>\n<tr><td>1)</td><td>HTML is used <strong>to display data</strong> and focuses on how data looks.</td><td>XML is a software and hardware independent tool used <strong>to transport and store data</strong>. It focuses on what data is.</td></tr>\n<tr><td>2)</td><td>HTML is a <strong>markup language</strong> itself.</td><td>XML provides a <strong>framework to define markup languages</strong>.</td></tr>\n<tr><td>3)</td><td>HTML is <strong>not case sensitive</strong>.</td><td>XML is <strong>case sensitive</strong>.</td></tr>\n<tr><td>4)</td><td>HTML is a presentation language.</td><td>XML is neither a presentation language nor a programming language.</td></tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 700
	},
	{
		"question" : "17) Is XML meant to be a replacement of HTML?",
		"answer" : "<div> <p>No, both languages have their own specification and used for different purposes. XML is used to describes data while HTML focus on how to display data.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 701
	},
	{
		"question" : "3) What is the meaning of version in XML?",
		"answer" : "<div> <p>Version is a tag used to show which version of XML is used.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 702
	},
	{
		"question" : "18) Define element and attribute in an XML document.",
		"answer" : "<div> <p>From a start tag to end tag everything you see in a XML document, is XML element. It can contain other elements, attributes and texts.</p><p>An Attribute is a value that is used to define additional information about the element. </p><p>Let's take an example to understand it well: </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;librarymembers&gt;\n  &lt;student id=\"001\"&gt;\n     &lt;name&gt;Vimal&lt;/name&gt;\n     &lt;age&gt;25&lt;/age&gt;\n  &lt;/student&gt;\n&lt;/librarymembers&gt; \n</textarea></div><p>In the above example, &lt;student&gt; is an element and id is an attribute of the &lt;student&gt; element. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 703
	},
	{
		"question" : "8) What is the use of toggle() method in JQuery?",
		"answer" : "<div> <p>The jQuery toggle() is a particular type of method which is used to toggle between the hide() and show() method. It shows the hidden elements and hides the shown element.</p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(selector).toggle();\n$(selector).toggle(speed, callback);\n$(selector).toggle(speed, easing, callback);\n$(selector).toggle(display);\n</textarea></div><p><strong>speed</strong>: It is an optional parameter. It specifies the speed of the delay. Its possible values are slow, fast and milliseconds.</p><p><strong>easing</strong>: It specifies the easing function to be used for transition.</p><p><strong>callback</strong>: It is also an optional parameter. It specifies the function to be called after completion of toggle() effect.</p><p><strong>display</strong>: If true, it displays an element. If false, it hides the element.</p><p>For more: <a>Click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 704
	},
	{
		"question" : "4) What are the benefits of XML?",
		"answer" : "<div> <p>These are the main benefits of using XML.</p><p><strong>Simplicity:</strong> Very easy to read and understand the information coded in XML.</p><p><strong>Openness:</strong> It is a W3C standard, endorsed by software industry market leaders.</p><p><strong>Extensibility:</strong> It is extensible because it has no fixed set of tags. You can define them as you need. </p><p><strong>Self-descriptive:</strong> XML documents do not need special schema set-up like traditional databases to store data. XML documents can be stored without such definitions, because they contain metadata in the form of tags and attributes. </p><p><strong>Scalable:</strong> XML is not in binary format so you can create and edit files with anything and it is also easy to debug. </p><p><strong>Fast access:</strong> XML documents are arranged in hierarchical form so it is comparatively faster. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 705
	},
	{
		"question" : "9) What is the purpose of fadeToggle() method in JQuery?",
		"answer" : "<div> <p>The jQuery fadeToggle() method is used to toggle between the fadeIn() and fadeOut() methods. If the elements are faded in, it makes them faded out, and if they are faded out, it makes them faded in.</p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(selector).fadeToggle();\n$(selector).fadeToggle(speed,callback); \n$(selector).fadeToggle(speed, easing, callback);\n</textarea></div><p><strong>speed</strong>: It is an optional parameter. It specifies the speed of the delay. Its possible values are slow, fast and milliseconds.</p><p><strong>easing</strong>: It specifies the easing function to be used for transition.</p><p><strong>callback</strong>: It is also an optional parameter. It specifies the function to be called after completion of fadeToggle() effect.</p><p>For more: <a>Click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 706
	},
	{
		"question" : "19) What is the difference between simple element and complex element? ",
		"answer" : "<div> <p>In XML, simple elements are text-based elements. It contains less attributes, child elements, and cannot be left empty. </p><p>But, complex elements can hold multiple attributes and elements. It can contain additional sub elements and empty element also. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 707
	},
	{
		"question" : "10) What is the use of delay() method in JQuery?",
		"answer" : "<div> <p>The jQuery delay() method is used to delay the execution of functions in the queue. It is the best method to make a delay between the queued jQuery effects. The jQUery delay () method sets a timer to delay the execution of the next item in the queue.</p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(selector).delay (speed, queueName)  \n</textarea></div><p><strong>speed:</strong> It is an optional parameter. It specifies the speed of the delay. Its possible values are slow, fast and milliseconds.</p><p><strong>queueName:</strong> It is also an optional parameter. It specifies the name of the queue. Its default value is \"fx\" the standard queue effect. </p><p>For more: <a>Click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 708
	},
	{
		"question" : "20) Define the concept of XPOINTER.",
		"answer" : "<div> <p>XPOINTER is used to point data within XML document. It is used to locate the particular part of the XML document. It is a W3C recommendation.</p><p>See this example:</p><p>\n</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">address.xml#pointer(/ descendant ::streetnumber[@id =9])\n</textarea></div><p>In this example, XPOINTER points \"streetnumber = 9\" in \"address.xml\".</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 709
	},
	{
		"question" : "21) What is XML data binding? Why is it used? ",
		"answer" : "<div> <p>XML data binding is the process of representing the information in an XML document as an object in computer memory.</p><p>XML data binding is used to short your development effort, simplify maintenance, increase reliability. It saves your development time and money. It makes working with XML data very intuitive.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 710
	},
	{
		"question" : "22) What is XML encoding error?",
		"answer" : "<div> <p>There are two types of XML encoding errors:</p><ol class=\"points\">\n<li>An invalid character was found in text content.</li>\n<li>Switching from current encoding to specified encoding not supported. </li>\n</ol><p>These errors occur because XML document can contain non ASCII characters like Norwegian and French. These errors can be avoided by specifying the XML encoding Unicode. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 711
	},
	{
		"question" : "23) What are the different XML API's?",
		"answer" : "<div> <p><strong>Tree-based API:</strong> It compiles an XML document in a tree like structure and loads it into the memory. You can traverse and change the tree structure. Tree based API's are useful for a wide range of applications. Example of tree-based API is DOM parser.</p><p></p><p><strong>Event-based API:</strong> An event based API provides the reports to an application about the parsing event. It uses a set of built-in call back functions.\nExample of event-based API is SAX parser.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 712
	},
	{
		"question" : "24) What is XmlReader class? Explain.",
		"answer" : "<div> <p>The XmlrReader class represents a reader that provides fast, noncached, forward-only access to XML data. You need to import the following namespaces to work with XmlReader class in .NET.</p><p><strong>In VB: </strong></p><p>Imports System.Xml</p><p><strong>In C#: </strong></p><p>using System.Xml;</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 713
	},
	{
		"question" : "53) What is the requirement of debugging in JavaScript?",
		"answer" : "<div> <p>JavaScript didn't show any error message in a browser. However, these mistakes can affect the output. The best practice to find out the error is to debug the code. The code can be debugged easily by using web browsers like Google Chrome, Mozilla Firebox.</p><p>To perform debugging, we can use any of the following approaches: </p><ul class=\"points\">\n<li>Using console.log() method</li>\n<li>Using debugger keyword</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 714
	},
	{
		"question" : "25) What is the difference between CDATA and PCDATA? ",
		"answer" : "<div> <p>CDATA means unparsed character data whereas PCDATA means parsed character data.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 715
	},
	{
		"question" : "54) What is the use of debugger keyword in JavaScript?",
		"answer" : "<div> <p>JavaScript debugger keyword sets the breakpoint through the code itself. The debugger stops the execution of the program at the position it is applied. Now, we can start the flow of execution manually. If an exception occurs, the execution will stop again on that particular line.. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">function display()\n{\nx = 10;  \ny = 15;  \nz = x + y;  \ndebugger;  \ndocument.write(z);  \ndocument.write(a);   \n}   \ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 716
	},
	{
		"question" : "26) What is XQuery? ",
		"answer" : "<div> <p>XQuery is a query language that is used to retrieve data from XML document.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 717
	},
	{
		"question" : "27) What is XML Namespace? ",
		"answer" : "<div> <p>A namespace is a qualified name that is associated with the DTD/Schema location .</p><p>A document may have duplicate elements and attributes. So, the namespace defines a way to compare duplicate elements and attribute names.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 718
	},
	{
		"question" : "5) What is XML DOM?",
		"answer" : "<div> <p><strong>DOM</strong> stands for <em>Document Object Model</em> which is used to describe the logical structure of XML document. It is a hierarchical model that provides a way to access and manipulate an XML document.</p><p>DOM methods and objects can be used with any languages like C#, VB, JavaScript and VB Script.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 719
	},
	{
		"question" : "6) What is SAX in XML?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><p><strong>SAX</strong> stands for <em>Simple API for XML</em>. It is a sequential access parser. It is a simple API for XML which provides a mechanism for reading data from an XML document. It is an alternative of DOM. DOM operates on the documents as whole, SAX parsers operate on each piece of the XML document sequentially. </p><p>SAX has no formal specification like DOM and consumes less memory. But it can be used to read the XML document only not write. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 720
	},
	{
		"question" : "55) What is the role of a strict mode in JavaScript?",
		"answer" : "<div> <p>The JavaScript strict mode is used to generates silent errors. It provides \"use strict\"; expression to enable the strict mode. This expression can only be placed as the first statement in a script or a function. For example: </p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">\"use strict\";  \nx=10;  \nconsole.log(x); \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 721
	},
	{
		"question" : "57) What is the use of Math object in JavaScript?",
		"answer" : "<div> <p>The JavaScript math object provides several constants and methods to perform a mathematical operation. Unlike date object, it doesn't have constructors. For example: </p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\n  document.writeln(Math.random());\n}\ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 722
	},
	{
		"question" : "28) What is SGML? ",
		"answer" : "<div> <p>SGML is a vast and powerful generalized markup language that is used to define descriptions for the structure of several electronic documents.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 723
	},
	{
		"question" : "7) What is XSNL?",
		"answer" : "<div> <p><strong>XSNL</strong> is an <em>XML search neutral language</em>. This language acts between the meta search interface and targeted system. </p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 724
	},
	{
		"question" : "29) Can we use graphics in XML? ",
		"answer" : "<div> <p>Yes, graphics can be stored in XML file by using XLink and XPointer. It supports graphics like GIF, JPG, TIFF, PNG, CGM, EPS, SVG.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 725
	},
	{
		"question" : "30) Is XML case sensitive?",
		"answer" : "<div> <p>Yes, XML is a case sensitive language.</p></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 726
	},
	{
		"question" : "31) Define Structure of XML?",
		"answer" : "<div> <img src=\"https://static.javatpoint.com/interview/images/xml_img.PNG\" alt=\"XML Structure\"></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 727
	},
	{
		"question" : "58) What is the use of a Date object in JavaScript?",
		"answer" : "<div> <p>The JavaScript date object can be used to get a year, month and day. You can display a timer on the webpage by the help of JavaScript date object.</p><div class=\"codeblock\"> <textarea name=\"code\" class=\"xml\">function display()\n{\n  var date=new Date();  \nvar day=date.getDate();  \nvar month=date.getMonth()+1;  \nvar year=date.getFullYear();  \ndocument.write(\"&lt;br&gt;Date is: \"+day+\"/\"+month+\"/\"+year);  \n}\ndisplay();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "JavaScript",
		"id" : 728
	},
	{
		"question" : "8) What is a well formed XML document? ",
		"answer" : "<div> <p>A syntactically correct document is called well formed XML document. A well formed XML document must follow the XML?s basic rules of syntax:</p><ul class=\"points\">\n<li>It must have a closing tag. </li>\n<li>The closing tag must exactly match the open tag: XML is case sensitive. </li>\n<li>All elements should be included within a single root tag.</li>\n<li>Child elements must be closed within parent tag. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 729
	},
	{
		"question" : "9) What is a valid XML document?",
		"answer" : "<div> <p>A structurally correct element is called a valid XML document. It should follow some predefined rules of a specific type of document. These rules determine the type of data that each part of the document can contain. These rules can be written by the author of an XML document or someone other.</p><h4 class=\"n\">Note: A valid XML document may be well-formed but a well-formed XML document may not be valid. </h4></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 730
	},
	{
		"question" : "1) What is AJAX?",
		"answer" : "<div> <div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Interview Questions</a></td>\n<td><a>Java String &amp; Exception Interview Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><img src=\"https://static.javatpoint.com/interview/images/ajax-interview-questions.png\" alt=\"AJAX Interview Questions\" class=\"imageright\"><h1 class=\"h1\">AJAX Interview Questions</h1><p>A list of frequently asked AJAX interview questions and answers are given below.</p><p>AJAX stands for Asynchronous JavaScript and XML. It is a group of related technologies used to display data asynchronously. In other words, it sends and retrieves data without reloading the web page. <a>More details.</a></p></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 731
	},
	{
		"question" : "10) What is DTD?",
		"answer" : "<div> <p><strong>DTD</strong> stands for <em>Document Type Definition</em>. It defines a leading building block of an XML document. It defines:</p><ul class=\"points\">\n<li>Names of elements</li>\n<li>How and where they can be used</li>\n<li>Element attributes</li>\n<li>Proper nesting</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 732
	},
	{
		"question" : "11) How can you apply a DTD to an XML document?",
		"answer" : "<div> <p>To apply a DTD to an XML document, you can:</p><ul class=\"points\">\n<li>Use the DTD element definition within the XML document itself.</li>\n<li>Provide a DTD as a separate file and reference its name in XML document.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XML",
		"id" : 733
	},
	{
		"question" : "17) What are the different ready states of a request in AJAX?",
		"answer" : "<div> <p>There are 5 ready states of a request in AJAX.</p><ul class=\"points\">\n<li>0 means UNOPENED</li>\n<li>1 means OPENED</li>\n<li>2 means HEADERS_RECEIVED</li>\n<li>3 means LOADING</li>\n<li>4 means DONE</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 734
	},
	{
		"question" : "18) What are the common AJAX frameworks?",
		"answer" : "<div> <ul class=\"points\">\n<li>Dojo Toolkit</li>\n<li>YUI</li>\n<li>Google Web Toolkit (GWT)</li>\n<li>Spry</li>\n<li>MooTools</li>\n<li>Prototype</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 735
	},
	{
		"question" : "2) What are the advantages of AJAX?",
		"answer" : "<div> <ul class=\"points\">\n<li>Quick Response</li>\n<li>Bandwidth utilization</li>\n<li>The user is not blocked until data is retrieved from the server.</li>\n<li>It allows us to send only important data to the server.</li>\n<li>It makes the application interactive and faster.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 736
	},
	{
		"question" : "3) What are the disadvantages of AJAX?",
		"answer" : "<div> <ul class=\"points\">\n<li>Dependent on JavaScript</li>\n<li>Security issues</li>\n<li>Debugging is difficult</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 737
	},
	{
		"question" : "19) How can you test the AJAX code?",
		"answer" : "<div> <p>JUnit is the open source unit testing framework for client-side JavaScript. It is required to create test cases. The unit test case is a code which ensures that the program logic works as expected.</p></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 738
	},
	{
		"question" : "4) What are the real web applications of AJAX currently running in the market?",
		"answer" : "<div> <ul class=\"points\">\n<li>Twitter</li>\n<li>Facebook</li>\n<li>Gmail</li>\n<li>Javatpoint</li>\n<li>Youtube</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 739
	},
	{
		"question" : "25) What is the usage of Service Discovery layer in Web Service Protocol Stack?",
		"answer" : "<div> <p>The Service Discovery layer is used for centralizing services into a universal registry and providing easy publish/find functionality. </p><p>Currently, service discovery is handled via Universal Description, Discovery, and Integration (UDDI).</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 740
	},
	{
		"question" : "5) What are the security issues with AJAX?",
		"answer" : "<div> <ul class=\"points\">\n<li>AJAX source code is readable</li>\n<li>Attackers can insert the script into the system</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 741
	},
	{
		"question" : "26) What is a remote procedure call (RPC)?",
		"answer" : "<div> <p>The Remote procedure calls refer to the calls made to the methods which are hosted by related web service.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 742
	},
	{
		"question" : "6) What is the difference between synchronous and asynchronous requests?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><p>Synchronous request blocks the user until a response is retrieved whereas asynchronous doesn't block the user. <a>More details.</a></p><h4 class=\"h4\">Synchronous Request</h4><img src=\"images/ajax/synchronous.gif\" alt=\"synchronous request\"><br><h4 class=\"h4\">Asynchronous Request</h4><img src=\"images/ajax/asynchronous.gif\" alt=\"asynchronous request\"></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 743
	},
	{
		"question" : "11) Is it possible that jQuery HTML work for both HTML and XML document?",
		"answer" : "<div> <p>No, jQuery HTML only works for HTML document. It doesn't work for XML documents. </p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 744
	},
	{
		"question" : "27) What is meant by SOAP message?",
		"answer" : "<div> <p>The SOAP message refers to the data sent to the application from web services.\nSOAP message is an XML document which is sent through web services to provide data to the client application written in any programming language.</p><p>SOAP message sends via using hypertext transfer protocol.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 745
	},
	{
		"question" : "28) What is the need of <Envelope> element in the SOAP document?",
		"answer" : "<div> <p>The &lt;Envelope&gt; element is used as the root element of every SOAP message.</p><p>The Root element is known as the first element in the XML Document.</p><p>The envelope, in turn, separated into two parts. One is the header part and second is the body part. The header contains the routing data which stores the source and destination address of the client. So the body includes the actual data.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 746
	},
	{
		"question" : "1) What is Web Service?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><td>JavaScript is an object-based scripting language.</td>\n<td>AJAX is a group of inter-related technologies like JavaScript, XML, HTML, CSS etc</td></tr>\n<tr><td>It requests the server and waits for the response.</td>\n<td>It sends a request to the server and doesn't wait for the response.</td></tr>\n<tr><td>It consumes more bandwidth as it reloads the page.</td>\n<td>It doesn't reload the page so consumes less bandwidth.</td></tr>\n</tbody></table><br><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Questions</a></td>\n<td><a>Java String &amp; Exception Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><img src=\"https://static.javatpoint.com/interview/images/web-services-interview-questions.png\" alt=\"Web Services Interview Questions\" class=\"imageright\"><h1 class=\"h1\">Web Services Interview Questions</h1><p>There is given frequently asked Web Services interview questions and answers that have been asked in many companies. Let's see the list of top Web Services interview questions.</p><p>The Web Service is a standard software system used for communication between two devices (client and server) over the network. Web services provide a common platform for various applications written in different languages to communicate with each other over the network.</p><h4 class=\"h4\">Java Web Services API</h4><img src=\"https://static.javatpoint.com/webservicepages/images/java-web-services.png\" alt=\"java web services\"><br></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 747
	},
	{
		"question" : "29) Explain web service protocol stack and its layers?",
		"answer" : "<div> <p>The web services consist of four layers, as mentioned below:</p><p><strong>Service transport:</strong></p><p>This layer is the first layer in the web services protocol stack used in transporting XML files between various clients applications. Protocols used in the layer is as follows:</p><ul class=\"points\">\n<li>HTTP (Hypertext transfer protocol)</li>\n<li>SMTP (Simple Mail Transfer Protocol)</li>\n<li>FTP (File Transfer Protocol)</li>\n<li>BEEP (Block Extensible Exchange Protocol)</li>\n</ul><p><strong>XML Messaging:</strong></p><p>This layer is the second layer in the web services protocol stack based on XML model where messages are encoded in common XML format which can be understandable to other client applications. This layer includes the following protocols:</p><ul class=\"points\">\n<li>XML - RPC</li>\n<li>SOAP (Simple Object Access Protocol)</li>\n</ul><p><strong>Service Description:</strong></p><p>This layer provides the service description to the public interface like the location of web service, Available functions, And the data types for XML messaging. This layer only includes one language:</p><ul class=\"points\">\n<li>WSDL: WSDL stands for Web Service Description Language.</li>\n</ul><p><strong>Service Discovery:</strong></p><p>This layer in the Web Services protocol stack is used to publish or finding web services over the web. This layer includes:</p><p>UDDI (Universal Description, Discovery, and integration).</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 748
	},
	{
		"question" : "30) Explain web service architecture?",
		"answer" : "<div> <p>The web service framework includes three different layers.</p><p>The roles of these layers are:</p><ul class=\"points\">\n<li><strong>Service Provider</strong>: Role of Service provider is to make the web service which makes it accessible to the client applications over the Web.\n</li><li><strong>Service Requestor</strong>: Service requestor refers to any consumer of web service like any client application. Client applications are written in any language contact web service for any functionality by sending XML request over the available network connection.\n</li><li><strong>Service Registry</strong>: Service Registry is the centralized directory System which helps to locate the web services for client applications. Used to find the existing web services, as well as developers, can also create the brand new one web service also.</li>\n</ul><p>The Service Provider uses the interface named as ?Publish? interface of Service Registry to make the existing web services available to client applications. With all the information provided by the service registry, service requestor able to find or invoke services.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 749
	},
	{
		"question" : "2) How does a web service work?",
		"answer" : "<div> <p>A web service is used to communicate among various applications by using open standards such as HTML, XML, WSDL, and SOAP. You can build a Java-based web service on Solaris that is accessible from your Visual Basic program that runs on Windows. You can also use C# to develop new web services on Windows invokes from your web application that is based on Java Server Pages (JSP) and runs on Linux.</p><img src=\"https://static.javatpoint.com/webservicepages/images/web-services.png\" alt=\"web services\"></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 750
	},
	{
		"question" : "12) What is the use of html() method in JQuery?",
		"answer" : "<div> <p>The jQuery html() method is used to change the entire content of the selected elements. It replaces the selected element content with new contents.</p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(document).ready(function(){  \n    $(\"button\").click(function(){  \n        $(\"p\").html(\"Hello &lt;b&gt;Javatpoint.com&lt;/b&gt;\");  \n    });  \n});  \n</textarea></div><p>For complete example: <a>Click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 751
	},
	{
		"question" : "13) What is the use of css() method in JQuery?",
		"answer" : "<div> <p>The jQuery CSS() method is used to get (return)or set style properties or values for selected elements. It facilitates you to get one or more style properties. The jQuery CSS() provides two ways:</p><h4 class=\"h4\">Return a CSS property</h4><p> It is used to get the value of a specified CSS property.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(document).ready(function(){  \n    $(\"button\").click(function(){  \n        alert(\"Background color = \" + $(\"p\").css(\"background-color\"));  \n    });  \n});  \n</textarea></div><h4 class=\"h4\">Set a CSS property </h4><p>This property is used to set a specific value for all matched element.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$(document).ready(function(){  \n    $(\"button\").click(function(){  \n        $(\"p\").css(\"background-color\", \"violet\");  \n    });  \n});\n</textarea></div><p>For more: <a>Click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 752
	},
	{
		"question" : "3) What are the advantages of web services?",
		"answer" : "<div> <p>These are some of the important advantages of web services:</p><ul class=\"points\">\n<li><strong>Interoperability</strong>: With the help of web services, an application can communicate with other application developed in any language. </li>\n<li><strong>Reusability</strong>: We can expose the web service so that other applications can use it. </li>\n<li><strong>Modularity</strong>: With the help of web service, we can create a service for a specific task such as tax calculation. </li>\n<li><strong>A Standard protocol for every application program</strong>: Web services use standard protocol so that all the client applications written in different languages can understand it. This Standard protocol helps in achieving cross-platform.</li>\n<li><strong>Cheaper cost for communication</strong>: Web services uses SOAP over HTTP so that anybody can use existing internet for using web services.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 753
	},
	{
		"question" : "14) Is jQuery library used for server scripting or client scripting?",
		"answer" : "<div> <p>It is a library for client-side Scripting. </p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 754
	},
	{
		"question" : "15) Is jQuery a W3C standard?",
		"answer" : "<div> <p>No, jQuery is not a W3C standard.</p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 755
	},
	{
		"question" : "16) What is the starting point of code execution in jQuery?",
		"answer" : "<div> <p>$(document).ready() function is the starting point of jQuery code. It is executed when DOM is loaded.</p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 756
	},
	{
		"question" : "4) What are the different types of web services?",
		"answer" : "<div> <p>There are two types of web services:</p><ul class=\"points\">\n<li><strong>SOAP</strong> - It is an XML-based protocol for accessing web services.</li>\n<li><strong>RESTful</strong> - It is an architectural style, not a protocol. </li>\n</ul><img src=\"https://static.javatpoint.com/webservicepages/images/typesofwebservices.png\" alt=\"types of web services\"></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 757
	},
	{
		"question" : "31) What is XML-RPC?",
		"answer" : "<div> <p>The RPC is Remote Procedure Call. It is the method used for calling a procedure or function available on any remote computer on the web.</p><p>XML-RPC refers to a simple protocol used to perform RPCs by using XML messaging. It is an excellent tool for connecting different environments and also establishing connections between wide varieties of computers.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 758
	},
	{
		"question" : "32) Explain BEEP?",
		"answer" : "<div> <p>The BEEP stands for Blocks Extensible Exchange Protocol. BEEP is an alternative to HTTP and FTP. BEEP is determined as building new protocols for the variety of applications such as instant messaging, network management, file transfer. It is termed as new Internet Engineering Task Force (IETF) which is layered directly over TCP. </p><p>Some of the Build-in features of BEEP protocol are listed below:</p><ul class=\"points\">\n<li>Authentication</li>\n<li>Security</li>\n<li>Error handling</li>\n<li>Initial Handshake Protocol</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 759
	},
	{
		"question" : "5) What are the main features of web services?",
		"answer" : "<div> <p>Following is a list of main features of web services:</p><ul class=\"points\">\n<li>It is available over the Internet or private (intranet) networks.</li>\n<li>It uses a standardized XML messaging system.</li>\n<li>It is not tied to any one operating system or programming language.</li>\n<li>It is self-describing via a common XML grammar.</li>\n<li>It is discoverable via a simple find mechanism.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 760
	},
	{
		"question" : "33) What are the requirements to access a Web Service?",
		"answer" : "<div> <p>The requirement for accessing web services from any application is that should support XML-based request and response. Hence there is no need to install any app for accessing web services.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 761
	},
	{
		"question" : "17) What is the basic requirement to start with the jQuery?",
		"answer" : "<div> <p>You need refer to its library to start with jQuery. You can download the latest version of jQuery from jQuery.com.</p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 762
	},
	{
		"question" : "6) What is SOAP?",
		"answer" : "<div> <p>The SOAP stands for Simple Object Access Protocol. It is an XML-based protocol for accessing web services. It is platform independent and language independent. By using SOAP, you can interact with other programming language applications. <a>More details..</a></p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 763
	},
	{
		"question" : "34) Which language does UDDI use?",
		"answer" : "<div> <p>The UDDI uses the language known as WSDL (Web Service Description Language).</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 764
	},
	{
		"question" : "18) Can you use any other name in place of $ (dollar sign) in jQuery?",
		"answer" : "<div> <p>Yes, instead of $ (dollar sign) we can use jQuery as a function name. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\"> jQuery(document).ready(function() {  \n jQuery(\"p\").css(\"background-color\", \"pink\");  \n }); \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 765
	},
	{
		"question" : "35) Explain different HTTP methods supported by RESTful web services?",
		"answer" : "<div> <p>Enlisted below are some common HTTP methods along with their functions that are supported by RESTful web services.</p><ul class=\"points\">\n<li><strong>GET</strong>: Read-only access to the resource.</li>\n<li><strong>PUT</strong>: Creation of new resource.</li>\n<li><strong>DELETE</strong>: Removal of a resource.</li>\n<li><strong>POST</strong>: Update of an existing resource.</li>\n<li><strong>OPTIONS</strong>: Get supported operations on the resource.</li>\n<li><strong>HEAD</strong>: Returns HTTP header only, nobody.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 766
	},
	{
		"question" : "19) Can you use multiple document.ready() function on the same page?",
		"answer" : "<div> <p>Yes. You can use any number of document.ready() function on the same page. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">$(document).ready(function() {  \n$(\"h1\").css(\"background-color\", \"red\");  \n });  \n$(document).ready(function() {  \n$(\"p\").css(\"background-color\", \"pink\");  \n });  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 767
	},
	{
		"question" : "7) What are the advantages of SOAP web services?",
		"answer" : "<div> <p>These are some of the important advantages of SOAP web services:</p><ul class=\"points\">\n<li><strong>WS Security</strong> - SOAP defines its security known as WS Security.\n</li><li><strong>Language Independent</strong> - Its web services can be written in any programming language\n</li><li><strong>Platform Independent</strong> - Its web services can be executed on any platform.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 768
	},
	{
		"question" : "20) What is the difference between find and children methods?",
		"answer" : "<div> <p>Find method is used to find all levels down the DOM tree while children method is used to find single level down the DOM tree.</p></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 769
	},
	{
		"question" : "21) What is a CDN?",
		"answer" : "<div> <p>CDN stands for Content Delivery Network or Content Distribution Network. It is a large distributed system of servers deployed in multiple data centers across the internet. It provides the files from servers at a higher bandwidth that leads to faster loading time. These are several companies that provide free public CDNs:</p><ul class=\"points\">\n<li>Google</li>\n<li>Microsoft</li>\n<li>Yahoo </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "jQuery",
		"id" : 770
	},
	{
		"question" : "8) What are the disadvantages of SOAP web services?",
		"answer" : "<div> <ins class=\"adsbygoogle cm_jtp_wtc_responsive\" style=\"display:inline-block\" data-ad-client=\"ca-pub-4699858549023382\" data-ad-slot=\"6746133113\"></ins><p>These are some of the important disadvantages of SOAP web services:</p><ul class=\"points\">\n<li><strong>Slow</strong> - It uses XML format that must be parsed to be read and defines many standards that must be followed while developing the SOAP applications. So it is slow and consumes more bandwidth and resource.</li>\n<li><strong>WSDL Dependent</strong> - It uses WSDL and doesn't have any other mechanism to discover the service.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 771
	},
	{
		"question" : "7) What are the technologies used by AJAX?",
		"answer" : "<div> <ul class=\"points\">\n<li>HTML/XHTML and CSS - These technologies are used for displaying content and style.</li>\n<li>DOM - It is used for dynamic display and interaction with data.</li>\n<li>XML - It is used for carrying data to and from server</li>\n<li>XMLHttpRequest - It is used for asynchronous communication between client and server.</li>\n<li>JavaScript - It is used mainly for client-side validation</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 772
	},
	{
		"question" : "9) What are the main features of SOAP?",
		"answer" : "<div> <p>The following list specifies the features of SOAP:</p><ul class=\"points\">\n<li>SOAP is a communication protocol.</li>\n<li>SOAP communicates between applications. </li>\n<li>SOAP is a format for sending messages.</li>\n<li>SOAP is designed to communicate via Internet.</li>\n<li>SOAP is platform independent.</li>\n<li>SOAP is language independent.</li>\n<li>SOAP is simple and extensible.</li>\n<li>SOAP allows you to get around firewalls.</li>\n<li>SOAP developed as a W3C standard.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 773
	},
	{
		"question" : "36) What are the steps involved in accessing a web service?",
		"answer" : "<div> <p>These are the steps involved in accessing a web service:</p><ol class=\"points\">\n<li>Client application bundled the information and into a SOAP message.</li>\n<li>SOAP message sends to the server as a body of Hyper-Text markup language using POST method.</li>\n<li>Web service unpacks the SOAP message and converts it into a command understandable by the application.</li>\n<li>Application processes the information and in turn bundled the info and send it back to the client as a SOAP message.</li>\n<li>A Client then unpacks the SOAP message to obtain the results.</li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 774
	},
	{
		"question" : "10) What is WSDL?",
		"answer" : "<div> <p>The WSDL stands for Web Services Description Language. It is an XML document containing information about web services such as method name, method parameter. The Client needs a data dictionary which contains information about all the web services with methods names and parameters list to invoke them for the web services. The Web Service Description Language bridge up this gap, by providing all necessary information to the client.</p><p>Some Important elements used in Web Services Description language are as follows:</p><ul class=\"points\">\n<li><strong>&lt;message&gt;</strong>: The message element in WSDL is used to define all different data elements for each operation performed by the web service.</li>\n<li><strong>&lt;portType&gt;</strong>: The port type element is used to determine the operation which can be performed by the web service. This operation can have two messages one is input and the second one is the output message.</li>\n<li><strong>&lt;binding&gt;</strong>: This element contains the used protocol.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 775
	},
	{
		"question" : "37) How many Communication protocols can be used to implement a SOAP message? Is SOAP messages are tied to any protocol?",
		"answer" : "<div> <p>Communication protocol refers to the protocols which were used to transmit information over the web. By using Transport protocols, applications from the different background can quickly communicate with each other without knowing the inside functioning of the various systems. HTTP (Hyper-Text Transfer Protocol) can be used to implement a SOAP message whereas FTP (File Transfer Protocol) can be used as the reliable transport mechanism. SMTP and BEEP can also be used for transport mechanism.</p><p>SOAP message is not tied to any protocol. It can use any of the open Transport protocol.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 776
	},
	{
		"question" : "38) How are the terms \"Platform independent\" and \"Diverse Application\" are related to each other in the context of XML-RPC?",
		"answer" : "<div> <p>The terms \"Platform independent\" and \"Diverse Application\" were related to each other because XML-RPC uses HTTP for transporting SOAP messages over the web. The HTTP is a universal standard protocol for exchanging information on the Web. Hence, it leads to Cross Platform support/ Platform independent. So because it is Platform independent, it leads to the diverse application capable of accessing the web services.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 777
	},
	{
		"question" : "11) What is UDDI?",
		"answer" : "<div> <p>The UDDI stands for Universal Description, Discovery and Integration. It is a XML based framework for describing, discovering and integrating web services. It contains a list of available web services. WSDL is the part of UDDI. <a>More details..</a></p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 778
	},
	{
		"question" : "39) Explain the role of web service provider/ Publisher.",
		"answer" : "<div> <p>The role of a Web Service provider is to implement web service and make it available to the web service requestor/ consumer.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 779
	},
	{
		"question" : "5) What is $scope?",
		"answer" : "<div> <p>A $scope is an object that represents the application model for an Angular application.</p><p>Each AngularJS application can have only one root scope but can have multiple child scopes. <strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var app = angular.module('myApp', []);    \napp.controller('myCtrl', function($scope) {    \n    $scope.carname = \"Volvo\";    \n});\n</textarea></div><p>Some of the key characteristics of the $scope object are given below:</p><ul class=\"points\">\n<li>It provides observers to check for all the model changes.</li>\n<li>It provides the ability to propagate model changes through the application as well as outside the system to other associated components.</li>\n<li>Scopes can be nested in a way that they can isolate functionality and model properties.</li>\n<li>It provides an execution environment in which expressions are evaluated.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 780
	},
	{
		"question" : "40) Explain the role of web service requestor/ consumer.",
		"answer" : "<div> <p>The role of Web Service Requestor / Consumer is to utilize the pre-existing web service provided by the Web Service Provider/ Publisher. Web Service Requestor/ Consumer request the Web Service provider for the information by sending a SOAP message to the Web Service provider. Then in-Turn Web Service Publisher sends the requested information back to the requestor in the form of a SOAP message.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 781
	},
	{
		"question" : "6) Is AngularJS dependent on JQuery?",
		"answer" : "<div> <p>AngularJS is a JavaScript framework with key features like models, two-way binding, directives, routing, dependency injections, unit tests, etc. On the other hand, JQuery is a JavaScript library used for DOM manipulation with no two-way binding features.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 782
	},
	{
		"question" : "12) What is RESTful web services?",
		"answer" : "<div> <p>The REST stands for Representational State Transfer. It is an architectural style. It is not a protocol like SOAP. <a>More details..</a></p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 783
	},
	{
		"question" : "7) What IDE's are currently used for the development of AngularJS?",
		"answer" : "<div> <p>A term IDE stands for <strong>Integrated Development Environment</strong>. There are some IDE's given below which are used for the development of AngularJS:</p><ul class=\"points\">\n<li><strong>Eclipse</strong><br>\nIt is one of the most popular IDE. It supports AngularJS plugins.</li>\n<li><strong>Visual Studio</strong><br>\nIt is an IDE from Microsoft that provides a platform to develop web apps easily and instantly.</li>\n<li><strong>WebStorm</strong><br>\nIt is one of the most powerful IDE for modern JavaScript development. It provides an easier way to add dependencies with angular CLI.</li>\n<li><strong>Aptana</strong><br>\nIt is a customized version of Eclipse. It is free to use.</li>\n<li><strong>Sublime Text</strong><br>\nIt is one of the most recommendable editors for HTML, CSS, and JavaScript. It is very much compatible with AngularJS code.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 784
	},
	{
		"question" : "13) What are the advantages of RESTful web services?",
		"answer" : "<div> <p>These are some of the important advantages of RESTful web services:</p><ul class=\"points\">\n<li>Fast - The Web Services are fast because there is no strict specification of SOAP. It consumes less bandwidth and resource.</li>\n<li>Language Independent - The web services can be written in any programming language.</li>\n<li>Platform Independent - The web services can be executed on any platform.</li>\n<li>Can use SOAP - The web services can use SOAP web services as the implementation.</li>\n<li>Allows different data format - The web service permits different data format such as Plain Text, HTML, XML, and JSON.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 785
	},
	{
		"question" : "8) What are the features of AngularJS?",
		"answer" : "<div> <p>Some important features of AngularJS are given below:</p><ul class=\"points\">\n<li><strong>MVC-</strong> In AngularJS, you just have to split your application code into MVC components, i.e., Model, View, and the Controller.</li>\n<li><strong>Validation-</strong> It performs client-side form validation.</li>\n<li><strong>Module-</strong> It defines an application.</li>\n<li><strong>Directive-</strong> It specifies behavior on the DOM element.</li>\n<li><strong>Template-</strong> It renders the dynamic view.</li>\n<li><strong>Scope-</strong> It joins the controller with the views.</li>\n<li><strong>Expression-</strong> It binds application data to HTML.</li>\n<li><strong>Data Binding-</strong> It creates a two-way data-binding between the selected element and the $ctrl.orderProp model.</li>\n<li><strong>Filter-</strong> It provides the filter to format data.</li>\n<li><strong>Service-</strong> It stores and shares data across the application.</li>\n<li><strong>Routing-</strong> It is used to build a single page application.</li>\n<li><strong>Dependency Injection-</strong> It specifies a design pattern in which components are given their dependencies instead of hard-coding them within the component.</li>\n<li><strong>Testing-</strong> It is easy to test any of the AngularJS components through unit testing and end-to-end testing.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 786
	},
	{
		"question" : "41) Write an example to demonstrate the working of the Web Service Provider.",
		"answer" : "<div> <p>Here is the example of a Web Service Provider:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">using System;\nusing System.Web.Services;\nusing System.Xml.Serialization;\n\n[WebService(Namespace=\"http://localhost/MyWebServices/\")]\npublic class FirstService : WebService{\n   [WebMethod]\n   public int Add(int a, int b) {\n      return a + b;\n   }\n\n   [WebMethod]\n   public String SayHello() {\n      return \"Hello World\";\n   }\n}\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 787
	},
	{
		"question" : "42) Explain the difference between Web Service Provider/Publisher and Web Service requestor/Consumer.",
		"answer" : "<div> <p>As the name suggests Web Service Provider provides the web services to the various application irrespective of their background, and Web Service Requestor/ Consumer as the name suggests is the requestor for the web services.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 788
	},
	{
		"question" : "1) What is AngularJS?",
		"answer" : "<div> <br><div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Questions</a></td>\n<td><a>Java String &amp; Exception Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><h1 class=\"h1\">AngularJS Interview Questions</h1><img src=\"https://static.javatpoint.com/interview/images/angularjs-interview-questions.png\" alt=\"AngularJS Interview Questions\" class=\"imageright\"><p>A list of top frequently asked <strong>AngularJS interview questions</strong> and answers are given below. </p><p>AngularJS is an open-source JavaScript framework used to build rich and extensible web applications. It is developed by <strong>Google</strong> and follows the <strong>MVC (Model View Controller)</strong> pattern. It supports HTML as the template language and enables the developers to create extended HTML tags which will help to represent the application's content more clearly. It is easy to update and receive information from an HTML document. It also helps in writing a proper maintainable architecture which can be tested at a client-side.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 789
	},
	{
		"question" : "9) What are the directives in AngularJS?",
		"answer" : "<div> <p>Directives are the markers on DOM element which are used to specify behavior on that DOM element. All AngularJS directives start with the word \"<em>ng</em>\". There are many in-built directives in AngularJS such as \"<strong>ng-app</strong>\", \"<strong>ng-init</strong>\", \"<strong>ng-model</strong>\", \"<strong>ng-bind</strong>\", \"<strong>ng-repeat</strong>\" etc.</p><ul class=\"points\">\n<li><strong>ng-app</strong><br>\nThe ng-app directive is the most important directive for Angular applications. It is used to locate the beginning of an Angular application for AngularJS HTML compiler. It marks the HTML elements that Angular intends to make the root element of the application. The custom attributes use spinal-cases, whereas the corresponding directives follow the camelCase. If we do not use this directive and try to process other directives, it gives an error.</li>\n<li><strong>ng-init</strong><br>\nThe ng-init directive is useful for initializing the data variable's inline statement of an AngularJS application. Therefore, those statements can be used in the specified blocks where we can declare them. A directive ng-init is like a local member of the ng-app directive, and it may be a single value or a group of the values. It directly supports JSON data.</li>\n<li><strong>ng-model</strong><br>\nThe ng-model directive binds the values of HTML elements such as input, select, textarea to the application data. It provides two-way binding behavior with the model value. Sometimes, it is also used for databinding.</li>\n<li><strong>ng-bind</strong><br>\nThe ng-bind directive is used to bind the model/variable's value to HTML controls of an AngularJS application. It can also be used with HTML tags attributes like: &lt;p/&gt;, &lt;span/&gt; and more but it does not support two-way binding. We can only check the output of the model values.</li>\n<li><strong>ng-repeat</strong><br>\nThe ng-repeat directive is used to repeat HTML statements. It works the same as for each loop in C#, Java or PHP on a specific collection item like an array.</li>\n</ul><p>Let's see a simple example of AngularJS directive:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;div ng-app = \"\" ng-init = \"countries = [{locale:'en-IND',name:'India'}, {locale:'en-PAK',name:'Pakistan'}, {locale:'en-AUS',name:'Australia'}]\"&gt;\n&lt;p&gt;Enter your Name: &lt;input type = \"text\" ng-model = \"name\"&gt;&lt;/p&gt;\n&lt;p&gt;Hello &lt;span ng-bind = \"name\"&gt;&lt;/span&gt;!&lt;/p&gt;\n&lt;p&gt;List of Countries with locale:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li ng-repeat = \"country in countries\"&gt;\n               {{ 'Country: ' + country.name + ', Locale: ' + country.locale }}    \n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 790
	},
	{
		"question" : "10) What are the controllers in AngularJS?",
		"answer" : "<div> <p>Controllers are JavaScript functions which are used to provide data and logic to HTML UI. It acts as an interface between Server and HTML UI. Each controller accepts $scope as a parameter which refers to the application/module that controller is going to control. <strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script&gt;\nvar app = angular.module('myApp', []);    \napp.controller('myCtrl', function($scope) {    \n    $scope.firstName = \"Aryan\";    \n    $scope.lastName = \"Khanna\";    \n});    \n&lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 791
	},
	{
		"question" : "14) What is the difference between SOAP and REST web services?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr><th>No.</th><th>SOAP</th><th>REST</th></tr>\n<tr><td>1)</td><td>SOAP is a <strong>protocol</strong>.</td><td>REST is an <strong>architectural style</strong>.</td></tr>\n<tr><td>2)</td><td>SOAP stands for <strong>Simple Object Access Protocol</strong>.</td><td>REST stands for <strong>Representational State Transfer</strong>.</td></tr>\n<tr><td>3)</td><td>SOAP <strong>can't use REST</strong> because it is a protocol.</td><td>REST <strong>can use SOAP</strong> web services because it is a concept and can use any protocol like HTTP, SOAP.</td></tr>\n<tr><td>4)</td><td>SOAP <strong>uses services interfaces to expose the business logic</strong>.</td><td>REST <strong>uses URI to expose business logic</strong>.</td></tr>\n<tr><td>5)</td><td>SOAP <strong>defines standards </strong> to be strictly followed. </td><td>REST does not define too much standards like SOAP.</td></tr>\n<tr><td>6)</td><td>SOAP <strong>permits XML</strong> data format only.</td><td>REST <strong>permits different</strong> data format such as Plain text, HTML, XML, JSON.</td></tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 792
	},
	{
		"question" : "8) What is the purpose of XMLHttpRequest?",
		"answer" : "<div> <ul class=\"points\">\n<li>It sends data in the background to the server.</li>\n<li>It requests data from the server.</li>\n<li>It receives data from the server.</li>\n<li>It updates data without reloading the page.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 793
	},
	{
		"question" : "2) What are the main advantages of AngularJS?",
		"answer" : "<div> <p>Some of the main advantages of AngularJS are given below:</p><ul class=\"points\">\n<li>Allows us to create a single page application.</li>\n<li>Follows MVC design pattern.</li>\n<li>Predefined form validations.</li>\n<li>Supports animations.</li>\n<li>Open-source.</li>\n<li>Cross-browser compliant.</li>\n<li>Supports two-way data binding.</li>\n<li>Its code is unit testable.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 794
	},
	{
		"question" : "15) What is SOA?",
		"answer" : "<div> <p>SOA stands for Service Oriented Architecture. It is a design pattern to provide services to other application through protocol. </p><img src=\"https://static.javatpoint.com/webservicepages/images/soa.png\" alt=\"SOA Connections\"><br></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 795
	},
	{
		"question" : "11) What are the uses of controllers in AngularJS?",
		"answer" : "<div> <p>AngularJS controllers are used for:</p><ul class=\"points\">\n<li>Setting the initial state of the $scope object</li>\n<li>Adding behavior to the $scope object</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 796
	},
	{
		"question" : "12) What is data binding in AngularJS?",
		"answer" : "<div> <p>Data Binding is the automatic synchronization of data between model and view. In AngularJS, it performs the automatic synchronization process between the model and view.</p><p>If the model is changed, the view reflects it automatically and vice-versa. There are two ways of data binding that AngularJS supports:</p><ul class=\"points\">\n<li><strong>One Way Data Binding</strong><br>\nIn one-way data binding, view (UI part) does not get updated automatically when the data model is changed. We need to write custom codes to make it updated every time. A directive ng-bind has one-way data binding. Here, value is taken from the data model and inserted into an HTML element.</li>\n</ul><img src=\"https://static.javatpoint.com/js/angularjs/images/one-way-data-binding.png\" alt=\"One Way Data Binding\"><ul class=\"points\">\n<li><strong>Two Way Data Binding</strong><br>\nIn two-way data binding, scope variable changes its value whenever the data model is allotted to a different value. It treats the model as the single-source-of-truth in the application. The view is a projection of the model at all time\ns. If the model is changed, the view reflects the change and vice versa.</li>\n</ul><img src=\"https://static.javatpoint.com/js/angularjs/images/two-way-data-binding.png\" alt=\"Two Way Data Binding\"></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 797
	},
	{
		"question" : "16) What tools are used to test web services?",
		"answer" : "<div> <p>The tools used to test web services are:</p><ul class=\"points\">\n<li><strong>SoapUI tool</strong> for testing SOAP and RESTful web services</li>\n<li><strong>Poster</strong> for firefox browser</li>\n<li><strong>Postman</strong> extension for Chrome</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 798
	},
	{
		"question" : "13) What are the services in AngularJS?",
		"answer" : "<div> <p>Services are objects that can be used to store and share data across the application. AngularJS offers many built-in services, and each of them is responsible for a specific task. They are always used with the prefix $ symbol.</p><p>Some of the important services used in any AngularJS application are as follows:</p><ul class=\"points\">\n<li><strong>$http-</strong> It is used to make an Ajax call to get the server data.</li>\n<li><strong>$window-</strong> It provides a reference to a DOM object.</li>\n<li><strong>$Location-</strong> It provides a reference to the browser location.</li>\n<li><strong>$timeout-</strong> It provides a reference to the window.set timeout function.</li>\n<li><strong>$Log-</strong> It is used for logging.</li>\n<li><strong>$sanitize-</strong> It is used to avoid script injections and display raw HTML in the page.</li>\n<li><strong>$Rootscope-</strong> It is used for scope hierarchy manipulation.</li>\n<li><strong>$Route-</strong> It is used to display browser-based path in browser's URL.</li>\n<li><strong>$Filter-</strong> It is used for providing filter access.</li>\n<li><strong>$resource-</strong> It is used to work with Restful API.</li>\n<li><strong>$document-</strong> It is used to access the window.Document object.</li>\n<li><strong>$exceptionHandler-</strong> It is used for handling exceptions.</li>\n<li><strong>$q-</strong> It provides a promise object.</li>\n<li><strong>$cookies-</strong> It is used for reading, writing, and deleting the browser's cookies.</li>\n<li><strong>$parse-</strong> It is used to convert an AngularJS expression into a function.</li>\n<li><strong>$cacheFactory-</strong> It is used to evaluate the specified expression when the user changes the input.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 799
	},
	{
		"question" : "17) What is the advantage of XML in web service?",
		"answer" : "<div> <p>In Web service, an XML is used to tag the data, format the data.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 800
	},
	{
		"question" : "9) What are the properties of XMLHttpRequest?",
		"answer" : "<div> <p>The important properties of the XMLHttpRequest object are given below.</p><ul class=\"points\">\n<li>onReadyStateChange - It is called whenever readystate attribute changes.</li>\n<li>readyState - It represents the state of the request.</li>\n<li>responseText - It returns response as text.</li>\n<li>responseXML - It returns response as XML.</li>\n<li>status - It returns the status number of a request.</li>\n<li>statusText - It returns the details of status.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 801
	},
	{
		"question" : "3) What are the disadvantages of AngularJS?",
		"answer" : "<div> <p>There are some drawbacks of AngularJS which are given below:</p><ul class=\"points\">\n<li><strong>JavaScript Dependent</strong><br>\nIf end-user disables JavaScript, AngularJS will not work.</li>\n<li><strong>Not Secured</strong><br>\nIt is a JavaScript-based framework, so it is not safe to authenticate the user through AngularJS only.</li>\n<li><strong>Time Consumption in Old Devices</strong><br>\nThe browsers on old computers and mobiles are not capable or take a little more time to render pages of application and websites designed using the framework. It happens because the browser performs some supplementary tasks like <strong>DOM (Document Object Model)</strong> manipulation.</li>\n<li><strong>Difficult to Learn</strong><br>\nIf you are new in AngularJS, then it will not be easy for you to deal with complex entities such as Quite layered, hierarchically and scopes. Debugging the scope is believed a tough task for many programmers.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 802
	},
	{
		"question" : "10) What are the important methods of XMLHttpRequest?",
		"answer" : "<div> <ul class=\"points\">\n<li>abort() - It is used to cancel the current request. </li>\n<li>getAllResponseHeaders() - It returns the header details. </li>\n<li>getResponseHeader() - It returns the specific header details. </li>\n<li>open() - It is used to open the request. </li>\n<li>send() - It is used to send the request.</li>\n<li>setRequestHeader() - It adds request header.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 803
	},
	{
		"question" : "4) Describe MVC in reference to angular.",
		"answer" : "<div> <p>AngularJS is based on MVC framework, where MVC stands for <strong>Model-View-Controller</strong>. MVCperforms the following operations:</p><ul class=\"points\">\n<li>A model is the lowest level of the pattern responsible for maintaining data.</li>\n<li>A controller is responsible for a view that contains the logic to manipulate that data. It is basically a software code which is used for taking control of the interactions between the Model and View.</li>\n<li>A view is the HTML which is responsible for displaying the data.</li>\n</ul><p><strong>For example,</strong> a $scope can be defined as a model, whereas the functions written in angular controller modifies the $scope and HTML displays the value of scope variable.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 804
	},
	{
		"question" : "14) What is the module in AngularJS?",
		"answer" : "<div> <p>A module is a container for the different parts of the application like a controller, services, filters, directives, etc. It is treated as a main() method. All the dependencies of applications are generally defined in modules only. A module is created using an angular object's module() method. <strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var app = angular.module('myApp', []);\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 805
	},
	{
		"question" : "15) What is routing in AngularJS?",
		"answer" : "<div> <p>Routing is one of the main features of the AngularJS framework, which is useful for creating a single page application (also referred to as SPA) with multiple views. It routes the application to different pages without reloading the application. In Angular, the <strong>ngRoute</strong> module is used to implement Routing. The ngView, $routeProvider, $route, and $routeParams are the different components of the ngRoute module, which help for configuring and mapping URL to views.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 806
	},
	{
		"question" : "16) What is a template in AngularJS?",
		"answer" : "<div> <p>A template consists of HTML, CSS, and AngularJS directives, which are used to render the dynamic view. It is more like a static version of a web page with some additional properties to inject and render that data at runtime. The templates are combined with information coming from model and controller.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 807
	},
	{
		"question" : "18) What is the usage of WSDL in a web service?",
		"answer" : "<div> <p>WSDL is used in web service to describe the availability of service.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 808
	},
	{
		"question" : "17) What are the expressions in AngularJS?",
		"answer" : "<div> <p>Expressions in AngularJS are the code snippets that resolve to a value. AngularJS expressions are placed inside {{expression}}. Expressions are included in the HTML elements.</p><p>AngularJS expressions can also contain various valid expressions similar to JavaScript expressions. We can also use the operators between numbers, including strings, literals, objects, and arrays inside the expression {{ }}. </p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">{{1+1}}\n{{Name + \" \" + email}} (string)\n{{ Country.Name }} (object)\n{{ fact[4] }} (array)\n</textarea></div><p>AngularJS supports one-time binding expressions.</p><img src=\"https://static.javatpoint.com/interview/images/angularjs-interview-questions-q17.png\" alt=\"AngularJS Interview Questions\"></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 809
	},
	{
		"question" : "11) What are the types of open() method used for XMLHttpRequest?",
		"answer" : "<div> <ul class=\"points\">\n<li>open(method, URL) - It opens the request specifying get or post method and URL. </li>\n<li>open(method, URL, async) - It is same as above but specifies asynchronous or not. </li>\n<li>open(method, URL, async, username, password) - It is same as above but specifies the username and password. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 810
	},
	{
		"question" : "12) What are the types of send() method used for XMLHttpRequest?",
		"answer" : "<div> <ul class=\"points\">\n<li>send() - It sends get request </li>\n<li>send(string) - It sends post request. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 811
	},
	{
		"question" : "19) What is Interoperability in Web services?",
		"answer" : "<div> <p>The Web services facilitate various applications to communicate with each other and share data and services among themselves. Other applications can also use the web services. For example, a VB or .NET application can communicate with a Java web services and vice versa. Web services are used to make the application platform and technology independent.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 812
	},
	{
		"question" : "18) What are the key differences between Angular expressions and JavaScript expressions?",
		"answer" : "<div> <p>The key differences between the Angular expressions and JavaScript expressions are given below:</p><table class=\"alt\">\n<tbody><tr>\n<th>Angular Expressions</th>\n<th>JavaScript Expressions</th>\n</tr>\n<tr>\n<td>Angular expressions do not support conditional statements, loops, and exceptions.</td>\n<td>JavaScript expressions support conditional statements, loops, and exceptions.</td>\n</tr>\n<tr>\n<td>Angular expressions support filters.</td>\n<td>JavaScript expressions do not support filters.</td>\n</tr>\n<tr>\n<td>Angular expressions can be written inside HTML.</td>\n<td>JavaScript expressions cannot be written inside HTML.</td>\n</tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 813
	},
	{
		"question" : "19) What is the use of filter in AngularJS?",
		"answer" : "<div> <p>A filter is used to format the value of the expression to display the formatted output. AngularJS allows us to write our own filter. Filters can be added to expressions by using the pipe character |, followed by a filter. <strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;div ng-app=\"myApp\" ng-controller=\"personCtrl\"&gt;\n&lt;p&gt;The name is {{ firstName | uppercase }}&lt;/p&gt;\n&lt;/div&gt;\n&lt;script&gt;\nangular.module('myApp', []).controller('personCtrl', function($scope) {    \n    $scope.firstName = \"Sonoo\",    \n    $scope.lastName = \"Jaiswal\"    \n});    \n&lt;/script&gt;\n</textarea></div><p>Filters can be applied in view templates, controllers, services and directives. It is important to know that filters are case-sensitive. There are some built-in filters provided by AngularJS such as <strong>Currency, Date, Filter, JSON, Limit, Lowercase, Number, Orderby, and Uppercase</strong>.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 814
	},
	{
		"question" : "20) What do you know about uppercase filter and lowercase filter in AngularJS?",
		"answer" : "<div> <p>Uppercase filters are used to convert a text to upper case text. <strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">Type first name:&lt;input type = \"text\" ng-model = \"student.firstName\"&gt;\nType last name: &lt;input type = \"text\" ng-model = \"student.lastName\"&gt;\nName in Upper Case: {{student.fullName() | uppercase}}\n</textarea></div><p>In above example, uppercase filter is added to an expression using pipe character. It will print student name in capital letters.</p><p>On the other side, lowercase filters are used to convert a text to lower case text. <strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">Type first name:&lt;input type = \"text\" ng-model = \"student.firstName\"&gt;\nType last name: &lt;input type = \"text\" ng-model = \"student.lastName\"&gt;\nName in Upper Case: {{student.fullName() | lowercase}}\n</textarea></div><p>It will print student name in lowercase letters.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 815
	},
	{
		"question" : "20) Explain the loosely coupled architecture of web services.",
		"answer" : "<div> <p>A consumer of a web service is not tied to that web service directly. The web service interface can change over time without compromising the client's ability to interact with the service. A tightly coupled system implies that the client and server logic are closely tied to one another, implying that if one interface changes, the other must be updated. Adopting a loosely coupled architecture tends to make software systems more manageable and facilitates simpler integration between different systems.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 816
	},
	{
		"question" : "21) Explain custom filters with an example.",
		"answer" : "<div> <p>We can create our own filters in AngularJS. It can be performed by associating the filter to our module. These types of filters are known as custom filters.</p><p>An example given below can be used to count the number of elements in the string by using the filter:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">angular.module('myCountFilterApp', [])\n   .filter('count',function()\n{\n    return(function(input)\n    {\n        var out=[];\n        out=input.split(',');\n        return out.length;\n    })\n});\n</textarea></div><p>As per above example, if the string is \"<strong>21, 34, 45</strong>\" then output after applying filter will be <strong>3</strong>.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 817
	},
	{
		"question" : "21) What are the advantages of having XML based Web services?",
		"answer" : "<div> <p>Using XML eliminates any networking, operating system, or platform binding. So Web Services based applications are highly interoperable application at their core level.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 818
	},
	{
		"question" : "22) Explain Currency filter in AngularJS. How can we use it?",
		"answer" : "<div> <p>The currency filter contains the \"$\" Dollar symbol as default. We can apply the following code as the html template format of Currency Filter.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">{{ currency_expression | currency : symbol : fractionSize}}\n</textarea></div><p>We can use Currency Filter by using the following methods:</p><ul class=\"points\">\n<li><strong>Default</strong><br>\nIf we do not provide any currency symbol, then Dollar sign will be used by default as shown below:<br>\n&lt;!-- by default --&gt;<br>\n<strong>Default Currency</strong>{{amount | currency}}</li>\n<li><strong>User-Defined</strong><br>\nTo use different types of currency symbols, we have to define our own symbol by applying the Hexa-Decimal code or Unicode of that Currency.<br>\nE.g., To define Indian Currency Symbol, then we have to use Unicode-value or Hexa-Decimal value.<br>\n<strong>Indian Currency</strong>{{amount | currency:\"&amp;# 8377\"}}</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 819
	},
	{
		"question" : "22) What do you mean by synchronicity?",
		"answer" : "<div> <p>Synchronicity is used to bind the client to the execution of the service. In synchronous invocations, the client blocks and waits for the service to complete its operation before continuing. On the other hand, synchronous operations facilitate a client to invoke a service and then execute different functions.</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 820
	},
	{
		"question" : "23) What do you understand by Dependency Injection in AngularJS?",
		"answer" : "<div> <p>Dependency Injection (also called DI) is one of the best features of AngularJS. It is a software design pattern where objects are passed as dependencies rather than hard coding them within the component. It is useful for removing hard-coded dependencies and making dependencies configurable. To retrieve the required elements of the application that need to be configured when the module is loaded, the \"config\" operation uses Dependency Injection. It allows separating the concerns of different components in an application and provides a way to inject the dependent component into the client component. By using Dependency Injection, we can make components maintainable, reusable, and testable.</p><p>A simple case of dependency injection in AngularJS is shown below:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">myApp.controller('myController', function ($scope, $http, $location)\n    {\n        //logic \n    });\n</textarea></div><p>Here, a controller is declared with its dependencies.</p><p>AngularJS provides the following core components which can be injected into each other as dependencies:</p><ul class=\"points\">\n<li>Value</li>\n<li>Factory</li>\n<li>Service</li> \n<li>Provider</li>\n<li>Constant</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 821
	},
	{
		"question" : "43) How will you explain Manual Bootstrap Process in AngularJS?",
		"answer" : "<div> <p>Sometimes, we may need to manually initialize the Angular application to have more control over the initialization process. We can perform such task using <strong>angular.bootstrap()</strong> function within <strong>angular.element(document).ready()</strong> function. AngularJS uses this function when the DOM is ready for manipulation.</p><p>The angular.bootstrap() function uses two parameters, the document, and the module name injector.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 822
	},
	{
		"question" : "23) What is the usage of Service Transport Layer in Web service protocol stack?",
		"answer" : "<div> <p>The Service Transport Layer is used to transport messages between applications. </p><p>This layer includes Hypertext Transport Protocol (HTTP), Simple Mail Transfer Protocol (SMTP), File Transfer Protocol (FTP), and newer protocols like Blocks Extensible Exchange Protocol (BEEP). </p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 823
	},
	{
		"question" : "44) What do you understand by $watch?",
		"answer" : "<div> <p>In angularJS, $watch() function is used to watch the changes of variable in $scope object. Generally, the $watch() function is created internally to handle variable changes in the application.</p><p>If there is a need to create custom watch for some specific action then it's better to use $scope.watch function. The <strong>$scope.watch()</strong> function is used to create a watch of some variable. When we register a watch, we pass two functions as parameters to the $watch() function:</p><ul class=\"points\">\n<li>A value function</li>\n<li>A listener function</li>\n</ul><p>An example is given below:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$scope.$watch(function() {},\n              function() {}\n             );\n</textarea></div><p>Here, the first function is the value function and the second function is the listener function.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 824
	},
	{
		"question" : "24) What is the usage of Service Description layer in Web Service Protocol Stack?",
		"answer" : "<div> <p>The Service Description layer is used to describe the public interface to a specific web service. Currently, service description is handled via the Web Service Description Language (WSDL).</p></div>",
		"category" : "Web",
		"sub_category" : "Web Serv-",
		"id" : 825
	},
	{
		"question" : "13) What is the role of the callback function in AJAX?",
		"answer" : "<div> <p>The callback function passes a function as a parameter to another function. If we have to perform various AJAX tasks on a website, then we can create one function for executing XMLHttpRequest and a callback function to execute each AJAX task.</p><img src=\"images/ajax/howajaxworks.png\" alt=\"how ajax works, flow of ajax\"></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 826
	},
	{
		"question" : "24) What do you understand by validation of data in AngularJS?",
		"answer" : "<div> <p>AngularJS enriches form filling and validation. AngularJS provides client-side form validation. It checks the state of the form and input fields (input, text-area, select), and notify the user about the current state. It also holds the information about whether the input fields have been touched, or modified, or not.</p><p>There are following directives that can be used to track error:</p><ul class=\"points\">\n<li><strong>$dirty</strong><br>\nIt states that the value has been changed.</li>\n<li><strong>$invalid</strong><br>\nIt states that the value which is entered is invalid.</li>\n<li><strong>$error</strong><br>\nIt states the exact error.</li>\n</ul><p>Moreover, we can use <strong>novalidate</strong> with a form declaration to disable the browser's native form validation.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 827
	},
	{
		"question" : "14) What is JSON in AJAX?",
		"answer" : "<div> <p>JSON stands for JavaScript Object Notation. In AJAX, it is used to exchange data between a browser and a server. It is easy to understand, and data exchange is faster than XML. It supports array, object, string, number, and values.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">request.onreadystatechange  = function(){  \n      if (request.readyState == 4  )  \n      {  \n        var jsonObj = JSON.parse(request.responseText);//JSON.parse() returns JSON object  \n        document.getElementById(\"date\").innerHTML =  jsonObj.date;  \n        document.getElementById(\"time\").innerHTML = jsonObj.time;  \n      }  \n   }\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 828
	},
	{
		"question" : "25) What do you understand by linking function? Explain its type.",
		"answer" : "<div> <p>Link is used for combining the directives with a scope and producing a live view. The link function is used for registering DOM listeners as well as updating the DOM. The linking function is executed as soon as the template is cloned.</p><p>There are two types of linking function:</p><ul class=\"points\">\n<li><strong>Pre linking function</strong><br>\nPre-linking functions are executed before the child elements are linked. This method is not considered as a safe way for DOM transformation.</li>\n<li><strong>Post linking function</strong><br>\nPost-linking functions are executed after the child elements are linked. This method is a safe way for DOM transformation.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 829
	},
	{
		"question" : "45) What are the different types of directives available in AngularJS?",
		"answer" : "<div> <p>AngularJS provides support for creating custom directives for the following type of elements:</p><ul class=\"points\">\n<li><strong>Element Directive</strong><br>\nElement directives are activated when a matching element is encountered.\n</li><li><strong>Attribute</strong><br>\nAttribute directives are activated when a matching attribute is encountered.</li>\n<li><strong>CSS</strong><br>\nCSS directives are activated when a matching CSS style is encountered.</li>\n<li><strong>Comment</strong><br>\nComment directives are activated when a matching comment is encountered.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 830
	},
	{
		"question" : "46) Explain the compilation process of AngularJS?",
		"answer" : "<div> <p>Angular's HTML compiler allows us to teach the browser, new HTML syntax. It also allows the developer to attach new behavior or attributes to any HTML element known as directives. AngularJS compilation process automatically takes place in the web browser. It does not contain any server-side or pre-compilation procedure.</p><p>AngularJS uses &lt;$compiler&gt; service for the compilation process of an Angular HTML page. Its compilation process starts after the HTML page (static DOM) is completely loaded.</p><p>It occurs in two phases:</p><ul class=\"points\">\n<li><strong>Compile</strong><br>\nIt checks into the entire DOM and collects all of the directives.\n</li><li><strong>Link</strong><br>\nIt connects the directives with a scope and produces a live view.</li>\n</ul><p>The concept of compile and link has been added from C language. The code is compiled and then linked.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 831
	},
	{
		"question" : "47) What is the Global API in AngularJS?",
		"answer" : "<div> <p>Global API is the combination of global JavaScript function, which is used to perform tasks such as comparing objects, iterating objects, and converting the data.</p><p>There are a few common API functions like:</p><ul class=\"points\">\n<li><strong>angular.lowercase</strong><br>\nIt is used to convert a string to lowercase string.</li>\n<li><strong>angular.uppercase</strong><br>\nIt is used to convert a string to uppercase string.</li>\n<li><strong>angular.IsString</strong><br>\nIt returns true if the current reference is a string.</li>\n<li><strong>angular.IsNumber</strong><br>\nIt returns true if the current reference is a number.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 832
	},
	{
		"question" : "15) What are the tools for debugging AJAX applications?",
		"answer" : "<div> <p>There are several tools for debugging AJAX applications.</p><ul class=\"points\">\n<li>Firebug for Mozilla Firefox</li>\n<li>Fiddler for IE (Internet Explorer)</li>\n<li>JavaScript HTML Debugger</li>\n<li>MyEclipse AJAX Tools</li>\n<li>Script Debugger</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 833
	},
	{
		"question" : "26) What do you know about injector?",
		"answer" : "<div> <p>An injector is referred to as a service locator. It is used to receive object instances as defined by the providers, invoke methods, instantiate types, and load modules. Each Angular application consists of a single injector which helps to look upon an instance by its name.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 834
	},
	{
		"question" : "16) What are the types of post back in AJAX?",
		"answer" : "<div> <p>There are two types of post back in AJAX.</p><ul class=\"points\">\n<li>Synchronous Postback - It blocks the client until the operation completes.</li>\n<img src=\"images/ajax/synchronousrequest.jpg\" alt=\"how synchronous request works\">\n<li>Asynchronous Postback - It doesn?t block the client.</li>\n<img src=\"images/ajax/asynchronousrequest.jpg\" alt=\"how asynchronous request works\">\n</ul></div>",
		"category" : "Web",
		"sub_category" : "AJAX",
		"id" : 835
	},
	{
		"question" : "48) Is AngularJS well-suited with all browsers?",
		"answer" : "<div> <p>Yes, AngularJS is supported with all the browsers like Safari, Chrome, Mozilla, Opera, and Internet Explorer, etc. It is also companionable with mobile browsers.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 836
	},
	{
		"question" : "27) What is the factory method in AngularJS?",
		"answer" : "<div> <p>Factory method is used for creating a directive. Whenever the compiler matches the directive for the first time, the factory method is invoked. Factory method is invoked using $injector.invoke.</p><p><strong>Syntax</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">module.factory('factoryName', function);\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 837
	},
	{
		"question" : "49) ''How are AngularJS prefixes $ and $$ used?",
		"answer" : "<div> <p>$$ prefix in AngularJS is used as a private variable, as it is responsible for preventing accidental code collision with the user code.</p><p>Whereas, $ prefix is used to define angular core functionalities such as variable, parameter, property or method, etc.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 838
	},
	{
		"question" : "50) How can someone set, get, and clear cookies in AngularJS?",
		"answer" : "<div> <p>AngularJS has a module known as ngCookies. Before we inject ngCookies, we should include angular-cookies.js into the application.</p><ul class=\"points\">\n<li><strong>Set Cookies</strong><br>\nWe can use the put method to set cookies in a key-value format.</li>\n</ul><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$cookies.put(\"username\", $scope.username);\n</textarea></div><ul class=\"points\">\n<li><strong>Get Cookies</strong><br>\nWe can use the get method to get cookies.</li>\n</ul><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$cookies.get('username');\n</textarea></div><ul class=\"points\">\n<li><strong>Clear Cookies</strong><br>\nWe can use the remove method to remove or clear cookies.</li>\n</ul><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$cookies.remove('username');\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 839
	},
	{
		"question" : "28) How will you explain the concept of hierarchy? How many scopes can an application have?",
		"answer" : "<div> <p>Each Angular application contains one root scope, but there can be several child scopes. The application may have multiple scopes because child controllers and some directives create new child scopes. When the new scope is formed or created, it is added as a child of the parent scope. As similar to DOM, scopes also create a hierarchical structure.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 840
	},
	{
		"question" : "1) What is Node.js?",
		"answer" : "<div> <p>Node.js is Server-side scripting which is used to build scalable programs. It is a web application framework built on Google Chrome's JavaScript Engine. It runs within the Node.js runtime on Mac OS, Windows, and Linux with no changes. This runtime facilitates you to execute a JavaScript code on any machine outside a browser. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 841
	},
	{
		"question" : "29) Explain how logs are maintained in AngularJS?",
		"answer" : "<div> <p>Logs can be maintained using <strong>$log</strong> service. The main purpose of $log service is to help in debugging and troubleshooting. It is done with the help of the following methods.</p><ul class=\"points\">\n<li><strong>log()-</strong> It writes a log message in the console.</li>\n<li><strong>info()-</strong> It writes an information message.</li>\n<li><strong>warn()-</strong> It writes a warning message.</li>\n<li><strong>error()-</strong> It writes an error message.</li>\n<li><strong>debug()-</strong> It writes a debug message.</li>\n</ul><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$log.error('this will displayed as an error in console')\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 842
	},
	{
		"question" : "2) Is Node.js free to use?",
		"answer" : "<div> <p>Yes. It is released under MIT license and is free to use. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 843
	},
	{
		"question" : "30) What is the main purpose of find index in AngularJS, and what does it return if no value is found?",
		"answer" : "<div> <p>Find index is used to return the position of an element. It returns the value (-1) if the requested element is not found.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var index = $scope.items.findIndex(record =&gt; record.date =='2018-12-12');\n</textarea></div><p>In the given code, index of the object is returned where item.date=2018-12-12.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 844
	},
	{
		"question" : "15) How is Node.js better than other most popular frameworks?",
		"answer" : "<div> <p>Based on the following criteria, we can say that Node.js is better than other most popular frameworks:</p><ul class=\"points\">\n<li>js makes development simple because of its non-blocking I/O and even-based model. This simplicity results in short response time and concurrent processing, unlike other frameworks where developers use thread management.</li>\n<li>js runs on a chrome V8 engine which is written in C++. It enhances its performance highly with constant improvement.</li>\n<li>With Node.js, we will use JavaScript in both the frontend and backend development that will be much faster.</li>\n<li>js provides ample libraries so that we don't need to reinvent the wheel.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 845
	},
	{
		"question" : "3) Is Node a single threaded application?",
		"answer" : "<div> <p>Yes. Node is a single-threaded application with event looping. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 846
	},
	{
		"question" : "16) In which types of applications is Node.js most frequently used?",
		"answer" : "<div> <p>Node.js is most frequently and widely used in the following applications:</p><ul class=\"points\">\n<li>Internet of Things</li>\n<li>Real-time collaboration tools</li>\n<li>Real-time chats</li>\n<li>Complex SPAs (Single-Page Applications)</li>\n<li>Streaming applications</li>\n<li>Microservices architecture etc.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 847
	},
	{
		"question" : "17) What are some commonly used timing features of Node.js?",
		"answer" : "<div> <p>Following is a list of some commonly used timing features of Node.js:</p><ul class=\"points\">\n<li><strong>setTimeout/clearTimeout:</strong> This timing feature of Node.js is used to implement delays in the code execution.</li>\n<li><strong>setInterval/clearInterval:</strong> The setInterval or clearInterval timing feature is used to run a code block multiple times in the application.</li>\n<li><strong>setImmediate/clearImmediate:</strong> This timing feature of Node.js is used to set the execution of the code at the end of the event loop cycle.</li>\n<li><strong>nextTick:</strong> This timing feature sets the execution of code at the beginning of the next event loop cycle.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 848
	},
	{
		"question" : "4) What is the purpose of Node.js?",
		"answer" : "<div> <p>These are the following purposes of Node.js:</p><ul class=\"points\">\n<li>Real-time web applications</li>\n<li>Network applications</li>\n<li>Distributed systems</li>\n<li>General purpose applications</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 849
	},
	{
		"question" : "5) What are the advantages of Node.js?",
		"answer" : "<div> <p>Following are the main advantages of Node.js:</p><ul class=\"points\">\n<li>Node.js is asynchronous and event-driven. All API?s of Node.js library are non-blocking, and its server doesn't wait for an API to return data. It moves to the next API after calling it, and a notification mechanism of Events of Node.js responds to the server from the previous API call.</li>\n<li>Node.js is very fast because it builds on Google Chrome?s V8 JavaScript engine. Its library is very fast in code execution. </li>\n<li>Node.js is single threaded but highly scalable. </li>\n<li>Node.js provides a facility of no buffering. Its application never buffers any data. It outputs the data in chunks. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 850
	},
	{
		"question" : "18) What do you understand by the term fork in Node.js?",
		"answer" : "<div> <p>Generally, a fork is used to spawn child processes. In Node.js, it is used to create a new instance of the V8 engine to run multiple workers to execute the code. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 851
	},
	{
		"question" : "7) What do you understand by the term I/O? ",
		"answer" : "<div> <p>A web application distinguishes into 4 layers:</p><ul class=\"points\">\n<li><strong>Client Layer:</strong> The Client layer contains web browsers, mobile browsers or applications which can make an HTTP request to the web server.</li>\n<li><strong>Server Layer:</strong> The Server layer contains the Web server which can intercept the request made by clients and pass them the response.</li>\n<li><strong>Business Layer:</strong> The business layer contains application server which is utilized by the web server to do required processing. This layer interacts with the data layer via database or some external programs.</li>\n<li><strong>Data Layer:</strong> The Data layer contains databases or any source of data.</li>\n</ul><img src=\"https://static.javatpoint.com/js/nodejs/images/nodejs-web-layer.png\" alt=\"Node.js web layer\"><p>The term I/O stands for input and output. It is used to access anything outside of your application. The I/O describes any program, operation, or device that transfers data to or from a medium or another medium. This medium can be a physical device, network, or files within a system.</p><p>I/O is loaded into the machine memory to run the program once the application starts.</p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 852
	},
	{
		"question" : "8) How many types of API functions are available in Node.js?",
		"answer" : "<div> <p>There are two types of API functions in Node.js:</p><ul class=\"points\">\n<li>Asynchronous, Non-blocking functions</li>\n<li>Synchronous, Blocking functions</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 853
	},
	{
		"question" : "9) What do you understand by the first class function in JavaScript?",
		"answer" : "<div> <p>When functions are treated like any other variable, then those functions are called first-class functions. Apart from JavaScript, many other programming languages, such as Scala, Haskell, etc. follow this pattern. The first class functions can be passed as a param to another function (callback), or a function can return another function (higher-order function). Some examples of higher-order functions that are popularly used are map() and filter(). </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 854
	},
	{
		"question" : "19) Which is the best tool we can use to assure consistent code style in Node.js?",
		"answer" : "<div> <p>ESLint tool is one of the best tools we can use with any IDE to ensure a consistent coding style. It also helps in maintaining the codebase. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 855
	},
	{
		"question" : "20) What is the main difference between front-end and back-end development? ",
		"answer" : "<div> <p>The following table specifies the key differences between a front-end and back-end development: </p><table class=\"alt\">\n<tbody><tr>\n<th>Front-end Development</th>\n<th>Back-end Development</th>\n</tr>\n<tr>\n<td>The front-end development in an application refers to the client-side of an application.</td>\n<td>The back-end development in an application refers to the server-side of an application.</td>\n</tr>\n<tr>\n<td>As the name specifies, the front-end development is the part of a web application where users can see and interact.\t</td>\n<td>As the name specifies, the back-end development consists of everything that happens behind the scenes and users cannot see and interact with.</td>\n</tr>\n<tr>\n<td>The front-end development includes everything that attributes to the visual aspects of a web application.</td>\n<td>The back-end development generally includes a web server that communicates with the database to serve the users' requests.</td>\n</tr>\n<tr>\n<td>HTML, CSS, Bootstrap, jQuery, JavaScript, AngularJS, and React.js are essential front-end development technologies.</td>\n<td>Java, PHP, Python, C++, Node.js, etc., are the technologies required for back-end development.</td>\n</tr>\n<tr>\n<td>Examples of some front-end frameworks are AngularJS, React.js, jQuery, Sass, etc.</td>\n<td>Examples of some back-end frameworks are Express, Django, Rails, Laravel, Spring, etc.</td>\n</tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 856
	},
	{
		"question" : "21) Give an example to demonstrate how can we use async await in Node.js? ",
		"answer" : "<div> <p>See the following example of using async-await pattern:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">function wait (timeout) {\n return new Promise((resolve) =&gt; {\nsetTimeout(() =&gt; {\n  resolve()\n}, timeout);\n });\n}\nasync function requestWithRetry (url) {\n const MAX_RETRIES = 10;\n for (let i = 0; i &lt;= MAX_RETRIES; i++) {\ntry {\n  return await request(url);\n} catch (err) {\n  const timeout = Math.pow(2, i);\n  console.log('Waiting', timeout, 'ms');\n  await wait(timeout);\n  console.log('Retrying', err.message, i);\n}\n }\n}\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 857
	},
	{
		"question" : "10) What is the difference between JavaScript and Node.js?",
		"answer" : "<div> <p><strong>Difference between JavaScript and Node.js</strong></p><p>The following table specifies the crucial differences between JavaScript and Node.js:</p><table class=\"alt\">\n<tbody><tr>\n<th>Comparison features</th>\n<th>JavaScript</th>\n<th>Node.js</th>\n</tr>\n<tr>\n<td>Type</td>\n<td>JavaScript is a programming language. More precisely, you can say that it is a scripting language used for writing scripts on the website.</td>\n<td>Node.js is an interpreter and run time environment for JavaScript.</td>\n</tr>\n<tr>\n<td>Utility</td>\n<td>JavaScript is used for any client-side activity for a web application.</td>\n<td>Node.js is used for accessing or performing any non-blocking operation of any operating system.</td>\n</tr>\n<tr>\n<td>Running Engine</td>\n<td>The running engine for JavaScript is Spider monkey (Firefox), JavaScript Core (Safari), V8 (Google Chrome), etc.</td>\n<td>The running engine for Node.js is V8 (Google Chrome).</td>\n</tr>\n<tr>\n<td>Browser compatibility</td>\n<td>JavaScript can only be run in browsers.</td>\n<td>The Node.js code can be run outside the browser.</td>\n</tr>\n<tr>\n<td>Platform dependency</td>\n<td>JavaScript is basically used on the client-side and is used in frontend development.</td>\n<td>Node.js is mostly used on the server-side and is used in server-side development.</td>\n</tr>\n<tr>\n<td>HTML compatibility</td>\n<td>JavaScript is capable enough to add HTML and play with the DOM.</td>\n<td>Node.js is not compatible enough to add HTML tags.</td>\n</tr>\n<tr>\n<td>Examples</td>\n<td>Some examples of the JavaScript frameworks are RamdaJS, TypedJS, etc.</td>\n<td>Some examples of the Node.js modules are Lodash, express, etc. We have to import these modules from npm.</td>\n</tr>\n<tr>\n<td>Written in</td>\n<td>JavaScript is the upgraded version of ECMA script that uses Chrome's V8 engine and is written in C++.</td>\n<td>Node.js is written in C, C++, and Javascript.</td>\n</tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 858
	},
	{
		"question" : "11) Explain the working of Node.js? ",
		"answer" : "<div> <p>The workflow of a Node.js web server typically looks like the following diagram. Let us see the flow of operations in detail: </p><img src=\"https://static.javatpoint.com/interview/images/node-js-interview-questions-q11.png\" alt=\"Node.js Interview Questions\"><ul class=\"points\">\n<li>According to the above diagram, the clients send requests to the webserver to interact with the web application. These requests can be non-blocking or blocking and used for querying the data, deleting data, or updating the data.</li>\n<li>js receives the incoming requests and adds those to the Event Queue.</li>\n<li>After this step, the requests are passed one by one through the Event Loop. It checks if the requests are simple enough not to require any external resources.</li>\n<li>The event loop then processes the simple requests (non-blocking operations), such as I/O Polling, and returns the responses to the corresponding clients.</li>\n<li>A single thread from the Thread Pool is assigned to a single complex request. This thread is responsible for completing a particular blocking request by accessing external resources, such as computation, database, file system, etc.</li>\n<li>Once the task is completed, the response is sent to the Event Loop that sends that response back to the client.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 859
	},
	{
		"question" : "22) What are the modules in Node.js? Which are the different modules used in Node.js? ",
		"answer" : "<div> <p>In Node.js applications, modules are like JavaScript libraries and include a set of functions. To include a module in a Node.js application, we must use the require() function with the parentheses containing the module's name.</p><p>Node.js has several modules which are used to provide the basic functionality needed for a web application. Following is a list of some of them:</p><table class=\"alt\">\n<tbody><tr>\n<th>Core Modules</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>HTTP:</td>\n<td>The HTTP module includes classes, methods, and events to create a Node.js HTTP server.</td>\n</tr>\n<tr>\n<td>util:</td>\n<td>The util module includes utility functions required in the application and is very useful for developers.</td>\n</tr>\n<tr>\n<td>url:</td>\n<td>The url module is used to include the methods for URL parsing.</td>\n</tr>\n<tr>\n<td>fs:</td>\n<td>The fs module includes events, classes, and methods to handle the file I/O operations.</td>\n</tr>\n<tr>\n<td>stream:</td>\n<td>The stream module is used to include the methods to handle streaming data.</td>\n</tr>\n<tr>\n<td>query string:</td>\n<td>The query string module is used to include the methods to work with a query string.</td>\n</tr>\n<tr>\n<td>zlib:</td>\n<td>The zlib module is used to include the methods to compress or decompress the files used in an application.</td>\n</tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 860
	},
	{
		"question" : "23) What are buffers in Node.js?",
		"answer" : "<div> <p>In general, a buffer is a temporary memory mainly used by the stream to hold on to some data until it is consumed. Buffers are used to represent a fixed-size chunk of memory allocated outside of the V8 JavaScript engine. It can't be resized. It is like an array of integers, which each represents a byte of data. It is implemented by the Node. js Buffer class. Buffers also support legacy encodings like ASCII, utf-8, etc.</p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 861
	},
	{
		"question" : "12) How can you manage the packages in your Node.js project?",
		"answer" : "<div> <p>We can manage the packages in our Node.js project by using several package installers and their configuration file accordingly. Most of them use npm or yarn. The npm and yarn both provide almost all libraries of JavaScript with extended features of controlling environment-specific configurations. We can use package.json and package-lock.json to maintain versions of libs being installed in a project. So, there is no issue in porting that app to a different environment. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 862
	},
	{
		"question" : "24) What is error-first callback?",
		"answer" : "<div> <p>Error-first callbacks are used to pass errors and data. If something goes wrong, the programmer has to check the first argument because it is always an error argument. Additional arguments are used to pass data.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">fs.readFile(filePath, function(err, data) {  \n  if (err) {\n    //handle the error\n  }\n  // use the data object\n});\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 863
	},
	{
		"question" : "13) Why is Node.js Single-threaded?",
		"answer" : "<div> <p>Node.js is a single-threaded application with event looping for async processing. The biggest advantage of doing async processing on a single thread under typical web loads is that you can achieve more performance and scalability than the typical thread-based implementation. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 864
	},
	{
		"question" : "25) What is an asynchronous API?",
		"answer" : "<div> <p>All the API's of Node.js library are asynchronous means non-blocking. A Node.js based server never waits for an API to return data. The Node.js server moves to the next API after calling it, and a notification mechanism of Events of Node.js responds to the server for the previous API call.</p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 865
	},
	{
		"question" : "14) What do you understand by callback hell in Node.js?",
		"answer" : "<div> <p>Callback hell is a phenomenon that creates a lot of problems for a JavaScript developer when he tries to execute multiple asynchronous operations one after the other. A function is called an asynchronous function when some external activity must complete before processing a result. It is called asynchronous because there is an unpredictable amount of time before a result becomes available. These functions require a callback function to handle errors and process the result.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">getData(function(a){\n    getMoreData(a, function(b){\n        getMoreData(b, function(c){ \n            getMoreData(c, function(d){ \n\t            getMoreData(d, function(e){ \n\t\t            ...\n\t\t        });\n\t        });\n        });\n    });\n});\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 866
	},
	{
		"question" : "42) What is the role of assert in Node.js?",
		"answer" : "<div> <p>The Node.js Assert is a way to write tests. It provides no feedback when running your test unless one fails. The assert module provides a simple set of assertion tests that can be used to test invariants. The module is intended for internal use by Node.js, but can be used in application code via require ('assert'). For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">    var assert = require('assert');  \n    function add (a, b) {  \n      return a + b;  \n    }  \n    var expected = add(1,2);  \n    assert( expected === 3, 'one plus two is three');   \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 867
	},
	{
		"question" : "43) What are the streams in Node.js?",
		"answer" : "<div> <p>The Streams are the objects that facilitate you to read data from a source and write data to a destination. There are four types of streams in Node.js:</p><ul class=\"points\">\n<li><strong>Readable:</strong> This stream is used for reading operations. </li>\n<li><strong>Writable:</strong> This stream is used for write operations.</li>\n<li><strong>Duplex:</strong> This stream can be used for both reading and write operations. </li>\n<li><strong>Transform:</strong> It is a type of duplex stream where the output computes according to input.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 868
	},
	{
		"question" : "44) What is event-driven programming in Node.js?",
		"answer" : "<div> <p>In Node.js, event-driven programming means as soon as Node starts its server, it initiates its variables, declares functions and then waits for an event to occur. It is one of the reasons why Node.js is pretty fast compared to other similar technologies. </p><img src=\"https://static.javatpoint.com/js/nodejs/images/nodejs-events1.png\" alt=\"Node.js events 1\"></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 869
	},
	{
		"question" : "45) What is the difference between events and callbacks in Node.js?",
		"answer" : "<div> <p>Although, Events and Callbacks look similar the differences lies in the fact that callback functions are called when an asynchronous function returns its result whereas event handling works on the observer pattern. Whenever an event gets fired, its listener function starts executing. Node.js has multiple in-built events available through the events module and EventEmitter class which is used to bind events and event listeners.</p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 870
	},
	{
		"question" : "46) What is the Punycode in Node.js?",
		"answer" : "<div> <p>The Punycode is an encoding syntax which is used to convert Unicode (UTF-8) string of characters to ASCII string of characters. It is bundled with Node.js v0.6.2 and later versions. If you want to use it with other Node.js versions, then use npm to install Punycode module first. You have to used require ('Punycode') to access it. </p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">    punycode = require('punycode');\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 871
	},
	{
		"question" : "47) What does Node.js TTY module contains?",
		"answer" : "<div> <p>The Node.js TTY module contains tty.ReadStream and tty.WriteStream classes. In most cases, there is no need to use this module directly. You have to used require ('tty') to access this module. </p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var tty = require('tty'); \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 872
	},
	{
		"question" : "48) What are the key differences between Angular and Node.js?",
		"answer" : "<div> <p>Key differences between Angular and Node.js:</p><table class=\"alt\">\n<tbody><tr>\n<th>Angular</th> \n<th>Node.js</th>\n</tr>\n<tr>\n<td>Angular is a structural front-end development framework for developing dynamic web apps.</td>\n<td>Node.js is a cross-platform, run-time, server-side environment for applications written in JavaScript language.</td>\n</tr>\n<tr>\n<td>Angular is entirely written in TypeScript language.</td>\n<td>Node.js is written in C, C++, and JavaScript languages.</td>\n</tr>\n<tr>\n<td>Angular is used for building single-page, client-side web applications.</td>\n<td>Node.js is used for building fast and scalable, client-side, and server-side networking applications.</td>\n</tr>\n<tr>\n<td>Angular is easy to use. The developers need to add the Angular file to use it in their applications.</td>\n<td>Node.js is slightly complicated to use. Here, the developers need to install Node.js on their computer system.</td>\n</tr>\n<tr>\n<td>Angular split a web application into MVC components. Here, the models and views are much simpler than what is found in other JavaScript client-side frameworks.</td>\n<td>Node.js generates database queries and uses the event-driven nature of JavaScript to support non-blocking operations, making the platform efficient.</td>\n</tr>\n<tr>\n<td>Angular is based on the model-view-controller design pattern and follows that pattern completely.</td>\n<td>Node.js is single-threaded. It means the web requests and processing runs on the same thread.</td>\n</tr>\n<tr>\n<td>Angular is a Web Framework.</td>\n<td>Node.js provides different Web Frameworks like Socket.io, Hapi.js, Meteor.js, Express.js, and Sails.js, etc.</td>\n</tr>\n<tr>\n<td>Angular is ideal for creating highly active and interactive web apps.</td>\n<td>Node.js is the best for developing small-size projects.</td>\n</tr>\n<tr>\n<td>Angular requires a deep understanding of prototyping, scope, and various other JavaScript aspects.</td>\n<td>Node.js facilitates developers to use JavaScript on the client as well as the server-side. So, they can focus on learning one language.</td>\n</tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 873
	},
	{
		"question" : "49) What are the main differences between operational and programmer errors? ",
		"answer" : "<div> <p>The most crucial difference between operational and programmer errors is that the operational errors are not bugs but problems with the system such as to request timeout or hardware failure. On the other hand, the programmer errors are actual bugs in the application.</p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 874
	},
	{
		"question" : "50) What do you understand by an EventEmitter in Node.js? ",
		"answer" : "<div> <p>In Node.js, an EventEmitter is a class that includes all the objects capable of emitting events. This can be achieved by attaching named events that are emitted by the object using an eventEmitter.on() function. Thus whenever this object throws an event, the attached functions are invoked synchronously.</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">const EventEmitter = require('events');\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\nmyEmitter.on('event', () =&gt; {\n console.log('an event occurred!');\n});\nmyEmitter.emit('event');\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 875
	},
	{
		"question" : "51) What is the difference between readFile and createReadStream in Node.js? ",
		"answer" : "<div> <p>In Node.js, there are two ways to read and execute files: readFile and CreateStream.</p><ul class=\"points\">\n<li>The readFile() process is a fully buffered process that returns the response only when the complete file is pushed into the buffer and is read. This process is called a memory-intensive process, and in the case of large files, the processing can be very slow.</li>\n<li>On the other hand, the createReadStream() is a partially buffered process that treats the entire process as an event series. The entire file is split into chunks and then processed and sent back as a response one by one. After completing this step, they are finally removed from the buffer. Unlike the readFile process, the createReadStream process is effective for the processing of large files.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 876
	},
	{
		"question" : "52) What is the concept of Punycode in Node.js?",
		"answer" : "<div> <p>In Node.js, the concept of Punycode is used for converting one type of string into another type. Punycode is an encoding syntax used for converting Unicode (UTF-8) string of characters into a basic ASCII string of characters. Now, the hostnames can only understand the ASCII characters so, after the Node.js version 0.6.2 onwards, it was bundled up with the default Node package.</p><p>To use it with any previous versions, you have to use the following code:</p><p><strong>Syntax:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">punycode = require('punycode');\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 877
	},
	{
		"question" : "53) How can you enhance the Node.js performance through clustering? ",
		"answer" : "<div> <p>Just because the Node.js applications run on a single processor, they don't take advantage of a multiple-core system by default. Clustering is used to overcome this issue. The cluster mode is used to start up multiple node.js processes, thereby having multiple instances of the event loop. When we start using clusters in a Node.js app, it creates multiple node.js processes. But there is also a parent process called the cluster manager, which is responsible for monitoring the health of the individual instances of the application.</p><img src=\"https://static.javatpoint.com/interview/images/node-js-interview-questions-q53.png\" alt=\"Node.js Interview Questions\"></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 878
	},
	{
		"question" : "54) What is a thread pool in Node.js? Which library handles it?",
		"answer" : "<div> <p>In Node.js, the libuv library is used to handle the Thread pool. The libuv library is a multi-platform C library that supports asynchronous I/O-based operations such as file systems, networking, and concurrency. </p><img src=\"https://static.javatpoint.com/interview/images/node-js-interview-questions-q54.png\" alt=\"Node.js Interview Questions\"></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 879
	},
	{
		"question" : "1) What is Backbone.js? Explain in detail.",
		"answer" : "<div> <h1 class=\"h1\">Backbone.js Interview Questions</h1><img src=\"https://static.javatpoint.com/interview/images/backbone-js-interview-questions.png\" alt=\"Backbone.js Interview Questions\" class=\"imageright\"><p>A list of top frequently asked <strong>Backbone.js interview questions</strong> and answers are given below. </p><p>Backbone.js is a light weighted client-side (front-end) web framework based on JavaScript. It is used to develop client-side applications which run on a web browser. Developing client-side applications in Backbone.js is pretty easy and consumes a lesser amount of time. It makes developing single-page applications also easier. It supports MVC (Model, View, and Controller) architecture.</p><ul class=\"points\">\n<li><strong>Model:</strong> Model is a part of the code that populates and retrieves the data</li>\n<li><strong>View:</strong> View is nothing but the HTML representation of this model. If you make any model changes, this will instantly reflect in the View.</li>\n<li><strong>Controller:</strong> The controller makes you able to save your JavaScript application via an URL.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 880
	},
	{
		"question" : "2) In which language, Backbone.js is written?",
		"answer" : "<div> <p>The backbone.js is written in JavaScript. It is a JavaScript library that contains a RESTful JSON interface. </p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 881
	},
	{
		"question" : "3) What are the main components of Backbone.js?",
		"answer" : "<div> <p> Main components of Backbone.js:</p><ul class=\"points\">\n<li>Model - It performs various types of action on the data like validation, conversion, computed properties, access control.</li>\n<li>View - It specifies how your data looks like.</li>\n<li>Collection - It handles the loading and saving of new models to the server.</li>\n<li>Router - It is used for routing client-side applications and connecting them to actions and events.</li>\n<li>Event class object - It facilitates the objects to bind and trigger the custom events by using the desired name of our choice.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 882
	},
	{
		"question" : "4) Explain the Architecture of Backbone.js",
		"answer" : "<div> <p>Backbone.js supports Model-View-Controller architecture that allows developers to separate business logic and GUI logic.</p><ul class=\"points\">\n<li><strong>Model:</strong> It consists of data and the logic of the data retrieval from the server.</li>\n<li><strong>View:</strong> It consists of the code which is responsible for the end user interface, i.e., the way in which the application is presented to the user.</li>\n<li><strong>Controller:</strong> It is the main application logic which controls the behavior of the application. It is a part of the code which acts as a bridge between Model and View. </li>\n</ul><img src=\"https://static.javatpoint.com/backbonejs/images/backbonejs-architecture.png\" alt=\"Backbone.js Architecture\"></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 883
	},
	{
		"question" : "5) When do you require Backbone.js?",
		"answer" : "<div> <p>Backbone.js is required in following conditions:</p><ul class=\"points\">\n<li>When you are developing a web application that requires a lot of JavaScript.</li>\n<li>It is required when you want to give structure to your code if your application needs to be scalable.</li>\n<li>Backbone is useful when a web application has to work with jQuery to traverse the DOM or give animations.</li>\n<li>When model changes and you want to update the HTML application automatically. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 884
	},
	{
		"question" : "8) What is the use of Backbone.js router? ",
		"answer" : "<div> <p>Backbone.js routers are used to route the application's URL to some particular actions and events. At least one route must be present for every defined router. It also defines the URL representation of the application's object when web applications provide linkable, bookmarkable, and sharable URL.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> &lt;script type=\"text/javascript\"&gt;  \n         var RouteMenu = Backbone.View.extend({  \n            el: '#routemenu',  //'el' defines which element to be used as the view reference  \n            events: {  \n               'click a' : 'onClick'  \n            },  \n            onClick: function( e ) {  \n               router.navigate('/');  \n            }  \n        });  \n        var Router = Backbone.Router.extend({  \n           routes: {  \n              'route/:id' : 'defaultRoute'  \n           },  \n        });  \n        var routemenu = new RouteMenu();  \n        Backbone.history.start();  \n      &lt;/script&gt;  \n\t  </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 885
	},
	{
		"question" : "6) What is Collection in Backbone.js? ",
		"answer" : "<div> <p>A Collection can be defined as an ordered set of modules. In Backbone.js, there is a collection class which provides some useful methods to deal with the collections. We can extend the collection class to provide some additional functionalities. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\"&gt;  \n        //The model 'MyTeam' includes default values and  extended using the Backbone.Model class  \n         var MyTeam = Backbone.Model.extend({  \n            defaults: {  \n               player: \"Dhyanchand\",  \n               country: \"India\"  \n            },  \n         });  \n  \n         //'MyTeam1' is an instance of the collection  \n         var MyTeam1 = Backbone.Collection.extend({  \n            model: MyTeam  //model 'MyTeam' is specified for a collection by overriding the 'model' property  \n         });  \n  \n         //The collection 'MyTeam1' is instantiated by using new keyword  \n         var myval=new MyTeam1({});  \n  \n         //The JSON.stringify() method returns values of collection in the JSON format  \n         document.write(\"The values in the collection are: \",JSON.stringify(myval));  \n      &lt;/script&gt;  \n\t  </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 886
	},
	{
		"question" : "7) Which are the three js files that are required to set up Backbone.js?",
		"answer" : "<div> <p>Following are the three js files that we require to setup Backbone.js and make a working environment:</p><ul class=\"points\">\n<li>jQuery</li>\n<li>Backbone</li>\n<li>Underscore</li>\n</ul><p>In our application, we have to put these files within the js folder and use it on our index.html page.</p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 887
	},
	{
		"question" : "9) Describe Backbone events? ",
		"answer" : "<div> <p>Backbone.js event can be defined as the module which can be mixed with any object. There are following methods which are used to manipulate Backbone.js events, </p><ol class=\"points\">\n<li>on - It binds an event to an object and executes the callback whenever an event is fired. </li>\n<li>off - It removes callback functions or all events from an object.</li>\n<li>trigger - It invokes the callback functions for the given events. </li>\n<li>once - It extends the backbone model class while creating your own backbone model. </li>\n<li>listenTo - It informs one object to listen to an event on another object. </li>\n<li>stopListening - It can be used to stop listening to events on the other objects. </li>\n<li>listenToOnce - It causes the listener, to occur only once before the callback function is being removed.</li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 888
	},
	{
		"question" : "10) What is a View in Backbone.js? ",
		"answer" : "<div> <p>A view is the important part of the Backbone.js architecture. In a Backbone.js application, a view is responsible for the end user interface. The view defines the way in which the application looked at the user. The View is also responsible for listening to the events and reacting to them accordingly.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\"&gt;  \n        var ViewDemo = Backbone.View.extend({  \n  \n           initialize:function(){  \n              document.write('JavaTpoint is the best online tutorial website for all techologies.');  \n            }  \n        });  \n        var myview = new ViewDemo();  \n        &lt;/script&gt;  \n\t\t </textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 889
	},
	{
		"question" : "32) What is the main function of toJSON in Backbone.js? ",
		"answer" : "<div> <p>The main function of toJSON in Backbone.js is to return a shallow copy of the model's attribute for JSON stringification. It does not return a JSON string and provides persistence, serialization, and augmentation before being sent to the server. </p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 890
	},
	{
		"question" : "11) What is Modelbinder in Backbone.js?",
		"answer" : "<div> <p>Model Binder is a class which is used to bind the model and the view together. The binding is done to archive synchronization. </p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 891
	},
	{
		"question" : "33) How are the model attributes stored in Backbone.js?",
		"answer" : "<div> <p>In Backbone.js, the models' attributes are stored in a hash. </p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 892
	},
	{
		"question" : "34) What are the most typical problems one can face with the Backbone.js view code?",
		"answer" : "<div> <p>Following is a list of the most typical problems one can face with the Backbone.js view code:</p><ul class=\"points\">\n<li>The application models do not change often.</li>\n<li>The application pages are frequently refreshed from scratch from the server.</li>\n<li>The models are not shared between different views.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 893
	},
	{
		"question" : "35) What is model.cid in Backbone.js? ",
		"answer" : "<div> <p>In Backbone.js, the model.cid is a special property of models, the cid or client id, which is automatically assigned to all models when they are first created. The model.cid works as a unique identifier. This is very useful when the model is not saved to the server, but you want to show it on the UI. </p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 894
	},
	{
		"question" : "36) Give an example to demonstrate how can you see the changes on a single attribute of a model? ",
		"answer" : "<div> <p>Whenever you change some data within the model, the model objects fire the \"change\" event. However, the object fires another event with a name specific to the change attribute: \"change:[attribute]\".</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var Fruit = Backbone.Model.extend({})\nvar fruit = new Fruit({\n\tweight: 3.25\n})\nfruit.on('change:weight, function() {\n\t// Event \"change:weight\" will fire whenever the weight attribute of fruit changes.\n}) \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 895
	},
	{
		"question" : "12) Mention some most robust functionalities of Model binder? ",
		"answer" : "<div> <p>Some most robust functionalities of the model binder are</p><ol class=\"points\">\n<li>It allows the developer to define the scope when binding is created using J-Query.</li>\n<li>In some of the cases, we can rely on the default scoping rules which are based on the <strong>name</strong> attribute of <strong>HTML</strong>.</li>\n<li>The scoping rules can be redefined if the views are complicated. </li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 896
	},
	{
		"question" : "37) What are the functionalities of escape in Backbone.js? ",
		"answer" : "<div> <p>In Backbone.js, the escape is used to get the current value of an attribute from the model, but it returns the HTML-escaped version of a model's attribute. It helps to prevent XSS attacks when you interpolate data from the model into HTML. </p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 897
	},
	{
		"question" : "38) Why is it not recommended to change the \"el\" property of a view directly? What is the correct way to do it instead?",
		"answer" : "<div> <p>It is not recommended to change the \"el\" property of a view directly because when you attempt to change the \"el\" property directly, it may lead to inconsistent behavior from the Backbone.js view. The reason behind this inconsistent behavior is that when you change the \"el\" property directly, it doesn't automatically update the cached jQuery object property corresponding to it, which is \"$el\".</p><p>The correct way to do this is to use \"setElement()\" on the view.</p><p><strong>Syntax:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">view.setElement(otherElement) \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 898
	},
	{
		"question" : "13) What are the advantages of Backbone.js?",
		"answer" : "<div> <p>Advantages of Backbone.js:</p><ul class=\"points\">\n<li>You can develop a web application with Backbone.js by using JavaScript with the minimal set of data-structuring (models &amp; collections) and user interface (views &amp; URLs).</li>\n<li>It is best for developing MVC like web applications, single page web applications or complex JavaScript web applications in an organized and structured manner without JavaScript code mixing with HTML.</li>\n<li>It provides API with many functions.</li>\n<li>It provides a key-value binding and custom events. </li>\n<li>It facilitates you to abstract your data into models and your DOM application into views and binds the two together using events.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 899
	},
	{
		"question" : "31) Can we set an Angular variable from PHP session variable without sending an HTTP request?",
		"answer" : "<div> <p>Yes, we can perform it by injecting PHP in the required place. i.e.,</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$scope.name='&lt;?= $session['name'] ?&gt;';\n</textarea></div><p>It will work only if we use PHP to render the HTML and the above JavaScript in &lt;script&gt; tag inside the PHP file.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 900
	},
	{
		"question" : "14) What is a Converter in Backbone.js? ",
		"answer" : "<div> <p>The Converter is a function which is used to convert the JavaScript object to a model. It is invoked when the transition is made between an HTML element and the model's attribute.</p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 901
	},
	{
		"question" : "32) What do you understand by strict conceptual escaping?",
		"answer" : "<div> <p>AngularJS treats all the values as untrusted/ unsecured in HTML or sensitive URL bindings. AngularJS automatically runs security checks while binding untrusted values. It throws an error if it cannot guarantee the security of the result. This type of behavior depends on contexts: HTML can be sanitized, but template URLs cannot.</p><p>To illustrate this, consider the following directive</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">Ng-bind-html\n</textarea></div><p>It renders its value directly as HTML. When there is an untrusted input, AngularJS will try to sanitize it before rendering if a sanitizer is available. We will need to mark it as trusted to bypass sanitization and render the input.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 902
	},
	{
		"question" : "15) What is sync in Backbone.js? ",
		"answer" : "<div> <p>Sync is a function that is called every time. It attempts to read or save a model to the server. It persists the state of the model to the server.</p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 903
	},
	{
		"question" : "39) What do you understand by the model.attributes in Backbone.js? ",
		"answer" : "<div> <p>The Backbone.js attributes define a model's property and use the set() method to update the attributes. It is usually a form of the JSON object representing the model data on the server.</p><p><strong>Syntax:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">model.attributes  \n</textarea></div><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type=\"text/javascript\"&gt;  \nvar  Person = Backbone.Model.extend();  \nvar person = new Person();  \nperson.set({ name: \"Alex Conwey\"});  \ndocument.write(person.get('name')); \n&lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 904
	},
	{
		"question" : "33) How can someone make an ajax call using AngularJS?",
		"answer" : "<div> <p>AngularJS contains $https: control, which works as a service to make ajax call to read data from the server. The server creates a database call to retrieve the desired records. AngularJS requires data in JSON format. Once the data gets ready, $https: can be used to retrieve the data from the server in the following manner.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">function studentController($scope,$https:) {\n   var url = \"data.txt\";\n   $https:.get(url).success( function(response) {\n      $scope.students = response; \n   });\n}\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 905
	},
	{
		"question" : "16) What are the methods of utility in Backbone.js? ",
		"answer" : "<div> <p>Two methods can be used to manipulate the Backbone.js utility:</p><ol class=\"points\">\n<li>Backbone.noConflict: It returns the Backbone objects to its original value and provides a facility to store the reference to a backbone. It can be used to embed the backbone on third-party websites, where you don't want to thrash the existing backbone.</li>\n<li>Backbone.$: This property is used when you have multiple copies of jQuery on the page or want to tell Backbone to use a particular object as its DOM / Ajax library.</li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 906
	},
	{
		"question" : "40) What do you understand by the Backbone.js utility class? ",
		"answer" : "<div> <p>The Backbone.js utility class contains a set of methods for implementing Backbone utility. There are two methods used to manipulate the Backbone.js utility:</p><ul class=\"points\">\n<li><strong>noConflict():</strong> This returns the Backbone objects to their original value and provides a facility to store a reference to a backbone.</li>\n<li><strong>$():</strong> This is used when you have multiple copies of jQuery on the page or simply want to tell Backbone to use a particular object as its DOM / Ajax library.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 907
	},
	{
		"question" : "41) What are the functionalities of parse in Backbone.js? ",
		"answer" : "<div> <p>The data, which is returned from the server in response to a fetch or store operation, is called parse. It is used to return the model's data by passing into the response object. </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> &lt;script type=\"text/javascript\"&gt;  \n     var myData ={  \n        \"values\": [{  \n            \"fname\": \"Ratan\",  \n            \"lname\": \"Tata\",  \n            \"country\": \"India\"  \n         }]  \n     };  \n     var Person  = Backbone.Model.extend({  \n        parse : function(response, options){  \n           document.write(JSON.stringify(response));  \n        }  \n     });  \n     var person = new Person(myData, {parse: true});  \n     &lt;/script&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 908
	},
	{
		"question" : "17) Mention the cases where you can use the unbinding function in Backbone.js?",
		"answer" : "<div> <p>In Backbone.js, the unbinding function is used to remove the bindings on the model. When we want to remove the validation binding on the model or all models, we must remove all the events hooked up on the collection. In this case, we use the unbinding function.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">Backbone.Validation.Unbind(view)   [ This will remove the validation binding]\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 909
	},
	{
		"question" : "34) What do you know about internationalization? How will you implement internationalization in AngularJS?",
		"answer" : "<div> <p>Internationalization is the method for showing locale-specific information on a website. Consider a website displaying content in the English language in the United States and Danish in France.</p><p>AngularJS has inbuilt internationalization support for three types of filters:</p><ul class=\"points\">\n<li>Currency</li>\n<li>Date</li>\n<li>Numbers</li>\n</ul><p>We need to incorporate the corresponding JS according to the locale of the country. By default, it is configured to handle the locale of the browser.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 910
	},
	{
		"question" : "42) What is the function of setElement? ",
		"answer" : "<div> <p>The Backbone.js setElement method is used to apply the backbone view to a different DOM element. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> &lt;script type=\"text/javascript\"&gt;  \n        var ViewDemo = Backbone.View.extend({  \n  \n           events: {  \n              'change input': 'sayHi'  \n           },  \n  \n           initialize: function() {  \n               this.setElement($('#myview'));     \n           },  \n  \n             \n           sayHi: function() {  \n              document.write('JavaTpoint: A solution of all technology...');  \n           }  \n        });  \n  \n        var viewdemo = new ViewDemo;  \n        &lt;/script&gt;  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 911
	},
	{
		"question" : "18) What are the configuration options available in Backbone.js? ",
		"answer" : "<div> <p>There are the following configuration options available in Backbone.js.</p><ol class=\"points\">\n<li>modelSetOptions</li>\n<li>boundAttributes </li>\n<li>supressThrows </li>\n<li>converter </li>\n<li>change Triggers </li>\n<li>InitialCopyDirection </li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 912
	},
	{
		"question" : "19) What are some good alternatives to Backbone.js's dependencies?",
		"answer" : "<div> <p>Backbone.js has only one hard dependency named Underscore.js. However, we have to often include jQuery and json2.js to support certain features of Backbone.js.</p><p>As we talk about alternatives of Underscore.js and jQuery, sometimes, it is possible to use Lo-Dash and Zepto along with Backbone.js. These two are more lightweight alternatives to Underscore.js and jQuery.</p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 913
	},
	{
		"question" : "1) Define SASS?",
		"answer" : "<div> <img src=\"https://static.javatpoint.com/interview/images/sass-interview-questions.png\" alt=\"SASS Interview Questions\" class=\"imageright\"><h1 class=\"h1\">SASS Interview Questions</h1><p>A list of frequently asked SASS interview questions and answers are given below.</p><p>SASS means Syntactically Awesome Style sheets. It is a CSS preprocessor which is used to reduce repetition with CSS and save time. It adds power and elegance to the basic language and facilitates you to add variables, nested rules, mixins, inline imports, inheritance and more, all with fully CSS-compatible syntax.</p><img src=\"https://static.javatpoint.com/interview/images/sass-interview-questions1.png\" alt=\"SASS Interview Questions\"></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 914
	},
	{
		"question" : "20) What is the difference between the properties \"id\" and \"cid\" on a model object in Backbone.js?",
		"answer" : "<div> <p>In Backbone.js, the \"id\" property on a model is automatically assigned based on the \"id\" set in the model's attributes hash. This is the ID that we receive from the rest of API for the resource that we are querying. On the other hand, the \"cid\" is a temporary ID assigned to each model and is useful until an actual ID is assigned for the object. For example, a model pushed to a collection that has not yet been persisted can be called \"cid\", until it is saved in the database and an actual ID is generated for it. After that, it can be called \"id\".</p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 915
	},
	{
		"question" : "2) Who is the inventor of SASS?",
		"answer" : "<div> <p>SASS was developed by Natalie Weizenbaum and was designed by Hampton Catlin. So, Hampton Catlin is credited as the designer of SASS, and he is also known as the father of SASS.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 916
	},
	{
		"question" : "3) What are the reasons behind using SASS?",
		"answer" : "<div> <p>Following are some important reasons behind the popularity of SASS.</p><ul class=\"points\">\n<li>You can write codes easily and efficiently, and they are easy to maintain.</li>\n<li>It is a pre-processing language which provides its syntax for CSS.</li>\n<li>It is a superset of CSS which contains all the features of CSS and is an open source pre-processor, coded in Ruby.</li>\n<li>It is more stable and powerful CSS extension and style documents more clearly and structurally.</li>\n<li>It facilitates reusability methods, logic statements and some of the built-in functions like color manipulation, mathematics, and parameter lists item.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 917
	},
	{
		"question" : "21) What are the main advantages of using \"listenTo()\" to bind event handlers instead of \"on()\"? ",
		"answer" : "<div> <p>There are mainly two advantages to using \"listenTo()\" instead of using \"on()\" to bind event handlers. See the syntax of using these both because they are used differently:</p><p><strong>Syntax:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">listener.listenTo(object, event, callback)\nobject.on(event, callback)\n</textarea></div><p>While using \"listenTo()\", the object whose events you want to listen to is passed as the first argument. On the other hand, in the case of \"on()\", it is a method on that object.</p><p><strong>The key advantages of \"listenTo()\" over \"on()\" are:</strong></p><ul class=\"points\">\n<li>The listener keeps track of all the event handlers, making it easier to remove them all at once when required.</li>\n<li>The callback's context is always set to the listener itself.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 918
	},
	{
		"question" : "35) How will you explain deep linking in AngularJS?",
		"answer" : "<div> <p>Deep linking is the method which allows us to encode the state of the application in the URL in such a way that it can be bookmarked. Then the application can further be restored from the URL to the same state.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 919
	},
	{
		"question" : "4) How many ways can we use SASS?",
		"answer" : "<div> <p>We can use SASS in three different ways:</p><ul class=\"points\">\n<li>As a command line tool.</li>\n<li>As a standalone Ruby module.</li>\n<li>As a plug-in for any Rack-enabled framework.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 920
	},
	{
		"question" : "5) What are the most attractive features of SASS?",
		"answer" : "<div> <ul class=\"points\">\n<li>It is more stable, powerful and fully compatible to CSS3.</li>\n<li>It is time-saving because it facilitates you to write CSS in less code.</li>\n<li>It uses its syntax.</li>\n<li>It is based on the JavaScript and superset of CSS.</li>\n<li>It is an Open source pre-processor that interprets into CSS.</li>\n<li>It contains various functions for manipulating colors and other values.</li>\n<li>It has advanced control directives for libraries.</li>\n<li>It provides well formatted, customizable output.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 921
	},
	{
		"question" : "36) Describe the AngularJS boot process.",
		"answer" : "<div> <p>When a page is loaded into the browser, several things happen:</p><ul class=\"points\">\n<li>HTML document file gets loaded, and evaluated by the browser. AngularJS JavaScript file gets loaded, and the angular global object is created. Next, JavaScript file which is responsible for registering the controller functions is executed.</li><li>\n</li><li>AngularJS scans through the HTML to find AngularJS apps and views. Once the view is found, it connects that particular view to the corresponding controller function.</li><li>\n</li><li>AngularJS executes the controller functions. It further renders the views with data from the model populated by the controller, and the page gets ready.</li><li>\n</li></ul></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 922
	},
	{
		"question" : "37) Is it possible to have two ng-app directives for a single Angular application?",
		"answer" : "<div> <p>No, there can't be more than one ng-app directive for a single AngularJS application.</p><p>The ng-app directive helps AngularJS application to make sure that it is the root element. In our HTML document, we can have only one ng-app directive. If there is more than one ng-app directive, then whichever appears first will be used.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 923
	},
	{
		"question" : "38) What is the syntax for creating a new date object?",
		"answer" : "<div> <p>The syntax for creating new date object is given below:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">$scope.newDate=new Date();\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 924
	},
	{
		"question" : "22) How can you sort a collection? When is it important to explicitly invoke \"sort()\" on a collection? ",
		"answer" : "<div> <p>In Backbone.js, by default, collections are not explicitly sorted. We can sort the collections by defining a comparator on the collection object. By defining a comparator, a collection is sorted whenever a model is added or the \"sort()\" method is invoked on a collection:</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">var Fruits = Backbone.Collection.extend({\n\tcomparator: function(a, b) { /* .. */ }\n})\n// Or\nvar Fruits = Backbone.Collection.extend({})\nvar fruits = new Fruits()\nfruits.comparator = function(a, b) { /* .. */ }\n</textarea></div><p>The comparator property can be a function with one argument or two arguments (similarly used in \"sort\"), or a string identifying the attribute by name to sort on.</p><p>When an attribute of a model in a collection changes, the collection doesn't sort itself. In this case, the sort must be invoked explicitly to update the order of models in the collection.</p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 925
	},
	{
		"question" : "39) Do you think that parent controller can access the methods of child controller or vice versa?",
		"answer" : "<div> <p>No, the parent controller cannot access the methods of child controller, but the child controller can access the methods of the parent controller.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 926
	},
	{
		"question" : "23) What function do you have to change to override the Backbone.js's default support for REST APIs?",
		"answer" : "<div> <p>To override the Backbone.js's default behavior on a per-model basis for REST APIs, we can set a custom function to \"Model.sync\". To make the changing global, we can set the custom function to \"Backbone.sync\". Ideally, the \"sync\" function should handle four methods: \"create\", \"read\", \"update\", and \"delete\". The function receives the CRUD method name, the model itself, and an object with additional options.</p><p>There is also a method to do the same. Sometimes setting \"Backbone.emulateJSON\" to true can do the job, in this case we have to submit requests as \"application/x-www-form-urlencoded\" instead of \"application/json\".</p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 927
	},
	{
		"question" : "26) How can you avoid callbacks?",
		"answer" : "<div> <p>To avoid callbacks, you can use any one of the following options:</p><ul class=\"points\">\n<li>You can use <strong>modularization</strong>. It breaks callbacks into independent functions. </li>\n<li>You can use <strong>promises</strong>.</li>\n<li>You can use <strong>yield</strong> with Generators and Promises. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 928
	},
	{
		"question" : "24) What are some prominent features or key points of Backbone.js?",
		"answer" : "<div> <p>A list of some prominent features or key points of Backbone.js:</p><ul class=\"points\">\n<li>Backbone.js has a hard dependency with underscore.js, making it more functional and providing support for a range of useful collection-based operations.</li>\n<li>Backbone.js has a soft dependency on jQuery.</li>\n<li>Backbone.js is based on MVC architecture. When the model changes, it can update the HTML of your application automatically.</li>\n<li>Backbone.js uses a client-side rendering framework or Javascript templating to render HTML, enabling you not to embed HTML code inside JavaScript code.</li>\n<li>Backbone.js offers a significantly clean and elegant way for UI updates and DOM manipulations.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 929
	},
	{
		"question" : "27) Does Node.js provide Debugger?",
		"answer" : "<div> <p> Yes, Node.js provides a simple TCP based protocol and built-in debugging client. For debugging your JavaScript file, you can use debug argument followed by the js file name you want to debug. </p><h4 class=\"h4\">Syntax:</h4><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">    node debug [script.js | -e \"script\" | &lt;host&gt;:&lt;port&gt;]\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 930
	},
	{
		"question" : "25) What do you understand by Backbone.sync?",
		"answer" : "<div> <p>Backbone.sync is a function called when Backbone.js wants to save or read a model to the server. </p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 931
	},
	{
		"question" : "28) What is a control flow function?",
		"answer" : "<div> <p>Control flow function is a generic piece of code that runs in between several asynchronous function calls.</p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 932
	},
	{
		"question" : "40) Explain $rootScope in AngularJS.",
		"answer" : "<div> <p>Every AngularJS application contains a $rootScope, which is the top-most scope created on the DOM element. An application can contain only one $rootScope, which will be shared among all its components. Every other scope is considered as its child scope. It can watch expressions and propagate events. By using the root scope, one can set the value in one controller and read it from the other controller.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 933
	},
	{
		"question" : "29) How \"Control Flow\" controls the functions calls?",
		"answer" : "<div> <p>The control flow does the following job:</p><ul class=\"points\">\n<li>Control the order of execution</li>\n<li>Collect data</li>\n<li>Limit concurrency</li>\n<li>Call the next step in a program</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 934
	},
	{
		"question" : "30) Is it possible to access DOM in Node?",
		"answer" : "<div> <p>No, it is not possible to access DOM in Node. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 935
	},
	{
		"question" : "26) How can you create a Model in Backbone.js?",
		"answer" : "<div> <p>Use the following syntax to create a Model in Backbone.js.</p><p><strong>Syntax:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">Student = Backbone.Model.extend({ initialize: function(){ alert(\"Welcome to Backbone.js\"); } }); var student = new Student;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 936
	},
	{
		"question" : "31) What types of tasks can be done asynchronously using the event loop?",
		"answer" : "<div> <ul class=\"points\">\n<li>I/O operations</li>\n<li>Heavy computation</li>\n<li>Anything requiring blocking</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 937
	},
	{
		"question" : "41) What is the main purpose of $routeProvider in AngularJS?",
		"answer" : "<div> <p>$routeProvider is one of the important services which set the configuration of URLs. It further maps them with the corresponding HTML pages or ng-templates and attaches a controller with the same.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 938
	},
	{
		"question" : "27) In which conditions Backbone.js is must be required?",
		"answer" : "<div> <p>Generally, Backbone.js is required in the following conditions:</p><ul class=\"points\">\n<li>When we have to develop a web application that requires a lot of JavaScript codes.</li>\n<li>It is also required if your application needs to be scalable and give a structure to your code.</li>\n<li>Backbone is required when a web application works with jQuery to traverse the DOM or give animations.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 939
	},
	{
		"question" : "32) What is REPL in Node.js?",
		"answer" : "<div> <p>REPL stands for Read Eval Print Loop. It specifies a computer environment like a window console or Unix/Linux shell where you can enter a command, and the computer responds with an output. It is very useful in writing and debugging the codes. REPL environment incorporates Node.js.</p><p><strong>See the Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">$ node\n&gt; 100 + 200\n300\n&gt; 100 + ( 200 * 300 ) - 400\n59700\n&gt;\n</textarea></div><br><img src=\"https://static.javatpoint.com/interview/images/node-js-interview-questions-q32.png\" alt=\"Node.js Interview Questions\"></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 940
	},
	{
		"question" : "42) How will you explain Auto Bootstrap Process in AngularJS?",
		"answer" : "<div> <p>AngularJS initializes automatically upon the \"<strong>DOMContentLoaded</strong>\" event. It also initializes when the browser downloads the Angular.js script and document.readyState is set to 'complete' at the same time. AngularJS looks for an ng-app directive which is the root of Angular application compilation process.</p><p>If the directive 'ng-app' is found, then AngularJS will perform the following steps:</p><ul class=\"points\">\n<li>It will load the module which is associated with the directive.</li>\n<li>It will create the application injector.</li>\n<li>It will compile the DOM starting from the ng-app root element.</li>\n</ul><p>This process is known as Auto-bootstrapping.</p></div>",
		"category" : "Web",
		"sub_category" : "AngularJS",
		"id" : 941
	},
	{
		"question" : "33) Explain the tasks of terms used in Node REPL.",
		"answer" : "<div> <p>Following are the terms used in REPL with their defined tasks:</p><p><strong>Read:</strong> It reads user's input; parse the input into JavaScript data-structure and stores in memory.</p><p><strong>Eval:</strong> It takes and evaluates the data structure.</p><p><strong>Print:</strong> It is used to print the result.</p><p><strong>Loop:</strong> It loops the above command until user press ctrl-c twice to terminate.</p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 942
	},
	{
		"question" : "28) What are \":params\" and \"*splats\" in dynamic routing in Backbone.js? ",
		"answer" : "<div> <p>Backbone.js uses two styles of variables \":params\" and \"*splats\" when implementing routes. Let's see what the uses of \":params\" and \"*splats are\":</p><ul class=\"points\">\n<li>\":params\" is used to match any URL components between slashes. You can specify a single fragment using \".params\". On the other hand, \"*splats\" is used to match any number of URL fragments after the query. Due to the nature of a \"*splat\", it should always be the last variable in your URL as it will match any components.</li>\n<li>In route definitions, the \"*splats\" or \":params\" are passed as arguments (in respective order) to the associated function. A route defined as \"/:route/:action\" will pass 2 variables (\"route\" and \"action\") to the callback function.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 943
	},
	{
		"question" : "34) Is it possible to evaluate simple expressions using Node REPL?",
		"answer" : "<div> <p>Yes. You can evaluate simple expressions using Node REPL.</p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 944
	},
	{
		"question" : "29) Is it possible to use Backbone.js for a multiple-page web app? If yes, how? ",
		"answer" : "<div> <p>Yes, we can use Backbone.js for a multiple-page web app. There are a lot of considerations for multiple page web apps in Backbone.js, but the following two are the most useful:</p><ul class=\"points\">\n<li><strong>Serving the page:</strong> In this method, where you want to have your web server, set everything to the server route to serve the same static page. For example, everything in https://javatpoint.com/* will serve /var/www/javatpoint.com/index.html. Once the static page is loaded, the JavaScript will decide what to do to the given URL.</li>\n<li><strong>Push State:</strong> In this method, you can still use Backbone routing to do the routing tasks, but don't use hashbangs. This method facilitates you to navigate to URLs without actually needing a page refresh.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 945
	},
	{
		"question" : "30) What do you understand by the \"el\" property of the Backbone.js view?",
		"answer" : "<div> <p>In the Backbone.js view, the \"el\" property is used to reference the DOM object created in the browser. Every Backbone.js view has an \"el\" property, and if it is not defined, Backbone.js will construct its own as an empty div element. </p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 946
	},
	{
		"question" : "21) What is the procedure to create a LESS file and store it and compile it?",
		"answer" : "<div> <p>The procedure to create and store a LESS file is similar to creating/storing a CSS file. You can create a new LESS file with a .less extension or rename the existing .css file to a .less file. You can write LESS code with existing CSS code. You should follow the best practice of creating it inside ~/content/ or ~/Styles/ folder.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 947
	},
	{
		"question" : "22) What is the shortcut for writing @mixin and @include directives?",
		"answer" : "<div> <p>As a shortcut for writing @mixin and @include directives, we can use = for @mixin directive and + for @include directive. It requires less typing, makes our code simpler and easier to read, and saves our time. </p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 948
	},
	{
		"question" : "35) What is the use of the underscore variable in REPL?",
		"answer" : "<div> <p>In REPL, the underscore variable is used to get the last result.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">C:\\Nodejs_WorkSpace&gt;node\n&gt; var x = 10\nundefined\n&gt; var y = 20\nundefined\n&gt; x + y\n30\n&gt; var sum = _\nundefined\n&gt; console.log(sum)\n30\nundefined\n&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 949
	},
	{
		"question" : "23) What is the best way to represent variables in LESS?",
		"answer" : "<div> <p>LESS allows variables to be defined. The best way to represent variables in LESS is to represent them as @sing. While the variable assignment is done with a: (colon) sign. The values of the variables are inserted into the CSS output file as well as minified file. </p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 950
	},
	{
		"question" : "36) Does Node.js supports cryptography?",
		"answer" : "<div> <p> Yes, Node.js Crypto module supports cryptography. It provides cryptographic functionality that includes a set of wrappers for open SSL's hash HMAC, cipher, decipher, sign and verify functions. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">    const crypto = require('crypto');  \n    const secret = 'abcdefg';  \n    const hash = crypto.createHmac('sha256', secret)  \n                       .update('Welcome to JavaTpoint')  \n                       .digest('hex');  \n    console.log(hash);  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 951
	},
	{
		"question" : "24) How can you set code in a watch mode while running LESS.js in an HTML5 browser?",
		"answer" : "<div> <p>When you run the LESS.js in an HTML5 browser, it uses local storage to cache the generated CSS. However, the developers cannot see the changes they made instantly. In order to see the changes you made instantly, you can load program in development and watch mode by using following JavaScript: </p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">&lt;script type= \"text/javascript\"&gt;\nless.env = \"development \" ;\nless.watch () ;\n&lt;/script&gt;\n&lt;script type= \"text/javascript\"&gt;\nless.env = \"development \" ;\nless.watch () ;\n&lt;/script&gt;   \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 952
	},
	{
		"question" : "37) What is npm? What is the main functionality of npm?",
		"answer" : "<div> <p>npm stands for Node Package Manager. Following are the two main functionalities of npm:</p><ul class=\"points\">\n<li>Online repositories for node.js packages/modules which are searchable on search.nodejs.org</li>\n<li>Command line utility to install packages, do version management and dependency management of Node.js packages. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 953
	},
	{
		"question" : "31) What are the most powerful capabilities of the ModelBinder in Backbone.js?",
		"answer" : "<div> <p>In Backbone.js, the most powerful capabilities of ModelBinder class is that it makes you able to define scope when you create your bindings using jQuery.</p><p>You can rely on default scoping rules according to the HTML \"name\" attribute for simple views.</p><p>For complex views, you can define scoping with jQuery selectors.</p></div>",
		"category" : "Web",
		"sub_category" : "Backbone",
		"id" : 954
	},
	{
		"question" : "38) What tools can be used to assure a consistent style in Node.js?",
		"answer" : "<div> <p>Following is a list of tools that can be used in developing code in teams, to enforce a given style guide and to catch common errors using static analysis.</p><ul class=\"points\">\n<li>JSLint </li>\n<li>JSHint</li>\n<li>ESLint</li>\n<li>JSCS</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 955
	},
	{
		"question" : "25) What are the different color channel functions used in LESS?",
		"answer" : "<div> <p>Following are some different color channel functions used in LESS:</p><ul class=\"points\">\n<li>hue</li>\n<li>saturation</li>\n<li>hsvhue</li>\n<li>saturation</li>\n<li>hswalue</li>\n<li>red</li>\n<li>green</li>\n<li>blue</li>\n<li>alpha</li>\n<li>luma</li>\n<li>luminance</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 956
	},
	{
		"question" : "26) What are nested rules in Sass?",
		"answer" : "<div> <p>Nesting is a method of combining multiple logic structures within one another. In Sass, various CSS rules are connected to one another. </p><p>For example, if you are using multiple selectors then you can use one selector inside another to create compound selectors.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 957
	},
	{
		"question" : "39) What is the difference between operational and programmer errors?",
		"answer" : "<div> <p>Operational errors are not bugs, but create problems with the system like request timeout or hardware failure. On the other hand, programmer errors are actual bugs. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 958
	},
	{
		"question" : "23) What is the best way to pre-compile a Less into CSS?",
		"answer" : "<div> <p>The easiest way to pre-compile a Less into CSS is to use Less.js with Node.js where Less.js run outside the browser.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 959
	},
	{
		"question" : "27) Which one is better, Sass or Less?",
		"answer" : "<div> <p>Due to the following reasons, Sass is better than less:</p><ul class=\"points\">\n<li>Sass provides the facilities to use logical statements like loops, conditions and also facilitates you to write reusable methods.</li>\n<li>The user of Sass can access the library of the company. Sass users can also use some awesome features like cross-browser support, legacy browser hacks, and dynamic sprite map generation.</li>\n<li>Compass also provides the facilities to add an external framework like Bootstrap on top, Blueprint.</li>\n<li>Sass provides you the facility to write your handy functions</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 960
	},
	{
		"question" : "40) What is the difference between the global installation of dependencies and local installation of dependencies?",
		"answer" : "<div> <ul class=\"points\">\n<li>Global installation of dependencies is stored in <user-directory>/npm directory. While local installation of dependencies stores in the local mode. Here local mode refers to the package installation in node_modules directory lying in the folder where Node application is present.</user-directory></li>\n<li>Globally deployed packages cannot be imported using require() in Node application directly. On the other hand, locally deployed packages are accessible via require().</li>\n<li>To install a Node project globally -g flag is used.\n<div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">C:\\Nodejs_WorkSpace&gt;npm install express ?g \n</textarea></div>\n</li>\n<li>To install a Node project locally, the syntax is:\n<div class=\"codeblock\"><textarea name=\"code\" class=\"xml\">C:\\Nodejs_WorkSpace&gt;npm install express \n</textarea></div>\n</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 961
	},
	{
		"question" : "24) What is the use of Namespaces and Accessors in Less?",
		"answer" : "<div> <p>The namespaces were used to group the Mixins under a common name. You can perform Encapsulation with the help of Namespaces and Accessors in the Less file.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">.class1 {\n   .class2 {\n      .val(@param) {\n         font-size: @param;\n         color:green;\n      }\n   }\n}\n\n.myclass {\n   .class1 &gt; .class2 &gt; .val(20px);\n}\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 962
	},
	{
		"question" : "28) What is the way to write a placeholder selector in Sass?",
		"answer" : "<div> <p>In Sass, the placeholder selectors can be used with class or id selector. In standard CSS, these are specified with \"#\" or \".\", but in SASS they are replaced with \"%\". It uses @extend directive to display the result in CSS. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> .para1 {\n   color: blue;\n}\n.para2 {\n   @extend .para1;\n   font-size:30px;\n}\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 963
	},
	{
		"question" : "41) What is the use of a buffer class in Node.js?",
		"answer" : "<div> <p>The Node.js provides Buffer class to store raw data similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap. It is a global class and can be accessed in an application without importing a buffer module. Buffer class is used because pure JavaScript is not compatible with binary data. So, when dealing with TCP streams or the file system, it's necessary to handle octet streams. </p></div>",
		"category" : "Web",
		"sub_category" : "Node.js",
		"id" : 964
	},
	{
		"question" : "6) Which data types does the Sass Script supports?",
		"answer" : "<div> <p>Following data types are supported by the Sass Script:</p><ul class=\"points\">\n<li>Boolean (true or false)</li>\n<li>Number (1, 5, 13, 10px)</li>\n<li>Nulls</li>\n<li>Colors (red, #FF0000)</li>\n<li>Text String, without quote (\"foo\", \"bar\")</li>\n<li>List of values that are separated by commas or space (2.0em, Verdana, Arial, Helvetica)</li>\n<li>Maps from one value to another value (key 1: value 1, key 2: value 2)</li>\n<li>Function reference.</li>\n</ul><p>SASS always supports all other types of CSS property value such as Unicode range, special character, and unquoted string.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 965
	},
	{
		"question" : "25) Define scope in the context of variables in LESS programming language.",
		"answer" : "<div> <p>The scope of variables refers to the place where the variables exist. The variables were searched in the local scope first. If it is not in the local scope, then the compiler search in the parent scope.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">@a: 15px;\n\n.myclass {\n   font-size: @a;\n   @a:20px;\n   color: green;\n}\n</textarea></div><p> In the above Less document variable a is defined inside the class with value 20 and variable with the same name is also defined outside the class with value 15. When the compiler executes this Less document, it searches for the local scope first. Hence the local scope of the variable is used. After the compilation process, CSS file is created having font-size value 20px.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 966
	},
	{
		"question" : "29) What is the use of number operations in SASS?",
		"answer" : "<div> <p>In SASS, the number operations are used to allow mathematical operations such as addition, subtraction, multiplication, and division.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 967
	},
	{
		"question" : "7) How can you define a variable in SASS?",
		"answer" : "<div> <p>The variables in SASS start with a ($) sign, and variable assignment is done with a colon(:).</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 968
	},
	{
		"question" : "8) What are the main differences between SCSS and SASS?",
		"answer" : "<div> <p>Following is the list of main differences between SCSS and SASS:</p><ul class=\"points\">\n<li>SASS is like a CSS preprocessor. It has the extension of CSS3. SASS is derived from another preprocessor known as Haml (HTML abstraction markup language).</li>\n<li>SASS contains two types of syntax: \"SCSS\" is the first syntax, and it uses the extension of .scss. Indented syntax or \"SASS\" is the other syntax, and it uses the extension of .sass</li>\n<li>You can covert the valid CSS document into SASS by simply change the extension from .CSS to .SCSS.</li>\n<li>SCSS is fully CSS compatible. It provides CSS-friendly syntax to closing the gap between SASS and CSS. SCSS is called Sassy CSS.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 969
	},
	{
		"question" : "26) What is commenting?",
		"answer" : "<div> <p>The commenting refers to some text which is understandable by the humans to understand the working of some complex codes in the programming.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 970
	},
	{
		"question" : "30) What is the use of color operations in SASS?",
		"answer" : "<div> <p>In SASS, the color operations allow using color components along with arithmetic operations.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 971
	},
	{
		"question" : "9) Explain the use of Sass @import function?",
		"answer" : "<div> <ul class=\"points\">\n<li>It facilitates you to extend the CSS import rule. To do this you need to enable import of Sass and SCSS files.</li>\n<li>It can merge the all the imported files into a single outputted CSS file.</li>\n<li>It is used to virtually match and mix any file.</li>\n<li>It needs a filename to import function.</li>\n<li>It provides document style presentation better than flat CSS.</li>\n<li>It facilitates you to keep your responsive design project more organized.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 972
	},
	{
		"question" : "31) What is the use of Boolean operations in SASS?",
		"answer" : "<div> <p>In SASS, the Boolean operations allow using \"AND\", \"OR\" and \"NOT\" operators. </p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 973
	},
	{
		"question" : "27) What is the reaction of the compiler to the comments?",
		"answer" : "<div> <p>The reaction of the compiler to the comments is nothing. The compiler ignores the comments at the time of compilation of the code.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 974
	},
	{
		"question" : "32) What are parentheses in Sass?",
		"answer" : "<div> <p>Parentheses are used to provide a symbolic logic that affects the order of the operation. It is a pair of signs which are usually marked off by round () brackets or square [] brackets.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 975
	},
	{
		"question" : "28) How many types of commenting can be done in the Less document?",
		"answer" : "<div> <p>Two types of comments are allowed in the Less document, inline comments and block comments. However, if you write inline comments in your code, the compiler ignores it and not adds that code to the CSS file. Only block comments will be added to the CSS file.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 976
	},
	{
		"question" : "33) Define the use of Sass Mixin function?",
		"answer" : "<div> <p>The Mixin function is used to define styles. Functions and Mixins are very similar. You can re-use this style throughout the style sheet. To re-use it you do not need to resort the non-semantic classes like .float-left. The Mixin can store multiple values or parameters and call a function to avoid writing repetitive codes. It names can use underscores and hyphens interchangeably.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 977
	},
	{
		"question" : "8) What is the meaning of absolute path in XPath?",
		"answer" : "<div> <p>An absolute path starts with root node or with '/'.</p><p><strong>For Example: </strong></p><p><strong>/company/employee-</strong> It will select employee nodes within class root node.</p><p><strong><xsl:for-each select=\"/class/employee\"></xsl:for-each></strong> For more information: <a> click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 978
	},
	{
		"question" : "10) What are the main advantages of SASS? ",
		"answer" : "<div> <p>Following is a list of main advantages of SASS:</p><ul class=\"points\">\n<li>It is more stable, powerful, and elegant because it is an extension of CSS. So, it is easy for designers and developers to work efficiently and quickly.</li>\n<li>It contains fewer codes, so it is time-efficient and saves time.</li>\n<li>It facilitates writing clean CSS in a programming construct.</li>\n<li>It is compatible with all versions of CSS.</li>\n<li>It is the superset of CSS that helps designers and developers work more efficiently and quickly.</li>\n<li>SASS is compatible with all versions of CSS. So, it facilitates us to use any available CSS libraries.</li>\n<li>It facilitates us to use nested syntax and useful functions such as color manipulation, mathematics, and other values.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 979
	},
	{
		"question" : "29) What is the use of importing in Less programming? How is it done?",
		"answer" : "<div> <p>The importing is used to import CSS or Less document into the Less document. Importing can be done by including \"@import\" followed by the address of the CSS or Less file at the beginning of the Less document.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 980
	},
	{
		"question" : "34) What is the use of DRY-ing out a Mixin function in Sass?",
		"answer" : "<div> <p>DDRY-ing out a Mixin function splits into two parts: the static part and dynamic parts.</p><p>The static Mixin contains the pieces of information that would otherwise get duplicated and the dynamic Mixin is the function that the user going to call.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 981
	},
	{
		"question" : "9) What do you mean by XPath relative path?",
		"answer" : "<div> <p>A path is known as relative path if it is started with the node that we've selected. For more information: <a> click here</a>\n</p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 982
	},
	{
		"question" : "36) Which directive is used to detect the errors in SASS?",
		"answer" : "<div> <p>Comments in regular CSS starts with /* */ and Sass contains two commands. The single line comment with // and multiple CSS comments with /* */.</p><p>Sass @debug directive is used to detect the errors and display the Sass Script expressions values to the standard error output stream. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> $font-sizes: 10px + 20px;  \n$style: (  \n  color: #bdc3c7  \n);  \n.container{  \n  @debug $style;  \n  @debug $font-sizes;  \n}   \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 983
	},
	{
		"question" : "30) What is the use of extend in Less?",
		"answer" : "<div> <p>The extend is a Less pseudo class which is used to select another selector style in one selector.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">h2 {\n   &amp;:extend(.style);\n   font-style: italic;\n}\n\n.style {\n   background: green;\n}\n</textarea></div><p>In the above example of extending style class properties have been imported into the properties of h2.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 984
	},
	{
		"question" : "11) What are the main disadvantages of SASS?",
		"answer" : "<div> <p>Following is a list of main disadvantages of SASS:</p><ul class=\"points\">\n<li>SASS introduces some new features, which may take time for developers to learn these new features present in this preprocessor.</li>\n<li>There may be chances of losing the benefits of the browser's built-in element inspector while using SASS.</li>\n<li>If a team working on the same site, then they will use the same preprocessor. If some people of the team use the SASS and some people use the CSS to edit the files directly, it will become difficult to work with the site.</li>\n<li>In SASS, the code has to be compiled.</li>\n<li>The troubleshooting is difficult in SASS.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 985
	},
	{
		"question" : "37) What are the requirements of SASS system?",
		"answer" : "<div> <p>These are the requirements for Sass system:-\n</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> .Operating System - Cross platform\n.Browser support - Internet Explorer, Google Chrome, Safari, Opera.\n.Programming language - Ruby.\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 986
	},
	{
		"question" : "31) What are different types of functions available in Less?",
		"answer" : "<div> <p>The list of different types of functions in Less is as follows:</p><ul class=\"points\">\n<li>Misc function</li>\n<li>String functions</li>\n<li>List function</li>\n<li>Math function</li>\n<li>Type function</li>\n<li>Color definition function</li>\n<li>Color channel function</li>\n<li>Color operation</li>\n<li>Color blending functions</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 987
	},
	{
		"question" : "12) How can you refer a parent selector in the SASS?",
		"answer" : "<div> <p>We can easily select the parent selector by using the &amp; character. It specifies where we should insert the parent selector.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 988
	},
	{
		"question" : "13) What is the use of list operations in SASS?",
		"answer" : "<div> <p>In SASS, the list operations are used to represent series of values that are separated using commas or space. </p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 989
	},
	{
		"question" : "1) What is XSLT?",
		"answer" : "<div> <div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Questions</a></td>\n<td><a>Java String &amp; Exception Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><h1 class=\"h1\">XSLT Interview Questions</h1><img src=\"https://static.javatpoint.com/interview/images/xslt-interview-questions.png\" alt=\"XSLT Interview Questions\" class=\"imageright\"><p>There is given XSLT interview questions and answers that has been asked in many companies. Let's see the list of top XSLT interview questions.</p><p>XSLT stands for <strong>EXtensible Stylesheet LanguageTransformation</strong>. It is used to transform XML documents into other formats (like transforming XML into HTML).</p><p>For more information: <a>http://www.javatpoint.com/what-is-xslt</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 990
	},
	{
		"question" : "14) What is the use of Selector Nesting in SASS?",
		"answer" : "<div> <p>In SASS, Selector Nesting is a process that offers a way for style sheet authors to compute long selectors by nesting shorter selectors within each other.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 991
	},
	{
		"question" : "10) What do you mean by XPath Axes?",
		"answer" : "<div> <p>XPath axes are used to identify elements by their relationship like parent, child, sibling, etc. in the same manner like path defines the location of the node. For more information: <a>click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 992
	},
	{
		"question" : "15) Does SASS support inline comments?",
		"answer" : "<div> <p>In SASS, the single-line comments // are removed by the .scss preprocessor and don't appear in the .css file, while the comment */is valid CSS and will be preserved between the translation from .scss to your .css file. </p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 993
	},
	{
		"question" : "16) What is the use of the @mixin directive?",
		"answer" : "<div> <p>The @mixin directive is used to define the mixins that include the variables and argument optionally after the name of the mixin.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 994
	},
	{
		"question" : "11) What do you mean by XPath operators? ",
		"answer" : "<div> <p>XPath defines operators and functions on nodes. An XPath expression returns either a node-set, a string, a Boolean, or a number.</p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 995
	},
	{
		"question" : "38) What is the use of @extend directive in SASS?",
		"answer" : "<div> <p>The SASS @extend directive is used to share a set of CSS properties from one selector to another. It is a very important and useful feature of Sass. It allows classes to share a set of properties with one another. It makes your code less and facilitates you to rewrite it repeatedly. For example:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> .message  \n  border: 1px solid #ccc  \n  padding: 10px  \n  color: #333  \n.success  \n  @extend .message  \n  border-color: green  \n.error  \n  @extend .message  \n  border-color: red  \n.warning  \n  @extend .message  \n  border-color: yellow   \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 996
	},
	{
		"question" : "12) What are the different types of operators in XPath?",
		"answer" : "<div> <p>XPath operators can be categorized in different category according to their property. Following are the different types of XPath operators:</p><ul class=\"points\">\n<li>Comparison Operators</li>\n<li>Boolean Operators</li>\n<li>Number Functions/Operators</li>\n<li>String Functions</li>\n<li>Node Functions/Operators</li>\n</ul><p>For more information: <a>click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 997
	},
	{
		"question" : "39) What is the role of @media directive in SASS?",
		"answer" : "<div> <p>The Sass @media directive is used to set style rules to different media types. It supports and extends the @media rules. This directive can be nested inside the selector SASS but the main impact is displayed to the top level of the style sheet. For example:-</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> h2{  \ncolor: violet;  \n}  \n.style{  \nwidth: 500px;  \n@media screen and (orientation: portrait){  \nwidth:200px;  \nmargin-left: 80px;  \n}  \n}  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 998
	},
	{
		"question" : "2) What is the usage of XSLT? ",
		"answer" : "<div> <p>A list specifying the usage of XSLT: </p><ul class=\"points\">\n<li>XSLT is a language for transforming XML documents into XHTML documents or to other XML documents.</li>\n<li>XSLT stands for Extensible Stylesheet Language Transformations.</li>\n<li>It uses XPATH to navigate in XML documents.</li>\n<li>XSLT uses XPATH to identify subsets of the source document tree and perform calculations.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 999
	},
	{
		"question" : "13) What do you understand by XPath comparison operator?",
		"answer" : "<div> <p>XPath comparison operator is used to compare one value to another. There are different type of comparison operators:</p><ul class=\"points\">\n<li>=</li>\n<li>!=</li>\n<li>&lt;</li>\n<li>&gt;</li>\n<li>&lt;=</li>\n<li>&gt;=</li>\n</ul><p>For more information: <a>click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1000
	},
	{
		"question" : "17) How can you use interpolation in SASS?",
		"answer" : "<div> <p>In SASS, we can easily define an element in a variable and interpolate it inside the SASS code. It is useful when we keep our modules in separate files.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 1001
	},
	{
		"question" : "40) What is the use of at-root directive in SASS?",
		"answer" : "<div> <p>The Sass @at-root directive is a collection of nested rules that are used to style block at the root of the document. For example:-</p><div class=\"codeblock\"><textarea name=\"code\" class=\"xml\"> h2{  \ncolor: blue;  \nbackground-color: pink;  \n@at-root {  \n.style{  \n font-size: 20px;  \n font-style: bold;  \n color: violet;  \n }  \n }  \n}  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 1002
	},
	{
		"question" : "3) What are the main parts of XSL document?",
		"answer" : "<div> <ul class=\"points\">\n<li><strong>XSLT:</strong> It is a language for transforming XML documents into various other types of documents.</li>\n<li><strong>XPath:</strong> It is a language for navigating in XML documents.</li>\n<li><strong>XQuery:</strong> It is a language for querying XML documents.</li>\n<li><strong>XSL-FO:</strong> It is a language for formatting XML documents.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1003
	},
	{
		"question" : "18) What do you understand by compressed CSS style?",
		"answer" : "<div> <p>As the name suggests, the compressed CSS style takes the least amount of space compared to all other CSS styles. It provides whitespaces only to separate selectors and newlines at the end of the file.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 1004
	},
	{
		"question" : "14) What do you mean by Xpath Boolean operatos?",
		"answer" : "<div> <p>Boolean operators are simple words AND, OR, NOT etc. used to combine or exclude keywords. They connect your search words together to either concise or expand your set of results. For more information: <a>click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1005
	},
	{
		"question" : "1) What is Less?",
		"answer" : "<div> <img src=\"https://static.javatpoint.com/interview/images/less-interview-questions.png\" alt=\"Less Interview Questions\" class=\"imageright\"><h1 class=\"h1\">LESS Interview Questions</h1><p>A list of top frequently asked <strong>LESS interview questions</strong> and answers are given below.</p><p>The Learner Style Sheet (Less) is a backward-compatible language that can be compiled into the Cascading Style Sheet (CSS) and runs on both the client side and server side. It is an open source language and cross-browser compatible.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1006
	},
	{
		"question" : "19) Can you nest variables within variables in SASS? ",
		"answer" : "<div> <p>In SASS, the interpolation of variables is currently not possible. However, we can use interpolation of placeholders.</p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 1007
	},
	{
		"question" : "4) How is XSLT related to XSL?",
		"answer" : "<div> <p>XSLT stands for eXtensible Stylesheet Language Transformations. It is a language used to convert XML documents to XHTML or other XML documents. XSLT is nothing but transforming XSL's.</p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1008
	},
	{
		"question" : "15) What do you understand by XPath number operators?",
		"answer" : "<div> <p>The XPath number operators are used to do mathematical operations on different keywords. There are five number operators in XPath.</p><ul class=\"points\">\n<li>+</li>\n<li>-</li>\n<li>*</li>\n<li>div</li>\n<li>mod</li>\n</ul><p>For more information, go to the link <a>click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1009
	},
	{
		"question" : "5) Explain the working of XSLT?",
		"answer" : "<div> <p>The XSLT stylesheet is written in XML format. It is used to define the transformation rules to be applied on the target XML document. The XSLT processor takes the XSLT stylesheet and applies the transformation rules on the target XML document and then it generates a formatted document in the form of XML, HTML, or text format. At the end it is used by XSLT formatter to generate the actual output and displayed on the end-user.</p><p><strong>Image representation: </strong></p><img src=\"https://static.javatpoint.com/xslt/images/what-is-xsltl1.png\" alt=\"What is xslt 1\"></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1010
	},
	{
		"question" : "16) What do you understand by XPath number functions?",
		"answer" : "<div> <p>In XPath, number functions are used to fetch the different type of values from the expressions. For example, ceiling value, floor value etc. </p><p>There are four types of number functions in XPath:</p><ul class=\"points\">\n<li>ceiling()</li>\n<li>floor()</li>\n<li>round()</li>\n<li>sum()</li>\n</ul><p>For more information, go to the link <a>click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1011
	},
	{
		"question" : "6) What are the advantages of using XSLT?",
		"answer" : "<div> <ul class=\"points\">\n<li>XSLT provides an easy way to merge XML data into presentation because it applies user defined transformations to an XML document.</li>\n<li>Its output can be HTML, XML, or any other structured document.</li>\n<li>XSLT provides XPath to locate elements/attribute within an XML document. So it is more convenient way to traverse an XML document rather than a traditional way, by using scripting language.</li>\n<li>XSLT is template based. So it is more flexible to changes in documents than low level DOM and SAX.</li>\n<li>XSLT makes the application UI script clean and easier to maintain.</li>\n<li>XSLT templates are based on XPath pattern which is very powerful in terms of performance to process the XML document.</li>\n<li>XSLT can be used as a validation language as it uses tree-pattern-matching approach.</li>\n<li>You can change the output simply modifying the transformations in XSL files.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1012
	},
	{
		"question" : "20) What do you understand by LESS?",
		"answer" : "<div> <p>LESS is a dynamic style sheet producing language. It is a CSS preprocessor that extends CSS with dynamic behavior. It allows for variables, mixins, operations, and functions and runs on the server-side and client-side both. </p></div>",
		"category" : "Web",
		"sub_category" : "Sass",
		"id" : 1013
	},
	{
		"question" : "2) When does the Less programming language first invented?",
		"answer" : "<div> <p>The Less programming language was first invented in 2009.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1014
	},
	{
		"question" : "15) What is the syntax of XQuery language?",
		"answer" : "<div> <p>The elements, attributes and variables in XQuery language must be valid XML names and follow case sensitivity. For more information: <a>http://www.javatpoint.com/xquery-syntax</a></p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1015
	},
	{
		"question" : "7) What do you mean by XSLT <xsl: value-of> element?",
		"answer" : "<div> <p>The XSLT &lt;xsl: value-of&gt; element is used to extract the value of selected node. It puts the value of selected node as per XPath expression.</p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-value-of-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1016
	},
	{
		"question" : "17) How to use XQuery FLWOR with HTML?",
		"answer" : "<div> <p>XQuery add is used for adding elements, attributes, HTML elements and text in the results from the input documents.</p><p>For more information: <a>http://www.javatpoint.com/xquery-add</a></p><h3>\n</h3><p>If you want to put HTML element with XQuery FLWOR, you should have to add and tags into the FLWOR expression.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">&lt;ul&gt;  \n{  \nfor $x in doc(\"books.xml\")/bookstore/book/title  \norder by $x  \nreturn &lt;li&gt;{$x}&lt;/li&gt;  \n}  \n&lt;/ul&gt;  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1017
	},
	{
		"question" : "3) In which language does the Less first written? ",
		"answer" : "<div> <p>The LESS was first written in Ruby in 2009.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1018
	},
	{
		"question" : "8) What is the use of XSLT <xsl: for-each> element?",
		"answer" : "<div> <p>The XSLT &lt;xsl: for-each&gt; element is used to apply a template repeatedly on each node.</p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-for-each-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1019
	},
	{
		"question" : "18) What are the different types of XQuery functions?",
		"answer" : "<div> <p> A list of different types of XQuery functions:</p><ul class=\"points\">\n<li>Accessor Functions</li>\n<li>Error and Trace Functions</li>\n<li>Numeric Functions</li>\n<li>String Functions</li>\n<li>AnyURI Functions</li>\n<li>Boolean Functions</li>\n<li>Duration/Date/Time Functions</li>\n<li>QName Functions</li>\n<li>Node Functions</li>\n<li>Sequence Functions</li>\n<li>Context Functions</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1020
	},
	{
		"question" : "4)What is the current language used in Less?",
		"answer" : "<div> <p>Currently, Less is using JavaScript.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1021
	},
	{
		"question" : "9) What is the usage of XSLT <xsl: sort> element?",
		"answer" : "<div> <p>The XSLT &lt;xsl:sort&gt; element is used to specify a sort criteria on the nodes. It displays the output in sorted form.</p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-sort-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1022
	},
	{
		"question" : "5) Who is the inventor of Less?",
		"answer" : "<div> <p>The Less is designed and developed by Alexis Sellier and Dmitry Fadeyev.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1023
	},
	{
		"question" : "6) What is the extension of Less file?",
		"answer" : "<div> <p>The \".less\" is the extension of the Less file. It is always required to use \".Less\" extension in Less document file.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1024
	},
	{
		"question" : "10) What is the usage of XSLT <xsl: if> element? ",
		"answer" : "<div> <p>The XSLT &lt;xsl:if&gt; element is used to specify a conditional test against the content of the XML file.</p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-if-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1025
	},
	{
		"question" : "19) What are the uses of time and date function in XQuery?",
		"answer" : "<div> <p>In XQuery, time and date function are used to get time and date. There are three types of time and date functions in XQuery:</p><ul class=\"points\">\n<li>current-date()</li>\n<li>current-time()</li>\n<li>current-datetime()</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1026
	},
	{
		"question" : "7) In how many ways we can use Less?",
		"answer" : "<div> <p>There are three ways to use Less:</p><ul class=\"points\">\n<li>Through the command line.</li>\n<li>Through a third-party tool.</li>\n<li>You can download Less as a script file for the browser.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1027
	},
	{
		"question" : "20) What is the use of current-date() function in XQuery?",
		"answer" : "<div> <p>The XQuery current date function is used to retrieve the current date.</p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1028
	},
	{
		"question" : "11) What do you mean by XSLT <xsl: choose> element?",
		"answer" : "<div> <p>The XSLT &lt;xsl:choose&gt; element is used to specify a multiple conditional test against the content of nodes. It is used with &lt;xsl:otherwise&gt; and &lt;xsl:when&gt; elements.</p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-choose-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1029
	},
	{
		"question" : "8) How do you represent a variable in Less?",
		"answer" : "<div> <p>It is required to declare a variable with @ symbol and uses a colon (:) to assigned the particular value in the variable. It is also necessary to add a semi-colon (;) after the value of the variable.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">@primarycolor: #FF7F50;\n@color:#800080;\nh1 {\n   color: @primarycolor;\n}\n\nh3 {\n   color: @color;\n}\n</textarea></div><p>In the above example of Less, the two variables used in the Less programming having values #FF7F50 and #800080.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1030
	},
	{
		"question" : "21) What is the use of current-time() function in XQuery?",
		"answer" : "<div> <p>The XQuery current-time function is used to retrieve the current time.</p><p>For more information: <a>http://www.javatpoint.com/xquery-current-time-function</a></p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1031
	},
	{
		"question" : "9) What is the use of Mixins in Less?",
		"answer" : "<div> <p>In Less, Mixins facilitates you to add the set of properties from one rule-set into another rule-set. It includes class names as its properties. Mixins can be declared as the same way as CSS style using a class or id selector. It can store multiple values and can be reused in the code whenever necessary.</p><p><strong>Syntax:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">    .round-borders {  \n      border-radius: 5px;  \n      -moz-border-radius: 5px;  \n      -webkit-border-radius: 5px;  \n    }  \n    #menu {  \n      color: gray;  \n      .round-borders;  \n    }  \n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1032
	},
	{
		"question" : "32) Which clause is compulsory in XQuery and why?",
		"answer" : "<div> <p>The XQuery current-date time() function is used to return the current date and time.</p><p>For more information: <a>http://www.javatpoint.com/xquery-current-datetime-function</a></p><p>Path and FLWOR both can be used to query the XML file but differently. In XPath expression, we can specify the node which should be selected from the XML document along with a condition which should be filled to fetch the XML document. A condition can be of any type, for example, if we want to display the names of the books whose price is less than thirty dollars. Such condition can be applied to XPath expressions.</p><p>Whereas in FLWOR expression as the name suggests 'F' 'L' 'W' 'O' 'R' refers to 'for' 'let' 'Where' 'Order by' 'Return.' Where Return is compulsory and the rest of the elements such as 'for' 'let' 'where' 'order by' are optional.</p><p>Every element inside the XML document is treated as a node.</p><p>There were mainly seven kinds of nodes available in the XQuery listed below:</p><ul class=\"points\">\n<li>Element</li>\n<li>Attribute</li>\n<li>Text</li>\n<li>Namespace</li>\n<li>Processing-instruction</li>\n<li>Comment</li>\n<li>Document (root) node.</li>\n</ul><p>Atomic values refer to the nodes with no parent and children.</p><p><strong>Parent</strong>: Each element and attribute has one parent node.</p><p><strong>Children</strong>: Elements node may have zero, one or multiple children.</p><p><strong>Siblings</strong>: Siblings refers to the nodes which have the same parent node.</p><p><strong>Ancestors</strong>: A node's parent's parent' parents... etc.</p><p><strong>Descendants</strong>: A node's children's children's .... Etc.</p><p>doc(\"books123.xml\")/bookstore/book[price&lt;30]</p><p>for $x in doc(\"books123.xml\")/bookshop/book</p><p>where $x/price&gt;60</p><p>order by $x/category</p><p>return $x/category</p><p>For clause is used inside the FLWOR expression to bind a variable to each item returned by the expression. There can be one or more 'for' clause in the same expression.</p><p>Order by clause is used inside the FLWOR expression to arrange the returned value by the FLWOR expression either in ascending order or in descending order or alphabetically. Order by clause is optional in FLWOR.</p><p>Return clause is mandatory to be added in the FLWOR expression because the primary objective of the query is to select some data.</p><br><br></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1033
	},
	{
		"question" : "10) What is the role of nesting in Less programming?",
		"answer" : "<div> <p>The nesting is used to make the code simple, clean and Less complicated by allowing it to follow some visual hierarchy. For example nesting of classes can be done in Less programming.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"java\">.container {\n   h1 {\n      font-size: 25px;\n      color:#E45456;\n   }\n   p {\n      font-size: 25px;\n      color:#3C7949;\n   }\n\n   .myclass {\n      h1 {\n         font-size: 25px;\n         color:#E45456;\n      }\n      p {\n         font-size: 25px;\n         color:#3C7949;\n      }\n   }\n}\n</textarea></div><p>In the above Less document example of nesting myclass is the subclass of container class.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1034
	},
	{
		"question" : "2) Why to use XHTML?",
		"answer" : "<div> <div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Interview Questions</a></td>\n<td><a>Java String &amp; Exception Interview Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><br><br><h1 class=\"h1\">XHTML Interview Questions</h1><img src=\"https://static.javatpoint.com/interview/images/xhtml-interview-questions.png\" alt=\"XHTML Interview Questions\" class=\"imageright\"><p>XHTML stands for <strong>Extensible Hypertext Markup Language.</strong> It is a combination of XML and HTML. It is a more formal and stricter version of HTML.</p><p>XHTML is more formal and stricter version of HTML. i.e.</p><ul class=\"points\">\n<li>It has properly nested elements.</li>\n<li>All XHTML elements must always be closed.</li>\n<li>All XHTML elements must be written in lower case.</li>\n<li>Every XHTML document must have one root element. </li>\n</ul><p>That is the reason behind its preferences over HTML because; most of the web pages contain bad HTML. </p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1035
	},
	{
		"question" : "3) What is the difference between XHTML and HTML?",
		"answer" : "<div> <p>There are some changes in XHTML as compared to HTML:</p><ul class=\"points\">\n<li>All documents must have a DOCTYPE. </li>\n<li>The xmlns attribute in &lt;html&gt; is mandatory and must specify the xml namespace for the document.</li>\n<li>&lt;html&gt;, &lt;head&gt;, &lt;title&gt;, and &lt;body&gt; are mandatory with their respective closing tags.</li>\n<li>All XHTML tags must be in lower case.</li>\n<li>All XHTML tags must be closed.</li>\n<li>All XHTML tags must be properly nested.</li>\n<li>The XHTML documents must have one root element. </li>\n<li>All XHTML attributes must be added properly.</li>\n<li>All XHTML attributes must be in lower case.</li>\n<li>The name attribute has changed.</li>\n<li>XHTML attributes cannot be shortened.</li>\n<li>XHTML attribute values must be quoted.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1036
	},
	{
		"question" : "4) How is XHTML better than HTML?",
		"answer" : "<div> <p>Following are the reasons specifying why XHTML is better than HTML:</p><ul class=\"points\">\n<li>XHTML uses style sheets instead of font, color and alignment tags of HTML.</li>\n<li>XHTML allows to style sheets and scripts embedding in CDATA section.</li>\n<li>XML of XHTML makes easy the integration of new elements as subsets of SGML.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1037
	},
	{
		"question" : "17) What do you know by XPath string functions?",
		"answer" : "<div> <p>The XPath string functions specify some rules which are used to get strings according to your preferences. </p><p>For more information, go to the link <a>click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1038
	},
	{
		"question" : "5) What is XHTML validation?",
		"answer" : "<div> <p>XHTML validation is a process used to validate XHTML documents with W3C's validator.</p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1039
	},
	{
		"question" : "12) What is the use of XSLT <xsl: key> element?",
		"answer" : "<div> <p>The XSLT &lt;xsl:key&gt; element is used to specify a named name-value pair assigned to a specific element in an XML document. This key is used with the key() function in XPath expressions to access the assigned elements in an XML document. </p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-key-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1040
	},
	{
		"question" : "6) Is it difficult to write codes in XHTML rather than HTML?",
		"answer" : "<div> <p>XHTML is not very different from HTML 4.01, so you can easily adopt it. You should start to write your HTML code in lowercase letters.</p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1041
	},
	{
		"question" : "18) How to define relationship among nodes?",
		"answer" : "<div> <p>There are following types of nodes in XPath. These nodes are related to each other to form a tree like structure. These nodes are:</p><ul class=\"points\">\n<li>Parents</li>\n<li>Children</li>\n<li>Siblings</li>\n<li>Ancestors</li>\n<li>Descendents</li>\n</ul><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">&lt;book&gt;\n  &lt;title&gt;Parallel Algorithm&lt;/title&gt;\n  &lt;author&gt;Rashmi Sharma&lt;/author&gt;\n  &lt;year&gt;2008&lt;/year&gt;\n  &lt;price&gt;150.00&lt;/price&gt;\n&lt;/book&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1042
	},
	{
		"question" : "7) Can elements be overlapped in XHTML or not?",
		"answer" : "<div> <p> In XHTML elements cannot be overlapped.</p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1043
	},
	{
		"question" : "11) What are the color channel functions in Less?",
		"answer" : "<div> <p>In Less, color channel functions are in-built functions used to set a value about a channel according to the color definition. The HSL colors consist of hue, saturation and lightness channel and the RGB colors consist of a red, green and blue channel.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1044
	},
	{
		"question" : "8) Write an example that shows every attribute must have a value in XHTML? ",
		"answer" : "<div> <p>Let's take an example to show you in XHTML every attribute must have a value.</p><p><strong>Example in HTML:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">&lt;ol compact&gt; &lt;input type=\"radio\" name=\"title\" value=\"decline\" checked&gt;decline&lt;/input&gt;\n</textarea></div><p><strong>Same example in XHTML:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">&lt;ol compact=\"compact\" &gt; &lt;input type=\"radio\" name=\"title\" value=\"decline\" checked=\"checked\"&gt;decline&lt;/input&gt; &lt;/p&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1045
	},
	{
		"question" : "19) What are the different standard functions in XPath?",
		"answer" : "<div> <p>XPath has more than 101 build-in functions. These built-in functions are used in Boolean values, string values, numeric values, date and time comparison, sequence manipulation etc.</p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1046
	},
	{
		"question" : "20) What are the different XPath Axes?",
		"answer" : "<div> <p>XPath axes are used to set relation of current node with another node. A list of XPath axes to set relation with other nodes are: </p><ul class=\"points\">\n<li><strong>ancestor:</strong> It is used to get all ancestor (parent, grandparent etc) of current node. </li>\n<li><strong>ancestor-or-self:</strong> It is used to get all ancestors (parent, grandparent, etc.) of the current node and also the current node.</li>\n<li><strong>attribute:</strong> It is used to get all attributes of the current node.</li>\n<li><strong>child :</strong> It is used to retrieve all children of the current node.</li>\n<li><strong>descendant:</strong> It is used to get all descendants (children, grandchildren, etc.) of the current node.</li>\n<li><strong>namespace: </strong>It is used to get all namespace nodes of the current node.</li>\n<li><strong>preceding:</strong> It is used to get everything in the document that is comes before the start tag of the current node. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1047
	},
	{
		"question" : "13) What is the use of XSLT <xsl: message> element?",
		"answer" : "<div> <p>The XSLT &lt;xsl:message&gt; element is used to display the error message and help to debug the XSLT processing. It is similar to JavaScript alerts. This element buffers a message to XSLT processor which terminates the processing and sends a message to the caller application to show an error message.</p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-message-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1048
	},
	{
		"question" : "21) What is an atomic value in XPath?",
		"answer" : "<div> <p>Nodes that has no parent node or child node are called as Atomic values.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">&lt;book&gt;\n  &lt;title&gt;Parallel Algorithm&lt;/title&gt;\n  &lt;author&gt;Rashmi Sharma&lt;/author&gt;\n  &lt;year&gt;2008&lt;/year&gt;\n  &lt;price&gt;150.00&lt;/price&gt;\n&lt;/book&gt;\n</textarea></div><p>Here, Rashmi Sharma is an atomic value. </p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1049
	},
	{
		"question" : "14) What is the use of XSLT <xsl: apply-template> element?",
		"answer" : "<div> <p>The XSLT &lt;xsl:apply-template&gt; element makes XSLT processor to find the appropriate template to apply according to the type and context of each selected node.</p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-apply-template-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1050
	},
	{
		"question" : "12) What is the use of data URI (Uniform Resource Identifier) in LESS?",
		"answer" : "<div> <p>With the help of Data URI, an image can be embedded directly in the stylesheet.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1051
	},
	{
		"question" : "15) What is the use of XSLT <xsl: import> element?",
		"answer" : "<div> <p>The XSLT &lt;xsl:import&gt; element is used to import the content of one stylesheet to another stylesheet. The importing stylesheet has higher precedence over imported stylesheet. </p><p>For more information: <a>http://www.javatpoint.com/xslt-xsl-import-element</a></p></div>",
		"category" : "Web",
		"sub_category" : "XSLT",
		"id" : 1052
	},
	{
		"question" : "13) What does the \"Source Map Less Inline\" option represent?",
		"answer" : "<div> <p>The \"Source Map Less Inline\" option represents that all the CSS files must be included into the source map.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1053
	},
	{
		"question" : "9) What is XHTML Modularization?",
		"answer" : "<div> <p>The decomposition of XHTML into a group of modules that are abstract to provide modularity is known as XHTML Modularization.</p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1054
	},
	{
		"question" : "1) What is XPath?",
		"answer" : "<div> <div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Interview Questions</a></td>\n<td><a>Java String &amp; Exception Interview Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><br><br><img src=\"https://static.javatpoint.com/interview/images/xpath-interview-questions.png\" alt=\"XPath Interview Questions\" class=\"imageright\"><h1 class=\"h1\">XPath Interview Questions</h1><p>There is given XPath interview questions and answers that has been asked in many companies. Let's see the list of top XPath interview questions.</p><p>XPath is an important and core component of XSLT standard. It is used to traverse the elements and attributes in an XML document. For more: <a>Click here</a></p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1055
	},
	{
		"question" : "10) What is the use of XHTML Modules?",
		"answer" : "<div> <p>The XHTML modules are utilized in the XML document type definition language.</p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1056
	},
	{
		"question" : "11) Why to use XHTML Modularization?",
		"answer" : "<div> <p>XHTML modularization specifies a well defined set of XHTML elements which can be compiled and extended. It supports a specific devise by using standard building blocks and standard methods for building blocks usage.</p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1057
	},
	{
		"question" : "14) What is the difference between Less and SASS?",
		"answer" : "<div> <table class=\"alt\">\n<tbody><tr>\n<th>Less</th>\n<th>Sass</th>\n</tr>\n<tr>\n<td>Less is coded in JavaScript.</td>\n<td>SASS is coded in ruby.</td>\n</tr>\n<tr>\n<td>It is processed on the client side</td>\n<td>It is processed at the client side.</td>\n</tr>\n<tr>\n<td>Variables are declared with the @ symbol.</td>\n<td>Variables are declared with the $ symbol.</td>\n</tr>\n<tr>\n<td>For mixing, it uses Less Mixins.</td>\n<td>For mixing, it uses Compass.</td>\n</tr>\n</tbody></table></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1058
	},
	{
		"question" : "22) What happens about the presence of the top-level element in XSLT?",
		"answer" : "<div> <ul class=\"points\">\n<li>The top-level elements don't have any effect on the behaviour of XSLT elements.</li>\n<li>The functions that are defined with it also don't have any affect in the document.</li>\n<li>The top-level elements are not permitted to be used by specifying the xsl:apply templates. </li>\n<li>XSLT process is provided to ignore the top-level elements and ignore some of it if an error occurs. </li>\n<li>XSLT top-element element doesn't recognize the namespace URI and can be provided using other sources.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1059
	},
	{
		"question" : "12) How can you define DTD in XHTML?",
		"answer" : "<div> <p>There are three types of DTD used in XHTML.</p><ul class=\"points\">\n<li>Strict DTD</li>\n<li>Transitional DTD</li>\n<li>Frameset DTD</li>\n</ul><p>You can use any of the DTD on the top of the XHTML document.</p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1060
	},
	{
		"question" : "15) How is Less is similar to Sass?",
		"answer" : "<div> <p>Following are the similarities between Less and Sass:</p><ul class=\"points\">\n<li>Namespaces are similar in both. </li>\n<li>Color functions are identical in both. </li>\n<li>Nesting capabilities are identical in both. </li>\n<li>JavaScript evaluations are identical in both.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1061
	},
	{
		"question" : "13) How to create a Hello World page in XHTML?",
		"answer" : "<div> <p>The Hello World page of XHTML looks like this:</p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">&lt;?xml version=\"1.0\" encoding=\"iso-8859-1\"?&gt;\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt; \n&lt;html xml:lang=\"en\" lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;title&gt;Hello World&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;My first Web page.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1062
	},
	{
		"question" : "1) What is XQuery?",
		"answer" : "<div> <div id=\"interviewcategory\">\n<table class=\"alt\">\n<tbody><tr><td><a>Java Basics Interview Questions</a></td>\n<td><a>Java OOPs Interview Questions</a></td></tr>\n<tr><td><a>Java Multithreading Interview Questions</a></td>\n<td><a>Java String &amp; Exception Interview Questions</a></td></tr>\n<tr><td><a>Java Collection Interview Questions</a></td>\n<td><a>JDBC Interview Questions</a></td></tr>\n<tr><td><a>Servlet Interview Questions</a></td>\n<td><a>JSP Interview Questions</a></td></tr>\n<tr><td><a><span>Spring Interview Questions</span></a></td><td><a><span>Hibernate Interview Questions</span></a></td></tr>\n<tr><td><a><span>PL/SQL Interview Questions</span></a></td><td><a><span>SQL Interview Questions</span></a></td></tr>\n<tr><td><a><span>Oracle Interview Questions</span></a></td><td><a><span>Android Interview Questions</span></a></td></tr>\n<tr><td><a><span>SQL Server Interview Questions</span></a></td><td><a><span>MySQL Interview Questions</span></a></td></tr>\n</tbody></table>\n</div><br><br><img src=\"https://static.javatpoint.com/interview/images/xquery-interview-questions.png\" alt=\"XQuery Interview Questions\" class=\"imageright\"><h1 class=\"h1\">XQuery Interview Questions</h1><p>Here, is given XQuery interview questions and answers that have been asked in many companies. Let's see the list of top XQuery interview questions.</p><p>XQuery is a case-sensitive XML query language which was designed to query XML data. It is same like SQL for database tables. XQuery is used to retrieve data from the XML file.</p><p>Example: Suppose we have to find out the list of students who situated in a particular area in an XML file. XQuery can solve these type of queries.</p><p>For more information: <a>http://www.javatpoint.com/what-is-xquery</a></p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1063
	},
	{
		"question" : "16) What is &combinator in Less?",
		"answer" : "<div> <p>In LESS, &amp;combinator is used to combine the nested selector with the parent selector. </p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1064
	},
	{
		"question" : "2) What is the use of XQuery language?",
		"answer" : "<div> <p>XQuery is a functional language for finding and extracting elements and attributes from XML documents. Some usage of the XQuery language is as follows:</p><ul class=\"points\">\n<li>To retrieve both hierarchal and tabular data.</li>\n<li>To query both tree and graphical structures.</li>\n<li>To build web pages.</li>\n<li>To query web pages.</li>\n<li>To transform XML documents into XHTML documents.</li>\n<li>Best for XML-based databases and object-based databases. Object databases are much more flexible and powerful than purely tabular databases. </li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1065
	},
	{
		"question" : "2) What are the main features of XPath?",
		"answer" : "<div> <ul class=\"points\">\n<li>XPath is a major element in the XSLT standard.</li>\n<li>It is syntax for defining parts of an XML document.</li>\n<li>XPATH stands for XML Path Language.</li>\n<li>It is used for navigating in XML documents.</li>\n<li>It can be used to query data from XML documents.</li>\n<li>It uses path expressions to navigate in XML documents.</li>\n<li>XPATH expressions are case sensitive.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1066
	},
	{
		"question" : "3) What do you mean by XPath expressions?",
		"answer" : "<div> <p>XPath defines a pattern or path expression to select nodes or node sets in an XML document. These patterns are used by XSLT to perform transformations. XPath specifies seven types of nodes that can be output of the execution of the XPath expression.</p><ul class=\"points\">\n<li>Root</li>\n<li>Element</li>\n<li>Text</li>\n<li>Attribute</li>\n<li>Comment</li>\n<li>Processing Instruction</li>\n<li>Namespace</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1067
	},
	{
		"question" : "4) What do you mean by XPath nodes?",
		"answer" : "<div> <p>A node is an XML document which is specified in the tree structure.</p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1068
	},
	{
		"question" : "5) How many types of nodes in XPath?",
		"answer" : "<div> <p>There are seven kinds of nodes in XPath:</p><ul class=\"points\">\n<li>Element</li>\n<li>Attribute</li>\n<li>Text</li>\n<li>Namespace</li>\n<li>Processing-instruction</li>\n<li>Comment</li>\n<li>Document nodes</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1069
	},
	{
		"question" : "17) Does Less support operations?",
		"answer" : "<div> <p>Yes, Less supports various arithmetic operations such +,? , *, / that can be operated on any color or variable.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1070
	},
	{
		"question" : "3) In which year XQuery first appeared?",
		"answer" : "<div> <p>XQuery was first appeared in 2007. It was designed by W3C and became the W3C recommendation on January 23, 2007. XQuery 3.0 is a W3C recommendation from April 8, 2014.</p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1071
	},
	{
		"question" : "18) What is the use of Escaping in Less?",
		"answer" : "<div> <p>The escaping is used when there is a requirement to execute CSS file with invalid syntax.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1072
	},
	{
		"question" : "6) What is XPath syntax?",
		"answer" : "<div> <p>The XPath syntax specifies the different nodes, path expressions, path notation, predicates and URLs which are used to define the XML document.</p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1073
	},
	{
		"question" : "4) Explain the syntax rules for XQuery.",
		"answer" : "<div> <p>A list of basic syntax rules for XQuery:</p><ul class=\"points\">\n<li>XQuery is case sensitive.</li>\n<li>Attributes and variables that we used should have valid XML names in XQuery elements.</li>\n<li>XQuery should be written within single and double quotes.</li>\n<li>XQuery variables should be defined as $(variable name). For example: $book.</li>\n<li>XQuery comment can be written between colon (:). Like :(: Comment in XQuery:)</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1074
	},
	{
		"question" : "19) Are there any alternatives that can use in place of Less?",
		"answer" : "<div> <p>Yes, there are various other alternatives can be used in place of Less such as SCSS, stylus.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1075
	},
	{
		"question" : "5) What is the difference between XQuery and XPath?",
		"answer" : "<div> <p><strong>Difference between XQuery and XPath:</strong></p><ul class=\"points\">\n<li>XQuery is the functional programming and query language while XPath is XML path language.</li>\n<li>XQuery is used to extract and manipulate data from either XML documents or relational databases while XPath is used to compute values like strings, numbers and Boolean types from another XML documents.</li>\n</ul><p>For more information: <a>http://www.javatpoint.com/difference-between-xquery-and-xpath</a></p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1076
	},
	{
		"question" : "20) How can you invoke the compiler via command line in Less?",
		"answer" : "<div> <p>To invoke the compiler follow the below command :</p><ol class=\"points\">\n<li>$ Lessc styles.Less</li>\n</ol></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1077
	},
	{
		"question" : "21) What is the purpose of e() function in Less?",
		"answer" : "<div> <p>The role of e() function is to escape a value from the Less compiler.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1078
	},
	{
		"question" : "22) How can you create a loop structure in Less?",
		"answer" : "<div> <p>When recursive mixins are combined with Pattern matching and guard expressions, it can create various iterative/loop structures.</p></div>",
		"category" : "Web",
		"sub_category" : "Less",
		"id" : 1079
	},
	{
		"question" : "6) What is the difference between XQuery and XSLT?",
		"answer" : "<div> <ul class=\"points\">\n<li>XQuery is program driven while XSLT is document-driven.</li>\n<li>XQuery is declarative while XSLT is functional.</li>\n<li>XSLT is written in XML while XQuery is not written in XML.</li>\n</ul><p>For more information: <a>http://www.javatpoint.com/xquery-vs-xslt</a></p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1080
	},
	{
		"question" : "7) How to define functions in XQuery?",
		"answer" : "<div> <p>XML has many built-in functions. XQuery functions generally made perform with string values, numeric values, date and time comparisons, Boolean values.</p><p>XQuery also facilitates you to make your functions. </p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1081
	},
	{
		"question" : "7) What are the different types of location paths in XPath?",
		"answer" : "<div> <p>There are two types of location paths used to specify the location of node in XML documents. These paths are absolute or relative path.</p></div>",
		"category" : "Web",
		"sub_category" : "XPath",
		"id" : 1082
	},
	{
		"question" : "8) How to call XQuery functions:",
		"answer" : "<div> <p><strong>Example 1:</strong> When you use function in an element.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">&lt;name&gt;{uppercase($booktitle)}&lt;/name&gt;\n</textarea></div><p><strong>Example 2:</strong> When you use function in the predicate of a path expression.</p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">doc(\"bookmart.xml\")/bookstore/book[substring(title,1,5)='Jungle']\n</textarea></div><p><strong>Example 3:</strong> When you use function in a let clause</p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">let $name := (substring($booktitle,1,4))\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1083
	},
	{
		"question" : "9) How to perform the comparison in XQuery?",
		"answer" : "<div> <p>In XQuery, a comparison is performed with the general comparison or value comparison.</p><p><strong>1. General Comparison:</strong> It is achieved by using the following symbols.</p><p><strong>Ex:</strong> =, !=, &lt;, &lt;=, &gt;, &gt;=</p><p><strong>2. Value Comparison:</strong> The value comparison is performed by using the following symbols.</p><p><strong>Ex:</strong> ne, lt, le, eq, ge, gt.</p><p><strong>See this example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">$bookstore//book/@q &gt; 100\n</textarea></div><p>If any q attributes have values higher than 100, the expression returns true otherwise false.</p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1084
	},
	{
		"question" : "10) What type of queries can the XQuery solve?",
		"answer" : "<div> <p>XQuery can be used to solve the following queries in XML data:</p><ul class=\"points\">\n<li>XQuery is used to retrieve information in a web service.</li>\n<li>It is used to generate the summary report.</li>\n<li>It is used to transform data from XML to XHTML.</li>\n<li>It can be used when we want some relevant information from Web documents.</li>\n</ul></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1085
	},
	{
		"question" : "11) What do you mean by XQuery FLWOR?",
		"answer" : "<div> <p><strong>FLWOR</strong> is an acronym which stands for \"For, Let, Where, Order by, Return.\"</p><p><strong>For -</strong> It is used to select a sequence of nodes.</p><p><strong>Let -</strong> It is used to bind a sequence to a variable.</p><p><strong>Where -</strong> It is used to filter the nodes.</p><p><strong>Order by -</strong> It is used to sort the nodes.</p><p><strong>Return -</strong> It is used to specify what to return (gets evaluated once for every node). </p><p>For more information: <a>http://www.javatpoint.com/xquery-flwor</a></p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1086
	},
	{
		"question" : "12) What is the use of XQuery HTML format?",
		"answer" : "<div> <p>XQuery HTML format is a way to transform an XML document into an HTML page. For more information: <a>http://www.javatpoint.com/xquery-html-format</a></p></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1087
	},
	{
		"question" : "13) What is selecting and filtering element in XQuery?",
		"answer" : "<div> <p>Selecting and filtering refer to query to the database for selecting a group of data and filtering that data for a specific type. For example to select the name of books whose price is less than 30 dollars? XQuery FLWOR and Path expression are used for selecting and filtering the XML elements. Both are used to select and filter the desired elements.</p><p><strong>For example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">for $a in doc(\"bookmart.xml\")/bookstore/book\nwhere $a/price&lt;150\norder by $a/title\nreturn $a/title\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1088
	},
	{
		"question" : "14) How to perform conditional operations in XQuery?",
		"answer" : "<div> <p>Conditional operation in XQuery is If-Then-Else operation. Let?s take an example to see how to use it:</p><p><strong>Example:</strong></p><div class=\"codeblock\"><textarea name=\"code\" class=\"html\">for $a in doc(\"bookmart.xml\")/bookstore/book\nreturn\tif ($a/@category=\"ADVENTURE\")\nthen &lt;child&gt;{data($a/title)}&lt;/child&gt;\nelse &lt;adult&gt;{data($a/title)}&lt;/adult&gt;\n</textarea></div></div>",
		"category" : "Web",
		"sub_category" : "XQuery",
		"id" : 1089
	},
	{
		"question" : "14) What is the need of modular DTDs?",
		"answer" : "<div> <p>Modular DTD makes it easy to deploy new deployments. An application only supports subset of XHTML. For example a mobile phone, Internet TV etc. only require a subset of XHTML.</p></div>",
		"category" : "Web",
		"sub_category" : "XHTML",
		"id" : 1090
	}
]
